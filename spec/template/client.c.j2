{% extends "base/wrap.c.j2" %}
{% block headers %}
#include <sys/syscall.h>
{{ super() }}

{% endblock %}

{% block call %}
    {{ func.name }}_INDEXED *packed_data = malloc(sizeof({{ func.name }}_INDEXED));
    {% for arg in func.args %}
    packed_data->args.a{{ loop.index }} = {{ arg.name }};
    {% endfor %}
    {% if not func.void %}
    {{ func.return }} ret;
    {% else %}
    int ret;
    {% endif %}
    syscall(SYS_proxy, (void *)packed_data, &ret);
    {% if not func.void %}
    return ret;
    {% endif %}
{% endblock %}
