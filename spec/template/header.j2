{% include "headers.j2" %}

{% set guard = name.upper().replace('.', '_') -%}
#ifndef {{ guard }}
#define {{ guard }}

typedef struct {
    int format;
    void *func;
    void *args;
} UnknownCall;

enum FORMAT {
{%- for f in formats %}
    FORMAT_{{ f.types }},
{%- endfor %}
};

{% for f in formats %}
typedef {{ f.return }} (*FUNC_{{ f.types }})({{ f.args|args }});
typedef struct {
    {%- for arg in f.args %}
    {{ arg.type }} a{{ loop.index }};
    {%- endfor %}
} ARGS_{{ f.types }};
typedef struct {
    int format;
    FUNC_{{ f.types }} func;
    ARGS_{{ f.types }} args;
} PACKED_{{ f.types }};
{% endfor %}

void glPackedCall(const UnknownCall *packed);
{% for func in functions -%}
{{ func.return }} {{ func.name }}({{ func.args|args }});
{% endfor %}

#endif

