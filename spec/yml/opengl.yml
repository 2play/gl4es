3DFX_tbuffer:
  TbufferMask3DFX: [void, GLuint mask]
AMD_debug_output:
  DebugMessageCallbackAMD: [void, GLDEBUGPROCAMD callback, GLvoid userParam]
  DebugMessageEnableAMD: [void, GLenum category, GLenum severity, GLsizei count, GLuint
      ids, GLboolean enabled]
  DebugMessageInsertAMD: [void, GLenum category, GLenum severity, GLuint id, GLsizei
      length, GLchar buf]
  GetDebugMessageLogAMD: [UInt32, GLuint count, GLsizei bufsize, GLenum categories,
    GLuint severities, GLuint ids, GLsizei lengths, GLchar message]
AMD_draw_buffers_blend:
  BlendEquationIndexedAMD: [void, GLuint buf, GLenum mode]
  BlendEquationSeparateIndexedAMD: [void, GLuint buf, GLenum modeRGB, GLenum modeAlpha]
  BlendFuncIndexedAMD: [void, GLuint buf, GLenum src, GLenum dst]
  BlendFuncSeparateIndexedAMD: [void, GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum
      srcAlpha, GLenum dstAlpha]
AMD_multi_draw_indirect:
  MultiDrawArraysIndirectAMD: [void, GLenum mode, GLvoid indirect, GLsizei primcount,
    GLsizei stride]
  MultiDrawElementsIndirectAMD: [void, GLenum mode, GLenum type, GLvoid indirect,
    GLsizei primcount, GLsizei stride]
AMD_name_gen_delete:
  DeleteNamesAMD: [void, GLenum identifier, GLuint num, GLuint names]
  GenNamesAMD: [void, GLenum identifier, GLuint num, GLuint names]
  IsNameAMD: [Boolean, GLenum identifier, GLuint name]
AMD_performance_monitor:
  BeginPerfMonitorAMD: [void, GLuint monitor]
  DeletePerfMonitorsAMD: [void, GLsizei n, GLuint monitors]
  EndPerfMonitorAMD: [void, GLuint monitor]
  GenPerfMonitorsAMD: [void, GLsizei n, GLuint monitors]
  GetPerfMonitorCounterDataAMD: [void, GLuint monitor, GLenum pname, GLsizei dataSize,
    GLuint data, GLint bytesWritten]
  GetPerfMonitorCounterInfoAMD: [void, GLuint group, GLuint counter, GLenum pname,
    GLvoid data]
  GetPerfMonitorCounterStringAMD: [void, GLuint group, GLuint counter, GLsizei bufSize,
    GLsizei length, GLchar counterString]
  GetPerfMonitorCountersAMD: [void, GLuint group, GLint numCounters, GLint maxActiveCounters,
    GLsizei counterSize, GLuint counters]
  GetPerfMonitorGroupStringAMD: [void, GLuint group, GLsizei bufSize, GLsizei length,
    GLchar groupString]
  GetPerfMonitorGroupsAMD: [void, GLint numGroups, GLsizei groupsSize, GLuint groups]
  SelectPerfMonitorCountersAMD: [void, GLuint monitor, GLboolean enable, GLuint group,
    GLint numCounters, GLuint counterList]
AMD_sample_positions:
  SetMultisamplefvAMD: [void, GLenum pname, GLuint index, GLfloat val]
AMD_sparse_texture:
  TexStorageSparseAMD: [void, GLenum target, GLenum internalFormat, GLsizei width,
    GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags]
  TextureStorageSparseAMD: [void, GLuint texture, GLenum target, GLenum internalFormat,
    GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags]
AMD_stencil_operation_extended:
  StencilOpValueAMD: [void, GLenum face, GLuint value]
AMD_vertex_shader_tessellator:
  TessellationFactorAMD: [void, GLfloat factor]
  TessellationModeAMD: [void, GLenum mode]
APPLE_element_array:
  DrawElementArrayAPPLE: [void, GLenum mode, GLint first, GLsizei count]
  DrawRangeElementArrayAPPLE: [void, GLenum mode, GLuint start, GLuint end, GLint
      first, GLsizei count]
  ElementPointerAPPLE: [void, GLenum type, GLvoid pointer]
  MultiDrawElementArrayAPPLE: [void, GLenum mode, GLint first, GLsizei count, GLsizei
      primcount]
  MultiDrawRangeElementArrayAPPLE: [void, GLenum mode, GLuint start, GLuint end, GLint
      first, GLsizei count, GLsizei primcount]
APPLE_fence:
  DeleteFencesAPPLE: [void, GLsizei n, GLuint fences]
  FinishFenceAPPLE: [void, GLuint fence]
  FinishObjectAPPLE: [void, GLenum object, GLint name]
  GenFencesAPPLE: [void, GLsizei n, GLuint fences]
  IsFenceAPPLE: [Boolean, GLuint fence]
  SetFenceAPPLE: [void, GLuint fence]
  TestFenceAPPLE: [Boolean, GLuint fence]
  TestObjectAPPLE: [Boolean, GLenum object, GLuint name]
APPLE_flush_buffer_range:
  BufferParameteriAPPLE: [void, GLenum target, GLenum pname, GLint param]
  FlushMappedBufferRangeAPPLE: [void, GLenum target, GLintptr offset, GLsizeiptr size]
APPLE_object_purgeable:
  GetObjectParameterivAPPLE: [void, GLenum objectType, GLuint name, GLenum pname,
    GLint params]
  ObjectPurgeableAPPLE: [GLenum, GLenum objectType, GLuint name, GLenum option]
  ObjectUnpurgeableAPPLE: [GLenum, GLenum objectType, GLuint name, GLenum option]
APPLE_texture_range:
  GetTexParameterPointervAPPLE: [void, GLenum target, GLenum pname, GLvoid *params]
  TextureRangeAPPLE: [void, GLenum target, GLsizei length, GLvoid pointer]
APPLE_vertex_array_object:
  BindVertexArrayAPPLE: [void, GLuint array]
  DeleteVertexArraysAPPLE: [void, GLsizei n, GLuint arrays]
  GenVertexArraysAPPLE: [void, GLsizei n, GLuint arrays]
  IsVertexArrayAPPLE: [Boolean, GLuint array]
APPLE_vertex_array_range:
  FlushVertexArrayRangeAPPLE: [void, GLsizei length, GLvoid pointer]
  VertexArrayParameteriAPPLE: [void, GLenum pname, GLint param]
  VertexArrayRangeAPPLE: [void, GLsizei length, GLvoid pointer]
APPLE_vertex_program_evaluators:
  DisableVertexAttribAPPLE: [void, GLuint index, GLenum pname]
  EnableVertexAttribAPPLE: [void, GLuint index, GLenum pname]
  IsVertexAttribEnabledAPPLE: [Boolean, GLuint index, GLenum pname]
  MapVertexAttrib1dAPPLE: [void, GLuint index, GLuint size, GLdouble u1, GLdouble
      u2, GLint stride, GLint order, GLdouble points]
  MapVertexAttrib1fAPPLE: [void, GLuint index, GLuint size, GLfloat u1, GLfloat u2,
    GLint stride, GLint order, GLfloat points]
  MapVertexAttrib2dAPPLE: [void, GLuint index, GLuint size, GLdouble u1, GLdouble
      u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint
      vorder, GLdouble points]
  MapVertexAttrib2fAPPLE: [void, GLuint index, GLuint size, GLfloat u1, GLfloat u2,
    GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder,
    GLfloat points]
ARB_ES2_compatibility:
  ClearDepthf: [void, GLfloat d]
  DepthRangef: [void, GLfloat n, GLfloat f]
  GetShaderPrecisionFormat: [void, GLenum shadertype, GLenum precisiontype, GLint
      range, GLint precision]
  ReleaseShaderCompiler: [void]
  ShaderBinary: [void, GLsizei count, GLuint shaders, GLenum binaryformat, GLvoid
      binary, GLsizei length]
ARB_base_instance:
  DrawArraysInstancedBaseInstance: [void, GLenum mode, GLint first, GLsizei count,
    GLsizei instancecount, GLuint baseinstance]
  DrawElementsInstancedBaseInstance: [void, GLenum mode, GLsizei count, GLenum type,
    void *indices, GLsizei instancecount, GLuint baseinstance]
  DrawElementsInstancedBaseVertexBaseInstance: [void, GLenum mode, GLsizei count,
    GLenum type, void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance]
ARB_blend_func_extended:
  BindFragDataLocationIndexed: [void, GLuint program, GLuint colorNumber, GLuint index,
    GLchar name]
  GetFragDataIndex: [Int32, GLuint program, GLchar name]
ARB_cl_event:
  CreateSyncFromCLeventARB: [sync, struct _cl_context *context, struct _cl_event *event,
    GLbitfield flags]
ARB_clear_buffer_object:
  ClearBufferData: [void, GLenum target, GLenum internalformat, GLenum format, GLenum
      type, void *data]
  ClearBufferSubData: [void, GLenum target, GLenum internalformat, GLintptr offset,
    GLsizeiptr size, GLenum format, GLenum type, void *data]
  ClearNamedBufferDataEXT: [void, GLuint buffer, GLenum internalformat, GLenum format,
    GLenum type, void *data]
  ClearNamedBufferSubDataEXT: [void, GLuint buffer, GLenum internalformat, GLenum
      format, GLenum type, GLsizeiptr offset, GLsizeiptr size, void *data]
ARB_color_buffer_float:
  ClampColorARB: [void, GLenum target, GLenum clamp]
ARB_compute_shader:
  DispatchCompute: [void, GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z]
  DispatchComputeIndirect: [void, GLintptr indirect]
ARB_copy_buffer:
  CopyBufferSubData: [void, GLenum readTarget, GLenum writeTarget, GLintptr readOffset,
    GLintptr writeOffset, GLsizeiptr size]
ARB_copy_image:
  CopyImageSubData: [void, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint
      srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel,
    GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei
      srcDepth]
ARB_debug_output:
  DebugMessageCallbackARB: [void, GLDEBUGPROCARB callback, GLvoid userParam]
  DebugMessageControlARB: [void, GLenum source, GLenum type, GLenum severity, GLsizei
      count, GLuint ids, GLboolean enabled]
  DebugMessageInsertARB: [void, GLenum source, GLenum type, GLuint id, GLenum severity,
    GLsizei length, GLchar buf]
  GetDebugMessageLogARB: [UInt32, GLuint count, GLsizei bufsize, GLenum sources, GLenum
      types, GLuint ids, GLenum severities, GLsizei lengths, GLchar messageLog]
ARB_draw_buffers:
  DrawBuffersARB: [void, GLsizei n, GLenum bufs]
ARB_draw_buffers_blend:
  BlendEquationSeparateiARB: [void, GLuint buf, GLenum modeRGB, GLenum modeAlpha]
  BlendEquationiARB: [void, GLuint buf, GLenum mode]
  BlendFuncSeparateiARB: [void, GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha,
    GLenum dstAlpha]
  BlendFunciARB: [void, GLuint buf, GLenum src, GLenum dst]
ARB_draw_elements_base_vertex:
  DrawElementsBaseVertex: [void, GLenum mode, GLsizei count, GLenum type, GLvoid indices,
    GLint basevertex]
  DrawElementsInstancedBaseVertex: [void, GLenum mode, GLsizei count, GLenum type,
    GLvoid indices, GLsizei instancecount, GLint basevertex]
  DrawRangeElementsBaseVertex: [void, GLenum mode, GLuint start, GLuint end, GLsizei
      count, GLenum type, GLvoid indices, GLint basevertex]
  MultiDrawElementsBaseVertex: [void, GLenum mode, GLsizei count, GLenum type, GLvoid*const
      indices, GLsizei drawcount, GLint basevertex]
ARB_draw_indirect:
  DrawArraysIndirect: [void, GLenum mode, GLvoid indirect]
  DrawElementsIndirect: [void, GLenum mode, GLenum type, GLvoid indirect]
ARB_draw_instanced:
  DrawArraysInstancedARB: [void, GLenum mode, GLint first, GLsizei count, GLsizei
      primcount]
  DrawElementsInstancedARB: [void, GLenum mode, GLsizei count, GLenum type, GLvoid
      indices, GLsizei primcount]
ARB_framebuffer_no_attachments:
  FramebufferParameteri: [void, GLenum target, GLenum pname, GLint param]
  GetFramebufferParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetNamedFramebufferParameterivEXT: [void, GLuint framebuffer, GLenum pname, GLint
      params]
  NamedFramebufferParameteriEXT: [void, GLuint framebuffer, GLenum pname, GLint param]
ARB_framebuffer_object:
  BindFramebuffer: [void, GLenum target, GLuint framebuffer]
  BindRenderbuffer: [void, GLenum target, GLuint renderbuffer]
  BlitFramebuffer: [void, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint
      dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter]
  CheckFramebufferStatus: [GLenum, GLenum target]
  DeleteFramebuffers: [void, GLsizei n, GLuint framebuffers]
  DeleteRenderbuffers: [void, GLsizei n, GLuint renderbuffers]
  FramebufferRenderbuffer: [void, GLenum target, GLenum attachment, GLenum renderbuffertarget,
    GLuint renderbuffer]
  FramebufferTexture1D: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level]
  FramebufferTexture2D: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level]
  FramebufferTexture3D: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level, GLint zoffset]
  FramebufferTextureLayer: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level, GLint layer]
  GenFramebuffers: [void, GLsizei n, GLuint framebuffers]
  GenRenderbuffers: [void, GLsizei n, GLuint renderbuffers]
  GenerateMipmap: [void, GLenum target]
  GetFramebufferAttachmentParameteriv: [void, GLenum target, GLenum attachment, GLenum
      pname, GLint params]
  GetRenderbufferParameteriv: [void, GLenum target, GLenum pname, GLint params]
  IsFramebuffer: [Boolean, GLuint framebuffer]
  IsRenderbuffer: [Boolean, GLuint renderbuffer]
  RenderbufferStorage: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLsizei height]
  RenderbufferStorageMultisample: [void, GLenum target, GLsizei samples, GLenum internalformat,
    GLsizei width, GLsizei height]
ARB_geometry_shader4:
  FramebufferTextureARB: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level]
  FramebufferTextureFaceARB: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level, GLenum face]
  FramebufferTextureLayerARB: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level, GLint layer]
  ProgramParameteriARB: [void, GLuint program, GLenum pname, GLint value]
ARB_get_program_binary:
  GetProgramBinary: [void, GLuint program, GLsizei bufSize, GLsizei length, GLenum
      binaryFormat, GLvoid binary]
  ProgramBinary: [void, GLuint program, GLenum binaryFormat, GLvoid binary, GLsizei
      length]
  ProgramParameteri: [void, GLuint program, GLenum pname, GLint value]
ARB_gpu_shader_fp64:
  GetUniformdv: [void, GLuint program, GLint location, GLdouble params]
  Uniform1d: [void, GLint location, GLdouble x]
  Uniform1dv: [void, GLint location, GLsizei count, GLdouble value]
  Uniform2d: [void, GLint location, GLdouble x, GLdouble y]
  Uniform2dv: [void, GLint location, GLsizei count, GLdouble value]
  Uniform3d: [void, GLint location, GLdouble x, GLdouble y, GLdouble z]
  Uniform3dv: [void, GLint location, GLsizei count, GLdouble value]
  Uniform4d: [void, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w]
  Uniform4dv: [void, GLint location, GLsizei count, GLdouble value]
  UniformMatrix2dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix2x3dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix2x4dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix3dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix3x2dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix3x4dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix4dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix4x2dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
  UniformMatrix4x3dv: [void, GLint location, GLsizei count, GLboolean transpose, GLdouble
      value]
ARB_instanced_arrays:
  VertexAttribDivisorARB: [void, GLuint index, GLuint divisor]
ARB_internalformat_query:
  GetInternalformativ: [void, GLenum target, GLenum internalformat, GLenum pname,
    GLsizei bufSize, GLint params]
ARB_internalformat_query2:
  GetInternalformati64v: [void, GLenum target, GLenum internalformat, GLenum pname,
    GLsizei bufSize, GLint64 params]
ARB_invalidate_subdata:
  InvalidateBufferData: [void, GLuint buffer]
  InvalidateBufferSubData: [void, GLuint buffer, GLintptr offset, GLsizeiptr length]
  InvalidateFramebuffer: [void, GLenum target, GLsizei numAttachments, GLenum attachments]
  InvalidateSubFramebuffer: [void, GLenum target, GLsizei numAttachments, GLenum attachments,
    GLint x, GLint y, GLsizei width, GLsizei height]
  InvalidateTexImage: [void, GLuint texture, GLint level]
  InvalidateTexSubImage: [void, GLuint texture, GLint level, GLint xoffset, GLint
      yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth]
ARB_map_buffer_range:
  FlushMappedBufferRange: [void, GLenum target, GLintptr offset, GLsizeiptr length]
  MapBufferRange: [VoidPointer, GLenum target, GLintptr offset, GLsizeiptr length,
    GLbitfield access]
ARB_matrix_palette:
  CurrentPaletteMatrixARB: [void, GLint index]
  MatrixIndexPointerARB: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  MatrixIndexubvARB: [void, GLint size, GLubyte indices]
  MatrixIndexuivARB: [void, GLint size, GLuint indices]
  MatrixIndexusvARB: [void, GLint size, GLushort indices]
ARB_multi_draw_indirect:
  MultiDrawArraysIndirect: [void, GLenum mode, void *indirect, GLsizei drawcount,
    GLsizei stride]
  MultiDrawElementsIndirect: [void, GLenum mode, GLenum type, void *indirect, GLsizei
      drawcount, GLsizei stride]
ARB_multisample:
  SampleCoverageARB: [void, GLfloat value, GLboolean invert]
ARB_multitexture:
  ActiveTextureARB: [void, GLenum texture]
  ClientActiveTextureARB: [void, GLenum texture]
  MultiTexCoord1dARB: [void, GLenum target, GLdouble s]
  MultiTexCoord1dvARB: [void, GLenum target, GLdouble v]
  MultiTexCoord1fARB: [void, GLenum target, GLfloat s]
  MultiTexCoord1fvARB: [void, GLenum target, GLfloat v]
  MultiTexCoord1iARB: [void, GLenum target, GLint s]
  MultiTexCoord1ivARB: [void, GLenum target, GLint v]
  MultiTexCoord1sARB: [void, GLenum target, GLshort s]
  MultiTexCoord1svARB: [void, GLenum target, GLshort v]
  MultiTexCoord2dARB: [void, GLenum target, GLdouble s, GLdouble t]
  MultiTexCoord2dvARB: [void, GLenum target, GLdouble v]
  MultiTexCoord2fARB: [void, GLenum target, GLfloat s, GLfloat t]
  MultiTexCoord2fvARB: [void, GLenum target, GLfloat v]
  MultiTexCoord2iARB: [void, GLenum target, GLint s, GLint t]
  MultiTexCoord2ivARB: [void, GLenum target, GLint v]
  MultiTexCoord2sARB: [void, GLenum target, GLshort s, GLshort t]
  MultiTexCoord2svARB: [void, GLenum target, GLshort v]
  MultiTexCoord3dARB: [void, GLenum target, GLdouble s, GLdouble t, GLdouble r]
  MultiTexCoord3dvARB: [void, GLenum target, GLdouble v]
  MultiTexCoord3fARB: [void, GLenum target, GLfloat s, GLfloat t, GLfloat r]
  MultiTexCoord3fvARB: [void, GLenum target, GLfloat v]
  MultiTexCoord3iARB: [void, GLenum target, GLint s, GLint t, GLint r]
  MultiTexCoord3ivARB: [void, GLenum target, GLint v]
  MultiTexCoord3sARB: [void, GLenum target, GLshort s, GLshort t, GLshort r]
  MultiTexCoord3svARB: [void, GLenum target, GLshort v]
  MultiTexCoord4dARB: [void, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble
      q]
  MultiTexCoord4dvARB: [void, GLenum target, GLdouble v]
  MultiTexCoord4fARB: [void, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat
      q]
  MultiTexCoord4fvARB: [void, GLenum target, GLfloat v]
  MultiTexCoord4iARB: [void, GLenum target, GLint s, GLint t, GLint r, GLint q]
  MultiTexCoord4ivARB: [void, GLenum target, GLint v]
  MultiTexCoord4sARB: [void, GLenum target, GLshort s, GLshort t, GLshort r, GLshort
      q]
  MultiTexCoord4svARB: [void, GLenum target, GLshort v]
ARB_occlusion_query:
  BeginQueryARB: [void, GLenum target, GLuint id]
  DeleteQueriesARB: [void, GLsizei n, GLuint ids]
  EndQueryARB: [void, GLenum target]
  GenQueriesARB: [void, GLsizei n, GLuint ids]
  GetQueryObjectivARB: [void, GLuint id, GLenum pname, GLint params]
  GetQueryObjectuivARB: [void, GLuint id, GLenum pname, GLuint params]
  GetQueryivARB: [void, GLenum target, GLenum pname, GLint params]
  IsQueryARB: [Boolean, GLuint id]
ARB_point_parameters:
  PointParameterfARB: [void, GLenum pname, GLfloat param]
  PointParameterfvARB: [void, GLenum pname, GLfloat params]
ARB_program_interface_query:
  GetProgramInterfaceiv: [void, GLuint program, GLenum programInterface, GLenum pname,
    GLint params]
  GetProgramResourceIndex: [UInt32, GLuint program, GLenum programInterface, GLchar
      name]
  GetProgramResourceLocation: [Int32, GLuint program, GLenum programInterface, GLchar
      name]
  GetProgramResourceLocationIndex: [Int32, GLuint program, GLenum programInterface,
    GLchar name]
  GetProgramResourceName: [void, GLuint program, GLenum programInterface, GLuint index,
    GLsizei bufSize, GLsizei length, GLchar name]
  GetProgramResourceiv: [void, GLuint program, GLenum programInterface, GLuint index,
    GLsizei propCount, GLenum props, GLsizei bufSize, GLsizei length, GLint params]
ARB_provoking_vertex:
  ProvokingVertex: [void, GLenum mode]
ARB_robustness:
  GetGraphicsResetStatusARB: [GLenum]
  GetnColorTableARB: [void, GLenum target, GLenum format, GLenum type, GLsizei bufSize,
    GLvoid table]
  GetnCompressedTexImageARB: [void, GLenum target, GLint lod, GLsizei bufSize, GLvoid
      img]
  GetnConvolutionFilterARB: [void, GLenum target, GLenum format, GLenum type, GLsizei
      bufSize, GLvoid image]
  GetnHistogramARB: [void, GLenum target, GLboolean reset, GLenum format, GLenum type,
    GLsizei bufSize, GLvoid values]
  GetnMapdvARB: [void, GLenum target, GLenum query, GLsizei bufSize, GLdouble v]
  GetnMapfvARB: [void, GLenum target, GLenum query, GLsizei bufSize, GLfloat v]
  GetnMapivARB: [void, GLenum target, GLenum query, GLsizei bufSize, GLint v]
  GetnMinmaxARB: [void, GLenum target, GLboolean reset, GLenum format, GLenum type,
    GLsizei bufSize, GLvoid values]
  GetnPixelMapfvARB: [void, GLenum map, GLsizei bufSize, GLfloat values]
  GetnPixelMapuivARB: [void, GLenum map, GLsizei bufSize, GLuint values]
  GetnPixelMapusvARB: [void, GLenum map, GLsizei bufSize, GLushort values]
  GetnPolygonStippleARB: [void, GLsizei bufSize, GLubyte pattern]
  GetnSeparableFilterARB: [void, GLenum target, GLenum format, GLenum type, GLsizei
      rowBufSize, GLvoid row, GLsizei columnBufSize, GLvoid column, GLvoid span]
  GetnTexImageARB: [void, GLenum target, GLint level, GLenum format, GLenum type,
    GLsizei bufSize, GLvoid img]
  GetnUniformdvARB: [void, GLuint program, GLint location, GLsizei bufSize, GLdouble
      params]
  GetnUniformfvARB: [void, GLuint program, GLint location, GLsizei bufSize, GLfloat
      params]
  GetnUniformivARB: [void, GLuint program, GLint location, GLsizei bufSize, GLint
      params]
  GetnUniformuivARB: [void, GLuint program, GLint location, GLsizei bufSize, GLuint
      params]
  ReadnPixelsARB: [void, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format,
    GLenum type, GLsizei bufSize, GLvoid data]
ARB_sample_shading:
  MinSampleShadingARB: [void, GLfloat value]
ARB_sampler_objects:
  BindSampler: [void, GLuint unit, GLuint sampler]
  DeleteSamplers: [void, GLsizei count, GLuint samplers]
  GenSamplers: [void, GLsizei count, GLuint samplers]
  GetSamplerParameterIiv: [void, GLuint sampler, GLenum pname, GLint params]
  GetSamplerParameterIuiv: [void, GLuint sampler, GLenum pname, GLuint params]
  GetSamplerParameterfv: [void, GLuint sampler, GLenum pname, GLfloat params]
  GetSamplerParameteriv: [void, GLuint sampler, GLenum pname, GLint params]
  IsSampler: [Boolean, GLuint sampler]
  SamplerParameterIiv: [void, GLuint sampler, GLenum pname, GLint param]
  SamplerParameterIuiv: [void, GLuint sampler, GLenum pname, GLuint param]
  SamplerParameterf: [void, GLuint sampler, GLenum pname, GLfloat param]
  SamplerParameterfv: [void, GLuint sampler, GLenum pname, GLfloat param]
  SamplerParameteri: [void, GLuint sampler, GLenum pname, GLint param]
  SamplerParameteriv: [void, GLuint sampler, GLenum pname, GLint param]
ARB_separate_shader_objects:
  ActiveShaderProgram: [void, GLuint pipeline, GLuint program]
  BindProgramPipeline: [void, GLuint pipeline]
  CreateShaderProgramv: [UInt32, GLenum type, GLsizei count, GLchar*const strings]
  DeleteProgramPipelines: [void, GLsizei n, GLuint pipelines]
  GenProgramPipelines: [void, GLsizei n, GLuint pipelines]
  GetProgramPipelineInfoLog: [void, GLuint pipeline, GLsizei bufSize, GLsizei length,
    GLchar infoLog]
  GetProgramPipelineiv: [void, GLuint pipeline, GLenum pname, GLint params]
  IsProgramPipeline: [Boolean, GLuint pipeline]
  ProgramUniform1d: [void, GLuint program, GLint location, GLdouble v0]
  ProgramUniform1dv: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform1f: [void, GLuint program, GLint location, GLfloat v0]
  ProgramUniform1fv: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform1i: [void, GLuint program, GLint location, GLint v0]
  ProgramUniform1iv: [void, GLuint program, GLint location, GLsizei count, GLint value]
  ProgramUniform1ui: [void, GLuint program, GLint location, GLuint v0]
  ProgramUniform1uiv: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform2d: [void, GLuint program, GLint location, GLdouble v0, GLdouble v1]
  ProgramUniform2dv: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform2f: [void, GLuint program, GLint location, GLfloat v0, GLfloat v1]
  ProgramUniform2fv: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform2i: [void, GLuint program, GLint location, GLint v0, GLint v1]
  ProgramUniform2iv: [void, GLuint program, GLint location, GLsizei count, GLint value]
  ProgramUniform2ui: [void, GLuint program, GLint location, GLuint v0, GLuint v1]
  ProgramUniform2uiv: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform3d: [void, GLuint program, GLint location, GLdouble v0, GLdouble v1,
    GLdouble v2]
  ProgramUniform3dv: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform3f: [void, GLuint program, GLint location, GLfloat v0, GLfloat v1,
    GLfloat v2]
  ProgramUniform3fv: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform3i: [void, GLuint program, GLint location, GLint v0, GLint v1, GLint
      v2]
  ProgramUniform3iv: [void, GLuint program, GLint location, GLsizei count, GLint value]
  ProgramUniform3ui: [void, GLuint program, GLint location, GLuint v0, GLuint v1,
    GLuint v2]
  ProgramUniform3uiv: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform4d: [void, GLuint program, GLint location, GLdouble v0, GLdouble v1,
    GLdouble v2, GLdouble v3]
  ProgramUniform4dv: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform4f: [void, GLuint program, GLint location, GLfloat v0, GLfloat v1,
    GLfloat v2, GLfloat v3]
  ProgramUniform4fv: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform4i: [void, GLuint program, GLint location, GLint v0, GLint v1, GLint
      v2, GLint v3]
  ProgramUniform4iv: [void, GLuint program, GLint location, GLsizei count, GLint value]
  ProgramUniform4ui: [void, GLuint program, GLint location, GLuint v0, GLuint v1,
    GLuint v2, GLuint v3]
  ProgramUniform4uiv: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniformMatrix2dv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLdouble value]
  ProgramUniformMatrix2fv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLfloat value]
  ProgramUniformMatrix2x3dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix2x3fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix2x4dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix2x4fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix3dv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLdouble value]
  ProgramUniformMatrix3fv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLfloat value]
  ProgramUniformMatrix3x2dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix3x2fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix3x4dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix3x4fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix4dv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLdouble value]
  ProgramUniformMatrix4fv: [void, GLuint program, GLint location, GLsizei count, GLboolean
      transpose, GLfloat value]
  ProgramUniformMatrix4x2dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix4x2fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix4x3dv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix4x3fv: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  UseProgramStages: [void, GLuint pipeline, GLbitfield stages, GLuint program]
  ValidateProgramPipeline: [void, GLuint pipeline]
ARB_shader_atomic_counters:
  GetActiveAtomicCounterBufferiv: [void, GLuint program, GLuint bufferIndex, GLenum
      pname, GLint params]
ARB_shader_image_load_store:
  BindImageTexture: [void, GLuint unit, GLuint texture, GLint level, GLboolean layered,
    GLint layer, GLenum access, GLenum format]
  MemoryBarrier: [void, GLbitfield barriers]
ARB_shader_objects:
  AttachObjectARB: [void, GLhandleARB containerObj, GLhandleARB obj]
  CompileShaderARB: [void, GLhandleARB shaderObj]
  CreateProgramObjectARB: [handleARB]
  CreateShaderObjectARB: [handleARB, GLenum shaderType]
  DeleteObjectARB: [void, GLhandleARB obj]
  DetachObjectARB: [void, GLhandleARB containerObj, GLhandleARB attachedObj]
  GetActiveUniformARB: [void, GLhandleARB programObj, GLuint index, GLsizei maxLength,
    GLsizei length, GLint size, GLenum type, GLcharARB name]
  GetAttachedObjectsARB: [void, GLhandleARB containerObj, GLsizei maxCount, GLsizei
      count, GLhandleARB obj]
  GetHandleARB: [handleARB, GLenum pname]
  GetInfoLogARB: [void, GLhandleARB obj, GLsizei maxLength, GLsizei length, GLcharARB
      infoLog]
  GetObjectParameterfvARB: [void, GLhandleARB obj, GLenum pname, GLfloat params]
  GetObjectParameterivARB: [void, GLhandleARB obj, GLenum pname, GLint params]
  GetShaderSourceARB: [void, GLhandleARB obj, GLsizei maxLength, GLsizei length, GLcharARB
      source]
  GetUniformLocationARB: [Int32, GLhandleARB programObj, GLcharARB name]
  GetUniformfvARB: [void, GLhandleARB programObj, GLint location, GLfloat params]
  GetUniformivARB: [void, GLhandleARB programObj, GLint location, GLint params]
  LinkProgramARB: [void, GLhandleARB programObj]
  ShaderSourceARB: [void, GLhandleARB shaderObj, GLsizei count, GLcharARB *string,
    GLint length]
  Uniform1fARB: [void, GLint location, GLfloat v0]
  Uniform1fvARB: [void, GLint location, GLsizei count, GLfloat value]
  Uniform1iARB: [void, GLint location, GLint v0]
  Uniform1ivARB: [void, GLint location, GLsizei count, GLint value]
  Uniform2fARB: [void, GLint location, GLfloat v0, GLfloat v1]
  Uniform2fvARB: [void, GLint location, GLsizei count, GLfloat value]
  Uniform2iARB: [void, GLint location, GLint v0, GLint v1]
  Uniform2ivARB: [void, GLint location, GLsizei count, GLint value]
  Uniform3fARB: [void, GLint location, GLfloat v0, GLfloat v1, GLfloat v2]
  Uniform3fvARB: [void, GLint location, GLsizei count, GLfloat value]
  Uniform3iARB: [void, GLint location, GLint v0, GLint v1, GLint v2]
  Uniform3ivARB: [void, GLint location, GLsizei count, GLint value]
  Uniform4fARB: [void, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat
      v3]
  Uniform4fvARB: [void, GLint location, GLsizei count, GLfloat value]
  Uniform4iARB: [void, GLint location, GLint v0, GLint v1, GLint v2, GLint v3]
  Uniform4ivARB: [void, GLint location, GLsizei count, GLint value]
  UniformMatrix2fvARB: [void, GLint location, GLsizei count, GLboolean transpose,
    GLfloat value]
  UniformMatrix3fvARB: [void, GLint location, GLsizei count, GLboolean transpose,
    GLfloat value]
  UniformMatrix4fvARB: [void, GLint location, GLsizei count, GLboolean transpose,
    GLfloat value]
  UseProgramObjectARB: [void, GLhandleARB programObj]
  ValidateProgramARB: [void, GLhandleARB programObj]
ARB_shader_storage_buffer_object:
  ShaderStorageBlockBinding: [void, GLuint program, GLuint storageBlockIndex, GLuint
      storageBlockBinding]
ARB_shader_subroutine:
  GetActiveSubroutineName: [void, GLuint program, GLenum shadertype, GLuint index,
    GLsizei bufsize, GLsizei length, GLchar name]
  GetActiveSubroutineUniformName: [void, GLuint program, GLenum shadertype, GLuint
      index, GLsizei bufsize, GLsizei length, GLchar name]
  GetActiveSubroutineUniformiv: [void, GLuint program, GLenum shadertype, GLuint index,
    GLenum pname, GLint values]
  GetProgramStageiv: [void, GLuint program, GLenum shadertype, GLenum pname, GLint
      values]
  GetSubroutineIndex: [UInt32, GLuint program, GLenum shadertype, GLchar name]
  GetSubroutineUniformLocation: [Int32, GLuint program, GLenum shadertype, GLchar
      name]
  GetUniformSubroutineuiv: [void, GLenum shadertype, GLint location, GLuint params]
  UniformSubroutinesuiv: [void, GLenum shadertype, GLsizei count, GLuint indices]
ARB_shading_language_include:
  CompileShaderIncludeARB: [void, GLuint shader, GLsizei count, GLchar *path, GLint
      length]
  DeleteNamedStringARB: [void, GLint namelen, GLchar name]
  GetNamedStringARB: [void, GLint namelen, GLchar name, GLsizei bufSize, GLint stringlen,
    GLchar string]
  GetNamedStringivARB: [void, GLint namelen, GLchar name, GLenum pname, GLint params]
  IsNamedStringARB: [Boolean, GLint namelen, GLchar name]
  NamedStringARB: [void, GLenum type, GLint namelen, GLchar name, GLint stringlen,
    GLchar string]
ARB_sync:
  ClientWaitSync: [GLenum, GLsync sync, GLbitfield flags, GLuint64 timeout]
  DeleteSync: [void, GLsync sync]
  FenceSync: [sync, GLenum condition, GLbitfield flags]
  GetInteger64v: [void, GLenum pname, GLint64 params]
  GetSynciv: [void, GLsync sync, GLenum pname, GLsizei bufSize, GLsizei length, GLint
      values]
  IsSync: [Boolean, GLsync sync]
  WaitSync: [void, GLsync sync, GLbitfield flags, GLuint64 timeout]
ARB_tessellation_shader:
  PatchParameterfv: [void, GLenum pname, GLfloat values]
  PatchParameteri: [void, GLenum pname, GLint value]
ARB_texture_buffer_object:
  TexBufferARB: [void, GLenum target, GLenum internalformat, GLuint buffer]
ARB_texture_buffer_range:
  TexBufferRange: [void, GLenum target, GLenum internalformat, GLuint buffer, GLintptr
      offset, GLsizeiptr size]
  TextureBufferRangeEXT: [void, GLuint texture, GLenum target, GLenum internalformat,
    GLuint buffer, GLintptr offset, GLsizeiptr size]
ARB_texture_compression:
  CompressedTexImage1DARB: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLint border, GLsizei imageSize, GLvoid data]
  CompressedTexImage2DARB: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid data]
  CompressedTexImage3DARB: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize,
    GLvoid data]
  CompressedTexSubImage1DARB: [void, GLenum target, GLint level, GLint xoffset, GLsizei
      width, GLenum format, GLsizei imageSize, GLvoid data]
  CompressedTexSubImage2DARB: [void, GLenum target, GLint level, GLint xoffset, GLint
      yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid
      data]
  CompressedTexSubImage3DARB: [void, GLenum target, GLint level, GLint xoffset, GLint
      yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum
      format, GLsizei imageSize, GLvoid data]
  GetCompressedTexImageARB: [void, GLenum target, GLint level, GLvoid img]
ARB_texture_multisample:
  GetMultisamplefv: [void, GLenum pname, GLuint index, GLfloat val]
  SampleMaski: [void, GLuint index, GLbitfield mask]
  TexImage2DMultisample: [void, GLenum target, GLsizei samples, GLint internalformat,
    GLsizei width, GLsizei height, GLboolean fixedsamplelocations]
  TexImage3DMultisample: [void, GLenum target, GLsizei samples, GLint internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations]
ARB_texture_storage:
  TexStorage1D: [void, GLenum target, GLsizei levels, GLenum internalformat, GLsizei
      width]
  TexStorage2D: [void, GLenum target, GLsizei levels, GLenum internalformat, GLsizei
      width, GLsizei height]
  TexStorage3D: [void, GLenum target, GLsizei levels, GLenum internalformat, GLsizei
      width, GLsizei height, GLsizei depth]
  TextureStorage1DEXT: [void, GLuint texture, GLenum target, GLsizei levels, GLenum
      internalformat, GLsizei width]
  TextureStorage2DEXT: [void, GLuint texture, GLenum target, GLsizei levels, GLenum
      internalformat, GLsizei width, GLsizei height]
  TextureStorage3DEXT: [void, GLuint texture, GLenum target, GLsizei levels, GLenum
      internalformat, GLsizei width, GLsizei height, GLsizei depth]
ARB_texture_storage_multisample:
  TexStorage2DMultisample: [void, GLenum target, GLsizei samples, GLenum internalformat,
    GLsizei width, GLsizei height, GLboolean fixedsamplelocations]
  TexStorage3DMultisample: [void, GLenum target, GLsizei samples, GLenum internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations]
  TextureStorage2DMultisampleEXT: [void, GLuint texture, GLenum target, GLsizei samples,
    GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations]
  TextureStorage3DMultisampleEXT: [void, GLuint texture, GLenum target, GLsizei samples,
    GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean
      fixedsamplelocations]
ARB_texture_view:
  TextureView: [void, GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat,
    GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers]
ARB_timer_query:
  GetQueryObjecti64v: [void, GLuint id, GLenum pname, GLint64 params]
  GetQueryObjectui64v: [void, GLuint id, GLenum pname, GLuint64 params]
  QueryCounter: [void, GLuint id, GLenum target]
ARB_transform_feedback2:
  BindTransformFeedback: [void, GLenum target, GLuint id]
  DeleteTransformFeedbacks: [void, GLsizei n, GLuint ids]
  DrawTransformFeedback: [void, GLenum mode, GLuint id]
  GenTransformFeedbacks: [void, GLsizei n, GLuint ids]
  IsTransformFeedback: [Boolean, GLuint id]
  PauseTransformFeedback: [void]
  ResumeTransformFeedback: [void]
ARB_transform_feedback3:
  BeginQueryIndexed: [void, GLenum target, GLuint index, GLuint id]
  DrawTransformFeedbackStream: [void, GLenum mode, GLuint id, GLuint stream]
  EndQueryIndexed: [void, GLenum target, GLuint index]
  GetQueryIndexediv: [void, GLenum target, GLuint index, GLenum pname, GLint params]
ARB_transform_feedback_instanced:
  DrawTransformFeedbackInstanced: [void, GLenum mode, GLuint id, GLsizei instancecount]
  DrawTransformFeedbackStreamInstanced: [void, GLenum mode, GLuint id, GLuint stream,
    GLsizei instancecount]
ARB_transpose_matrix:
  LoadTransposeMatrixdARB: [void, GLdouble m]
  LoadTransposeMatrixfARB: [void, GLfloat m]
  MultTransposeMatrixdARB: [void, GLdouble m]
  MultTransposeMatrixfARB: [void, GLfloat m]
ARB_uniform_buffer_object:
  GetActiveUniformBlockName: [void, GLuint program, GLuint uniformBlockIndex, GLsizei
      bufSize, GLsizei length, GLchar uniformBlockName]
  GetActiveUniformBlockiv: [void, GLuint program, GLuint uniformBlockIndex, GLenum
      pname, GLint params]
  GetActiveUniformName: [void, GLuint program, GLuint uniformIndex, GLsizei bufSize,
    GLsizei length, GLchar uniformName]
  GetActiveUniformsiv: [void, GLuint program, GLsizei uniformCount, GLuint uniformIndices,
    GLenum pname, GLint params]
  GetUniformBlockIndex: [UInt32, GLuint program, GLchar uniformBlockName]
  GetUniformIndices: [void, GLuint program, GLsizei uniformCount, GLchar*const uniformNames,
    GLuint uniformIndices]
  UniformBlockBinding: [void, GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding]
ARB_vertex_array_object:
  BindVertexArray: [void, GLuint array]
  DeleteVertexArrays: [void, GLsizei n, GLuint arrays]
  GenVertexArrays: [void, GLsizei n, GLuint arrays]
  IsVertexArray: [Boolean, GLuint array]
ARB_vertex_attrib_64bit:
  GetVertexAttribLdv: [void, GLuint index, GLenum pname, GLdouble params]
  VertexAttribL1d: [void, GLuint index, GLdouble x]
  VertexAttribL1dv: [void, GLuint index, GLdouble v]
  VertexAttribL2d: [void, GLuint index, GLdouble x, GLdouble y]
  VertexAttribL2dv: [void, GLuint index, GLdouble v]
  VertexAttribL3d: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z]
  VertexAttribL3dv: [void, GLuint index, GLdouble v]
  VertexAttribL4d: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexAttribL4dv: [void, GLuint index, GLdouble v]
  VertexAttribLPointer: [void, GLuint index, GLint size, GLenum type, GLsizei stride,
    GLvoid pointer]
ARB_vertex_attrib_binding:
  BindVertexBuffer: [void, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei
      stride]
  VertexArrayBindVertexBufferEXT: [void, GLuint vaobj, GLuint bindingindex, GLuint
      buffer, GLintptr offset, GLsizei stride]
  VertexArrayVertexAttribBindingEXT: [void, GLuint vaobj, GLuint attribindex, GLuint
      bindingindex]
  VertexArrayVertexAttribFormatEXT: [void, GLuint vaobj, GLuint attribindex, GLint
      size, GLenum type, GLboolean normalized, GLuint relativeoffset]
  VertexArrayVertexAttribIFormatEXT: [void, GLuint vaobj, GLuint attribindex, GLint
      size, GLenum type, GLuint relativeoffset]
  VertexArrayVertexAttribLFormatEXT: [void, GLuint vaobj, GLuint attribindex, GLint
      size, GLenum type, GLuint relativeoffset]
  VertexArrayVertexBindingDivisorEXT: [void, GLuint vaobj, GLuint bindingindex, GLuint
      divisor]
  VertexAttribBinding: [void, GLuint attribindex, GLuint bindingindex]
  VertexAttribFormat: [void, GLuint attribindex, GLint size, GLenum type, GLboolean
      normalized, GLuint relativeoffset]
  VertexAttribIFormat: [void, GLuint attribindex, GLint size, GLenum type, GLuint
      relativeoffset]
  VertexAttribLFormat: [void, GLuint attribindex, GLint size, GLenum type, GLuint
      relativeoffset]
  VertexBindingDivisor: [void, GLuint bindingindex, GLuint divisor]
ARB_vertex_blend:
  VertexBlendARB: [void, GLint count]
  WeightPointerARB: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  WeightbvARB: [void, GLint size, GLbyte weights]
  WeightdvARB: [void, GLint size, GLdouble weights]
  WeightfvARB: [void, GLint size, GLfloat weights]
  WeightivARB: [void, GLint size, GLint weights]
  WeightsvARB: [void, GLint size, GLshort weights]
  WeightubvARB: [void, GLint size, GLubyte weights]
  WeightuivARB: [void, GLint size, GLuint weights]
  WeightusvARB: [void, GLint size, GLushort weights]
ARB_vertex_buffer_object:
  BindBufferARB: [void, GLenum target, GLuint buffer]
  BufferDataARB: [void, GLenum target, GLsizeiptrARB size, GLvoid data, GLenum usage]
  BufferSubDataARB: [void, GLenum target, GLintptrARB offset, GLsizeiptrARB size,
    GLvoid data]
  DeleteBuffersARB: [void, GLsizei n, GLuint buffers]
  GenBuffersARB: [void, GLsizei n, GLuint buffers]
  GetBufferParameterivARB: [void, GLenum target, GLenum pname, GLint params]
  GetBufferPointervARB: [void, GLenum target, GLenum pname, GLvoid *params]
  GetBufferSubDataARB: [void, GLenum target, GLintptrARB offset, GLsizeiptrARB size,
    GLvoid data]
  IsBufferARB: [Boolean, GLuint buffer]
  MapBufferARB: [VoidPointer, GLenum target, GLenum access]
  UnmapBufferARB: [Boolean, GLenum target]
ARB_vertex_program:
  BindProgramARB: [void, GLenum target, GLuint program]
  DeleteProgramsARB: [void, GLsizei n, GLuint programs]
  DisableVertexAttribArrayARB: [void, GLuint index]
  EnableVertexAttribArrayARB: [void, GLuint index]
  GenProgramsARB: [void, GLsizei n, GLuint programs]
  GetProgramEnvParameterdvARB: [void, GLenum target, GLuint index, GLdouble params]
  GetProgramEnvParameterfvARB: [void, GLenum target, GLuint index, GLfloat params]
  GetProgramLocalParameterdvARB: [void, GLenum target, GLuint index, GLdouble params]
  GetProgramLocalParameterfvARB: [void, GLenum target, GLuint index, GLfloat params]
  GetProgramStringARB: [void, GLenum target, GLenum pname, GLvoid string]
  GetProgramivARB: [void, GLenum target, GLenum pname, GLint params]
  GetVertexAttribPointervARB: [void, GLuint index, GLenum pname, GLvoid *pointer]
  GetVertexAttribdvARB: [void, GLuint index, GLenum pname, GLdouble params]
  GetVertexAttribfvARB: [void, GLuint index, GLenum pname, GLfloat params]
  GetVertexAttribivARB: [void, GLuint index, GLenum pname, GLint params]
  IsProgramARB: [Boolean, GLuint program]
  ProgramEnvParameter4dARB: [void, GLenum target, GLuint index, GLdouble x, GLdouble
      y, GLdouble z, GLdouble w]
  ProgramEnvParameter4dvARB: [void, GLenum target, GLuint index, GLdouble params]
  ProgramEnvParameter4fARB: [void, GLenum target, GLuint index, GLfloat x, GLfloat
      y, GLfloat z, GLfloat w]
  ProgramEnvParameter4fvARB: [void, GLenum target, GLuint index, GLfloat params]
  ProgramLocalParameter4dARB: [void, GLenum target, GLuint index, GLdouble x, GLdouble
      y, GLdouble z, GLdouble w]
  ProgramLocalParameter4dvARB: [void, GLenum target, GLuint index, GLdouble params]
  ProgramLocalParameter4fARB: [void, GLenum target, GLuint index, GLfloat x, GLfloat
      y, GLfloat z, GLfloat w]
  ProgramLocalParameter4fvARB: [void, GLenum target, GLuint index, GLfloat params]
  ProgramStringARB: [void, GLenum target, GLenum format, GLsizei len, GLvoid string]
  VertexAttrib1dARB: [void, GLuint index, GLdouble x]
  VertexAttrib1dvARB: [void, GLuint index, GLdouble v]
  VertexAttrib1fARB: [void, GLuint index, GLfloat x]
  VertexAttrib1fvARB: [void, GLuint index, GLfloat v]
  VertexAttrib1sARB: [void, GLuint index, GLshort x]
  VertexAttrib1svARB: [void, GLuint index, GLshort v]
  VertexAttrib2dARB: [void, GLuint index, GLdouble x, GLdouble y]
  VertexAttrib2dvARB: [void, GLuint index, GLdouble v]
  VertexAttrib2fARB: [void, GLuint index, GLfloat x, GLfloat y]
  VertexAttrib2fvARB: [void, GLuint index, GLfloat v]
  VertexAttrib2sARB: [void, GLuint index, GLshort x, GLshort y]
  VertexAttrib2svARB: [void, GLuint index, GLshort v]
  VertexAttrib3dARB: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z]
  VertexAttrib3dvARB: [void, GLuint index, GLdouble v]
  VertexAttrib3fARB: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z]
  VertexAttrib3fvARB: [void, GLuint index, GLfloat v]
  VertexAttrib3sARB: [void, GLuint index, GLshort x, GLshort y, GLshort z]
  VertexAttrib3svARB: [void, GLuint index, GLshort v]
  VertexAttrib4NbvARB: [void, GLuint index, GLbyte v]
  VertexAttrib4NivARB: [void, GLuint index, GLint v]
  VertexAttrib4NsvARB: [void, GLuint index, GLshort v]
  VertexAttrib4NubARB: [void, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte
      w]
  VertexAttrib4NubvARB: [void, GLuint index, GLubyte v]
  VertexAttrib4NuivARB: [void, GLuint index, GLuint v]
  VertexAttrib4NusvARB: [void, GLuint index, GLushort v]
  VertexAttrib4bvARB: [void, GLuint index, GLbyte v]
  VertexAttrib4dARB: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexAttrib4dvARB: [void, GLuint index, GLdouble v]
  VertexAttrib4fARB: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat
      w]
  VertexAttrib4fvARB: [void, GLuint index, GLfloat v]
  VertexAttrib4ivARB: [void, GLuint index, GLint v]
  VertexAttrib4sARB: [void, GLuint index, GLshort x, GLshort y, GLshort z, GLshort
      w]
  VertexAttrib4svARB: [void, GLuint index, GLshort v]
  VertexAttrib4ubvARB: [void, GLuint index, GLubyte v]
  VertexAttrib4uivARB: [void, GLuint index, GLuint v]
  VertexAttrib4usvARB: [void, GLuint index, GLushort v]
  VertexAttribPointerARB: [void, GLuint index, GLint size, GLenum type, GLboolean
      normalized, GLsizei stride, GLvoid pointer]
ARB_vertex_shader:
  BindAttribLocationARB: [void, GLhandleARB programObj, GLuint index, GLcharARB name]
  GetActiveAttribARB: [void, GLhandleARB programObj, GLuint index, GLsizei maxLength,
    GLsizei length, GLint size, GLenum type, GLcharARB name]
  GetAttribLocationARB: [Int32, GLhandleARB programObj, GLcharARB name]
ARB_vertex_type_2_10_10_10_rev:
  ColorP3ui: [void, GLenum type, GLuint color]
  ColorP3uiv: [void, GLenum type, GLuint color]
  ColorP4ui: [void, GLenum type, GLuint color]
  ColorP4uiv: [void, GLenum type, GLuint color]
  MultiTexCoordP1ui: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP1uiv: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP2ui: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP2uiv: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP3ui: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP3uiv: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP4ui: [void, GLenum texture, GLenum type, GLuint coords]
  MultiTexCoordP4uiv: [void, GLenum texture, GLenum type, GLuint coords]
  NormalP3ui: [void, GLenum type, GLuint coords]
  NormalP3uiv: [void, GLenum type, GLuint coords]
  SecondaryColorP3ui: [void, GLenum type, GLuint color]
  SecondaryColorP3uiv: [void, GLenum type, GLuint color]
  TexCoordP1ui: [void, GLenum type, GLuint coords]
  TexCoordP1uiv: [void, GLenum type, GLuint coords]
  TexCoordP2ui: [void, GLenum type, GLuint coords]
  TexCoordP2uiv: [void, GLenum type, GLuint coords]
  TexCoordP3ui: [void, GLenum type, GLuint coords]
  TexCoordP3uiv: [void, GLenum type, GLuint coords]
  TexCoordP4ui: [void, GLenum type, GLuint coords]
  TexCoordP4uiv: [void, GLenum type, GLuint coords]
  VertexAttribP1ui: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP1uiv: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP2ui: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP2uiv: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP3ui: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP3uiv: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP4ui: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexAttribP4uiv: [void, GLuint index, GLenum type, GLboolean normalized, GLuint
      value]
  VertexP2ui: [void, GLenum type, GLuint value]
  VertexP2uiv: [void, GLenum type, GLuint value]
  VertexP3ui: [void, GLenum type, GLuint value]
  VertexP3uiv: [void, GLenum type, GLuint value]
  VertexP4ui: [void, GLenum type, GLuint value]
  VertexP4uiv: [void, GLenum type, GLuint value]
ARB_viewport_array:
  DepthRangeArrayv: [void, GLuint first, GLsizei count, GLdouble v]
  DepthRangeIndexed: [void, GLuint index, GLdouble n, GLdouble f]
  GetDoublei_v: [void, GLenum target, GLuint index, GLdouble data]
  GetFloati_v: [void, GLenum target, GLuint index, GLfloat data]
  ScissorArrayv: [void, GLuint first, GLsizei count, GLint v]
  ScissorIndexed: [void, GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei
      height]
  ScissorIndexedv: [void, GLuint index, GLint v]
  ViewportArrayv: [void, GLuint first, GLsizei count, GLfloat v]
  ViewportIndexedf: [void, GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat
      h]
  ViewportIndexedfv: [void, GLuint index, GLfloat v]
ARB_window_pos:
  WindowPos2dARB: [void, GLdouble x, GLdouble y]
  WindowPos2dvARB: [void, GLdouble v]
  WindowPos2fARB: [void, GLfloat x, GLfloat y]
  WindowPos2fvARB: [void, GLfloat v]
  WindowPos2iARB: [void, GLint x, GLint y]
  WindowPos2ivARB: [void, GLint v]
  WindowPos2sARB: [void, GLshort x, GLshort y]
  WindowPos2svARB: [void, GLshort v]
  WindowPos3dARB: [void, GLdouble x, GLdouble y, GLdouble z]
  WindowPos3dvARB: [void, GLdouble v]
  WindowPos3fARB: [void, GLfloat x, GLfloat y, GLfloat z]
  WindowPos3fvARB: [void, GLfloat v]
  WindowPos3iARB: [void, GLint x, GLint y, GLint z]
  WindowPos3ivARB: [void, GLint v]
  WindowPos3sARB: [void, GLshort x, GLshort y, GLshort z]
  WindowPos3svARB: [void, GLshort v]
ATI_draw_buffers:
  DrawBuffersATI: [void, GLsizei n, GLenum bufs]
ATI_element_array:
  DrawElementArrayATI: [void, GLenum mode, GLsizei count]
  DrawRangeElementArrayATI: [void, GLenum mode, GLuint start, GLuint end, GLsizei
      count]
  ElementPointerATI: [void, GLenum type, GLvoid pointer]
ATI_envmap_bumpmap:
  GetTexBumpParameterfvATI: [void, GLenum pname, GLfloat param]
  GetTexBumpParameterivATI: [void, GLenum pname, GLint param]
  TexBumpParameterfvATI: [void, GLenum pname, GLfloat param]
  TexBumpParameterivATI: [void, GLenum pname, GLint param]
ATI_fragment_shader:
  AlphaFragmentOp1ATI: [void, GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint
      arg1Rep, GLuint arg1Mod]
  AlphaFragmentOp2ATI: [void, GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint
      arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod]
  AlphaFragmentOp3ATI: [void, GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint
      arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint
      arg3, GLuint arg3Rep, GLuint arg3Mod]
  BeginFragmentShaderATI: [void]
  BindFragmentShaderATI: [void, GLuint id]
  ColorFragmentOp1ATI: [void, GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,
    GLuint arg1, GLuint arg1Rep, GLuint arg1Mod]
  ColorFragmentOp2ATI: [void, GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,
    GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint
      arg2Mod]
  ColorFragmentOp3ATI: [void, GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,
    GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint
      arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod]
  DeleteFragmentShaderATI: [void, GLuint id]
  EndFragmentShaderATI: [void]
  GenFragmentShadersATI: [UInt32, GLuint range]
  PassTexCoordATI: [void, GLuint dst, GLuint coord, GLenum swizzle]
  SampleMapATI: [void, GLuint dst, GLuint interp, GLenum swizzle]
  SetFragmentShaderConstantATI: [void, GLuint dst, GLfloat value]
ATI_map_object_buffer:
  MapObjectBufferATI: [VoidPointer, GLuint buffer]
  UnmapObjectBufferATI: [void, GLuint buffer]
ATI_pn_triangles:
  PNTrianglesfATI: [void, GLenum pname, GLfloat param]
  PNTrianglesiATI: [void, GLenum pname, GLint param]
ATI_separate_stencil:
  StencilFuncSeparateATI: [void, GLenum frontfunc, GLenum backfunc, GLint ref, GLuint
      mask]
  StencilOpSeparateATI: [void, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass]
ATI_vertex_array_object:
  ArrayObjectATI: [void, GLenum array, GLint size, GLenum type, GLsizei stride, GLuint
      buffer, GLuint offset]
  FreeObjectBufferATI: [void, GLuint buffer]
  GetArrayObjectfvATI: [void, GLenum array, GLenum pname, GLfloat params]
  GetArrayObjectivATI: [void, GLenum array, GLenum pname, GLint params]
  GetObjectBufferfvATI: [void, GLuint buffer, GLenum pname, GLfloat params]
  GetObjectBufferivATI: [void, GLuint buffer, GLenum pname, GLint params]
  GetVariantArrayObjectfvATI: [void, GLuint id, GLenum pname, GLfloat params]
  GetVariantArrayObjectivATI: [void, GLuint id, GLenum pname, GLint params]
  IsObjectBufferATI: [Boolean, GLuint buffer]
  NewObjectBufferATI: [UInt32, GLsizei size, GLvoid pointer, GLenum usage]
  UpdateObjectBufferATI: [void, GLuint buffer, GLuint offset, GLsizei size, GLvoid
      pointer, GLenum preserve]
  VariantArrayObjectATI: [void, GLuint id, GLenum type, GLsizei stride, GLuint buffer,
    GLuint offset]
ATI_vertex_attrib_array_object:
  GetVertexAttribArrayObjectfvATI: [void, GLuint index, GLenum pname, GLfloat params]
  GetVertexAttribArrayObjectivATI: [void, GLuint index, GLenum pname, GLint params]
  VertexAttribArrayObjectATI: [void, GLuint index, GLint size, GLenum type, GLboolean
      normalized, GLsizei stride, GLuint buffer, GLuint offset]
ATI_vertex_streams:
  ClientActiveVertexStreamATI: [void, GLenum stream]
  NormalStream3bATI: [void, GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz]
  NormalStream3bvATI: [void, GLenum stream, GLbyte coords]
  NormalStream3dATI: [void, GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz]
  NormalStream3dvATI: [void, GLenum stream, GLdouble coords]
  NormalStream3fATI: [void, GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz]
  NormalStream3fvATI: [void, GLenum stream, GLfloat coords]
  NormalStream3iATI: [void, GLenum stream, GLint nx, GLint ny, GLint nz]
  NormalStream3ivATI: [void, GLenum stream, GLint coords]
  NormalStream3sATI: [void, GLenum stream, GLshort nx, GLshort ny, GLshort nz]
  NormalStream3svATI: [void, GLenum stream, GLshort coords]
  VertexBlendEnvfATI: [void, GLenum pname, GLfloat param]
  VertexBlendEnviATI: [void, GLenum pname, GLint param]
  VertexStream1dATI: [void, GLenum stream, GLdouble x]
  VertexStream1dvATI: [void, GLenum stream, GLdouble coords]
  VertexStream1fATI: [void, GLenum stream, GLfloat x]
  VertexStream1fvATI: [void, GLenum stream, GLfloat coords]
  VertexStream1iATI: [void, GLenum stream, GLint x]
  VertexStream1ivATI: [void, GLenum stream, GLint coords]
  VertexStream1sATI: [void, GLenum stream, GLshort x]
  VertexStream1svATI: [void, GLenum stream, GLshort coords]
  VertexStream2dATI: [void, GLenum stream, GLdouble x, GLdouble y]
  VertexStream2dvATI: [void, GLenum stream, GLdouble coords]
  VertexStream2fATI: [void, GLenum stream, GLfloat x, GLfloat y]
  VertexStream2fvATI: [void, GLenum stream, GLfloat coords]
  VertexStream2iATI: [void, GLenum stream, GLint x, GLint y]
  VertexStream2ivATI: [void, GLenum stream, GLint coords]
  VertexStream2sATI: [void, GLenum stream, GLshort x, GLshort y]
  VertexStream2svATI: [void, GLenum stream, GLshort coords]
  VertexStream3dATI: [void, GLenum stream, GLdouble x, GLdouble y, GLdouble z]
  VertexStream3dvATI: [void, GLenum stream, GLdouble coords]
  VertexStream3fATI: [void, GLenum stream, GLfloat x, GLfloat y, GLfloat z]
  VertexStream3fvATI: [void, GLenum stream, GLfloat coords]
  VertexStream3iATI: [void, GLenum stream, GLint x, GLint y, GLint z]
  VertexStream3ivATI: [void, GLenum stream, GLint coords]
  VertexStream3sATI: [void, GLenum stream, GLshort x, GLshort y, GLshort z]
  VertexStream3svATI: [void, GLenum stream, GLshort coords]
  VertexStream4dATI: [void, GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexStream4dvATI: [void, GLenum stream, GLdouble coords]
  VertexStream4fATI: [void, GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat
      w]
  VertexStream4fvATI: [void, GLenum stream, GLfloat coords]
  VertexStream4iATI: [void, GLenum stream, GLint x, GLint y, GLint z, GLint w]
  VertexStream4ivATI: [void, GLenum stream, GLint coords]
  VertexStream4sATI: [void, GLenum stream, GLshort x, GLshort y, GLshort z, GLshort
      w]
  VertexStream4svATI: [void, GLenum stream, GLshort coords]
EXT_bindable_uniform:
  GetUniformBufferSizeEXT: [Int32, GLuint program, GLint location]
  GetUniformOffsetEXT: [BufferOffset, GLuint program, GLint location]
  UniformBufferEXT: [void, GLuint program, GLint location, GLuint buffer]
EXT_blend_color:
  BlendColorEXT: [void, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha]
EXT_blend_equation_separate:
  BlendEquationSeparateEXT: [void, GLenum modeRGB, GLenum modeAlpha]
EXT_blend_func_separate:
  BlendFuncSeparateEXT: [void, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha,
    GLenum dfactorAlpha]
EXT_blend_minmax:
  BlendEquationEXT: [void, GLenum mode]
EXT_color_subtable:
  ColorSubTableEXT: [void, GLenum target, GLsizei start, GLsizei count, GLenum format,
    GLenum type, GLvoid data]
  CopyColorSubTableEXT: [void, GLenum target, GLsizei start, GLint x, GLint y, GLsizei
      width]
EXT_compiled_vertex_array:
  LockArraysEXT: [void, GLint first, GLsizei count]
  UnlockArraysEXT: [void]
EXT_convolution:
  ConvolutionFilter1DEXT: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLenum format, GLenum type, GLvoid image]
  ConvolutionFilter2DEXT: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLsizei height, GLenum format, GLenum type, GLvoid image]
  ConvolutionParameterfEXT: [void, GLenum target, GLenum pname, GLfloat params]
  ConvolutionParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  ConvolutionParameteriEXT: [void, GLenum target, GLenum pname, GLint params]
  ConvolutionParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  CopyConvolutionFilter1DEXT: [void, GLenum target, GLenum internalformat, GLint x,
    GLint y, GLsizei width]
  CopyConvolutionFilter2DEXT: [void, GLenum target, GLenum internalformat, GLint x,
    GLint y, GLsizei width, GLsizei height]
  GetConvolutionFilterEXT: [void, GLenum target, GLenum format, GLenum type, GLvoid
      image]
  GetConvolutionParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  GetConvolutionParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  GetSeparableFilterEXT: [void, GLenum target, GLenum format, GLenum type, GLvoid
      row, GLvoid column, GLvoid span]
  SeparableFilter2DEXT: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLsizei height, GLenum format, GLenum type, GLvoid row, GLvoid column]
EXT_coordinate_frame:
  Binormal3bEXT: [void, GLbyte bx, GLbyte by, GLbyte bz]
  Binormal3bvEXT: [void, GLbyte v]
  Binormal3dEXT: [void, GLdouble bx, GLdouble by, GLdouble bz]
  Binormal3dvEXT: [void, GLdouble v]
  Binormal3fEXT: [void, GLfloat bx, GLfloat by, GLfloat bz]
  Binormal3fvEXT: [void, GLfloat v]
  Binormal3iEXT: [void, GLint bx, GLint by, GLint bz]
  Binormal3ivEXT: [void, GLint v]
  Binormal3sEXT: [void, GLshort bx, GLshort by, GLshort bz]
  Binormal3svEXT: [void, GLshort v]
  BinormalPointerEXT: [void, GLenum type, GLsizei stride, GLvoid pointer]
  Tangent3bEXT: [void, GLbyte tx, GLbyte ty, GLbyte tz]
  Tangent3bvEXT: [void, GLbyte v]
  Tangent3dEXT: [void, GLdouble tx, GLdouble ty, GLdouble tz]
  Tangent3dvEXT: [void, GLdouble v]
  Tangent3fEXT: [void, GLfloat tx, GLfloat ty, GLfloat tz]
  Tangent3fvEXT: [void, GLfloat v]
  Tangent3iEXT: [void, GLint tx, GLint ty, GLint tz]
  Tangent3ivEXT: [void, GLint v]
  Tangent3sEXT: [void, GLshort tx, GLshort ty, GLshort tz]
  Tangent3svEXT: [void, GLshort v]
  TangentPointerEXT: [void, GLenum type, GLsizei stride, GLvoid pointer]
EXT_copy_texture:
  CopyTexImage1DEXT: [void, GLenum target, GLint level, GLenum internalformat, GLint
      x, GLint y, GLsizei width, GLint border]
  CopyTexImage2DEXT: [void, GLenum target, GLint level, GLenum internalformat, GLint
      x, GLint y, GLsizei width, GLsizei height, GLint border]
  CopyTexSubImage1DEXT: [void, GLenum target, GLint level, GLint xoffset, GLint x,
    GLint y, GLsizei width]
  CopyTexSubImage2DEXT: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint x, GLint y, GLsizei width, GLsizei height]
  CopyTexSubImage3DEXT: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height]
EXT_cull_vertex:
  CullParameterdvEXT: [void, GLenum pname, GLdouble params]
  CullParameterfvEXT: [void, GLenum pname, GLfloat params]
EXT_depth_bounds_test:
  DepthBoundsEXT: [void, GLclampd zmin, GLclampd zmax]
EXT_direct_state_access:
  BindMultiTextureEXT: [void, GLenum texunit, GLenum target, GLuint texture]
  CheckNamedFramebufferStatusEXT: [FramebufferStatus, GLuint framebuffer, GLenum target]
  ClientAttribDefaultEXT: [void, GLbitfield mask]
  CompressedMultiTexImage1DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid
      bits]
  CompressedMultiTexImage2DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize,
    GLvoid bits]
  CompressedMultiTexImage3DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border,
    GLsizei imageSize, GLvoid bits]
  CompressedMultiTexSubImage1DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid bits]
  CompressedMultiTexSubImage2DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei
      imageSize, GLvoid bits]
  CompressedMultiTexSubImage3DEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei
      depth, GLenum format, GLsizei imageSize, GLvoid bits]
  CompressedTextureImage1DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid
      bits]
  CompressedTextureImage2DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize,
    GLvoid bits]
  CompressedTextureImage3DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border,
    GLsizei imageSize, GLvoid bits]
  CompressedTextureSubImage1DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid bits]
  CompressedTextureSubImage2DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei
      imageSize, GLvoid bits]
  CompressedTextureSubImage3DEXT: [void, GLuint texture, GLenum target, GLint level,
    GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei
      depth, GLenum format, GLsizei imageSize, GLvoid bits]
  CopyMultiTexImage1DEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum
      internalformat, GLint x, GLint y, GLsizei width, GLint border]
  CopyMultiTexImage2DEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum
      internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border]
  CopyMultiTexSubImage1DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLint x, GLint y, GLsizei width]
  CopyMultiTexSubImage2DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height]
  CopyMultiTexSubImage3DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei
      height]
  CopyTextureImage1DEXT: [void, GLuint texture, GLenum target, GLint level, GLenum
      internalformat, GLint x, GLint y, GLsizei width, GLint border]
  CopyTextureImage2DEXT: [void, GLuint texture, GLenum target, GLint level, GLenum
      internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border]
  CopyTextureSubImage1DEXT: [void, GLuint texture, GLenum target, GLint level, GLint
      xoffset, GLint x, GLint y, GLsizei width]
  CopyTextureSubImage2DEXT: [void, GLuint texture, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height]
  CopyTextureSubImage3DEXT: [void, GLuint texture, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei
      height]
  DisableClientStateIndexedEXT: [void, GLenum array, GLuint index]
  DisableClientStateiEXT: [void, GLenum array, GLuint index]
  DisableVertexArrayAttribEXT: [void, GLuint vaobj, GLuint index]
  DisableVertexArrayEXT: [void, GLuint vaobj, GLenum array]
  EnableClientStateIndexedEXT: [void, GLenum array, GLuint index]
  EnableClientStateiEXT: [void, GLenum array, GLuint index]
  EnableVertexArrayAttribEXT: [void, GLuint vaobj, GLuint index]
  EnableVertexArrayEXT: [void, GLuint vaobj, GLenum array]
  FlushMappedNamedBufferRangeEXT: [void, GLuint buffer, GLintptr offset, GLsizeiptr
      length]
  FramebufferDrawBufferEXT: [void, GLuint framebuffer, GLenum mode]
  FramebufferDrawBuffersEXT: [void, GLuint framebuffer, GLsizei n, GLenum bufs]
  FramebufferReadBufferEXT: [void, GLuint framebuffer, GLenum mode]
  GenerateMultiTexMipmapEXT: [void, GLenum texunit, GLenum target]
  GenerateTextureMipmapEXT: [void, GLuint texture, GLenum target]
  GetCompressedMultiTexImageEXT: [void, GLenum texunit, GLenum target, GLint lod,
    GLvoid img]
  GetCompressedTextureImageEXT: [void, GLuint texture, GLenum target, GLint lod, GLvoid
      img]
  GetDoubleIndexedvEXT: [void, GLenum target, GLuint index, GLdouble data]
  GetDoublei_vEXT: [void, GLenum target, GLuint index, GLdouble data]
  GetFloatIndexedvEXT: [void, GLenum target, GLuint index, GLfloat data]
  GetFloati_vEXT: [void, GLenum target, GLuint index, GLfloat data]
  GetFramebufferParameterivEXT: [void, GLuint framebuffer, GLenum pname, GLint params]
  GetMultiTexEnvfvEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat
      params]
  GetMultiTexEnvivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint params]
  GetMultiTexGendvEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLdouble
      params]
  GetMultiTexGenfvEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLfloat
      params]
  GetMultiTexGenivEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLint params]
  GetMultiTexImageEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum format,
    GLenum type, GLvoid pixels]
  GetMultiTexLevelParameterfvEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLenum pname, GLfloat params]
  GetMultiTexLevelParameterivEXT: [void, GLenum texunit, GLenum target, GLint level,
    GLenum pname, GLint params]
  GetMultiTexParameterIivEXT: [void, GLenum texunit, GLenum target, GLenum pname,
    GLint params]
  GetMultiTexParameterIuivEXT: [void, GLenum texunit, GLenum target, GLenum pname,
    GLuint params]
  GetMultiTexParameterfvEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat
      params]
  GetMultiTexParameterivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint
      params]
  GetNamedBufferParameterivEXT: [void, GLuint buffer, GLenum pname, GLint params]
  GetNamedBufferPointervEXT: [void, GLuint buffer, GLenum pname, GLvoid *params]
  GetNamedBufferSubDataEXT: [void, GLuint buffer, GLintptr offset, GLsizeiptr size,
    GLvoid data]
  GetNamedFramebufferAttachmentParameterivEXT: [void, GLuint framebuffer, GLenum attachment,
    GLenum pname, GLint params]
  GetNamedProgramLocalParameterIivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLint params]
  GetNamedProgramLocalParameterIuivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLuint params]
  GetNamedProgramLocalParameterdvEXT: [void, GLuint program, GLenum target, GLuint
      index, GLdouble params]
  GetNamedProgramLocalParameterfvEXT: [void, GLuint program, GLenum target, GLuint
      index, GLfloat params]
  GetNamedProgramStringEXT: [void, GLuint program, GLenum target, GLenum pname, GLvoid
      string]
  GetNamedProgramivEXT: [void, GLuint program, GLenum target, GLenum pname, GLint
      params]
  GetNamedRenderbufferParameterivEXT: [void, GLuint renderbuffer, GLenum pname, GLint
      params]
  GetPointerIndexedvEXT: [void, GLenum target, GLuint index, GLvoid *data]
  GetPointeri_vEXT: [void, GLenum target, GLuint index, GLvoid *data]
  GetTextureImageEXT: [void, GLuint texture, GLenum target, GLint level, GLenum format,
    GLenum type, GLvoid pixels]
  GetTextureLevelParameterfvEXT: [void, GLuint texture, GLenum target, GLint level,
    GLenum pname, GLfloat params]
  GetTextureLevelParameterivEXT: [void, GLuint texture, GLenum target, GLint level,
    GLenum pname, GLint params]
  GetTextureParameterIivEXT: [void, GLuint texture, GLenum target, GLenum pname, GLint
      params]
  GetTextureParameterIuivEXT: [void, GLuint texture, GLenum target, GLenum pname,
    GLuint params]
  GetTextureParameterfvEXT: [void, GLuint texture, GLenum target, GLenum pname, GLfloat
      params]
  GetTextureParameterivEXT: [void, GLuint texture, GLenum target, GLenum pname, GLint
      params]
  GetVertexArrayIntegeri_vEXT: [void, GLuint vaobj, GLuint index, GLenum pname, GLint
      param]
  GetVertexArrayIntegervEXT: [void, GLuint vaobj, GLenum pname, GLint param]
  GetVertexArrayPointeri_vEXT: [void, GLuint vaobj, GLuint index, GLenum pname, GLvoid
      *param]
  GetVertexArrayPointervEXT: [void, GLuint vaobj, GLenum pname, GLvoid *param]
  MapNamedBufferEXT: [VoidPointer, GLuint buffer, GLenum access]
  MapNamedBufferRangeEXT: [VoidPointer, GLuint buffer, GLintptr offset, GLsizeiptr
      length, GLbitfield access]
  MatrixFrustumEXT: [void, GLenum mode, GLdouble left, GLdouble right, GLdouble bottom,
    GLdouble top, GLdouble zNear, GLdouble zFar]
  MatrixLoadIdentityEXT: [void, GLenum mode]
  MatrixLoadTransposedEXT: [void, GLenum mode, GLdouble m]
  MatrixLoadTransposefEXT: [void, GLenum mode, GLfloat m]
  MatrixLoaddEXT: [void, GLenum mode, GLdouble m]
  MatrixLoadfEXT: [void, GLenum mode, GLfloat m]
  MatrixMultTransposedEXT: [void, GLenum mode, GLdouble m]
  MatrixMultTransposefEXT: [void, GLenum mode, GLfloat m]
  MatrixMultdEXT: [void, GLenum mode, GLdouble m]
  MatrixMultfEXT: [void, GLenum mode, GLfloat m]
  MatrixOrthoEXT: [void, GLenum mode, GLdouble left, GLdouble right, GLdouble bottom,
    GLdouble top, GLdouble zNear, GLdouble zFar]
  MatrixPopEXT: [void, GLenum mode]
  MatrixPushEXT: [void, GLenum mode]
  MatrixRotatedEXT: [void, GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble
      z]
  MatrixRotatefEXT: [void, GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat
      z]
  MatrixScaledEXT: [void, GLenum mode, GLdouble x, GLdouble y, GLdouble z]
  MatrixScalefEXT: [void, GLenum mode, GLfloat x, GLfloat y, GLfloat z]
  MatrixTranslatedEXT: [void, GLenum mode, GLdouble x, GLdouble y, GLdouble z]
  MatrixTranslatefEXT: [void, GLenum mode, GLfloat x, GLfloat y, GLfloat z]
  MultiTexBufferEXT: [void, GLenum texunit, GLenum target, GLenum internalformat,
    GLuint buffer]
  MultiTexCoordPointerEXT: [void, GLenum texunit, GLint size, GLenum type, GLsizei
      stride, GLvoid pointer]
  MultiTexEnvfEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat param]
  MultiTexEnvfvEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat params]
  MultiTexEnviEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint param]
  MultiTexEnvivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint params]
  MultiTexGendEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLdouble param]
  MultiTexGendvEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLdouble params]
  MultiTexGenfEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLfloat param]
  MultiTexGenfvEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLfloat params]
  MultiTexGeniEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLint param]
  MultiTexGenivEXT: [void, GLenum texunit, GLenum coord, GLenum pname, GLint params]
  MultiTexImage1DEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLint border, GLenum format, GLenum type, GLvoid pixels]
  MultiTexImage2DEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid
      pixels]
  MultiTexImage3DEXT: [void, GLenum texunit, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum
      type, GLvoid pixels]
  MultiTexParameterIivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint
      params]
  MultiTexParameterIuivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLuint
      params]
  MultiTexParameterfEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat
      param]
  MultiTexParameterfvEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLfloat
      params]
  MultiTexParameteriEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint
      param]
  MultiTexParameterivEXT: [void, GLenum texunit, GLenum target, GLenum pname, GLint
      params]
  MultiTexRenderbufferEXT: [void, GLenum texunit, GLenum target, GLuint renderbuffer]
  MultiTexSubImage1DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLsizei width, GLenum format, GLenum type, GLvoid pixels]
  MultiTexSubImage2DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum
      type, GLvoid pixels]
  MultiTexSubImage3DEXT: [void, GLenum texunit, GLenum target, GLint level, GLint
      xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei
      depth, GLenum format, GLenum type, GLvoid pixels]
  NamedBufferDataEXT: [void, GLuint buffer, GLsizeiptr size, GLvoid data, GLenum usage]
  NamedBufferSubDataEXT: [void, GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid
      data]
  NamedCopyBufferSubDataEXT: [void, GLuint readBuffer, GLuint writeBuffer, GLintptr
      readOffset, GLintptr writeOffset, GLsizeiptr size]
  NamedFramebufferRenderbufferEXT: [void, GLuint framebuffer, GLenum attachment, GLenum
      renderbuffertarget, GLuint renderbuffer]
  NamedFramebufferTexture1DEXT: [void, GLuint framebuffer, GLenum attachment, GLenum
      textarget, GLuint texture, GLint level]
  NamedFramebufferTexture2DEXT: [void, GLuint framebuffer, GLenum attachment, GLenum
      textarget, GLuint texture, GLint level]
  NamedFramebufferTexture3DEXT: [void, GLuint framebuffer, GLenum attachment, GLenum
      textarget, GLuint texture, GLint level, GLint zoffset]
  NamedFramebufferTextureEXT: [void, GLuint framebuffer, GLenum attachment, GLuint
      texture, GLint level]
  NamedFramebufferTextureFaceEXT: [void, GLuint framebuffer, GLenum attachment, GLuint
      texture, GLint level, GLenum face]
  NamedFramebufferTextureLayerEXT: [void, GLuint framebuffer, GLenum attachment, GLuint
      texture, GLint level, GLint layer]
  NamedProgramLocalParameter4dEXT: [void, GLuint program, GLenum target, GLuint index,
    GLdouble x, GLdouble y, GLdouble z, GLdouble w]
  NamedProgramLocalParameter4dvEXT: [void, GLuint program, GLenum target, GLuint index,
    GLdouble params]
  NamedProgramLocalParameter4fEXT: [void, GLuint program, GLenum target, GLuint index,
    GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  NamedProgramLocalParameter4fvEXT: [void, GLuint program, GLenum target, GLuint index,
    GLfloat params]
  NamedProgramLocalParameterI4iEXT: [void, GLuint program, GLenum target, GLuint index,
    GLint x, GLint y, GLint z, GLint w]
  NamedProgramLocalParameterI4ivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLint params]
  NamedProgramLocalParameterI4uiEXT: [void, GLuint program, GLenum target, GLuint
      index, GLuint x, GLuint y, GLuint z, GLuint w]
  NamedProgramLocalParameterI4uivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLuint params]
  NamedProgramLocalParameters4fvEXT: [void, GLuint program, GLenum target, GLuint
      index, GLsizei count, GLfloat params]
  NamedProgramLocalParametersI4ivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLsizei count, GLint params]
  NamedProgramLocalParametersI4uivEXT: [void, GLuint program, GLenum target, GLuint
      index, GLsizei count, GLuint params]
  NamedProgramStringEXT: [void, GLuint program, GLenum target, GLenum format, GLsizei
      len, GLvoid string]
  NamedRenderbufferStorageEXT: [void, GLuint renderbuffer, GLenum internalformat,
    GLsizei width, GLsizei height]
  NamedRenderbufferStorageMultisampleCoverageEXT: [void, GLuint renderbuffer, GLsizei
      coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width,
    GLsizei height]
  NamedRenderbufferStorageMultisampleEXT: [void, GLuint renderbuffer, GLsizei samples,
    GLenum internalformat, GLsizei width, GLsizei height]
  ProgramUniform1dEXT: [void, GLuint program, GLint location, GLdouble x]
  ProgramUniform1dvEXT: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform1fEXT: [void, GLuint program, GLint location, GLfloat v0]
  ProgramUniform1fvEXT: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform1iEXT: [void, GLuint program, GLint location, GLint v0]
  ProgramUniform1ivEXT: [void, GLuint program, GLint location, GLsizei count, GLint
      value]
  ProgramUniform1uiEXT: [void, GLuint program, GLint location, GLuint v0]
  ProgramUniform1uivEXT: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform2dEXT: [void, GLuint program, GLint location, GLdouble x, GLdouble
      y]
  ProgramUniform2dvEXT: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform2fEXT: [void, GLuint program, GLint location, GLfloat v0, GLfloat
      v1]
  ProgramUniform2fvEXT: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform2iEXT: [void, GLuint program, GLint location, GLint v0, GLint v1]
  ProgramUniform2ivEXT: [void, GLuint program, GLint location, GLsizei count, GLint
      value]
  ProgramUniform2uiEXT: [void, GLuint program, GLint location, GLuint v0, GLuint v1]
  ProgramUniform2uivEXT: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform3dEXT: [void, GLuint program, GLint location, GLdouble x, GLdouble
      y, GLdouble z]
  ProgramUniform3dvEXT: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform3fEXT: [void, GLuint program, GLint location, GLfloat v0, GLfloat
      v1, GLfloat v2]
  ProgramUniform3fvEXT: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform3iEXT: [void, GLuint program, GLint location, GLint v0, GLint v1,
    GLint v2]
  ProgramUniform3ivEXT: [void, GLuint program, GLint location, GLsizei count, GLint
      value]
  ProgramUniform3uiEXT: [void, GLuint program, GLint location, GLuint v0, GLuint v1,
    GLuint v2]
  ProgramUniform3uivEXT: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniform4dEXT: [void, GLuint program, GLint location, GLdouble x, GLdouble
      y, GLdouble z, GLdouble w]
  ProgramUniform4dvEXT: [void, GLuint program, GLint location, GLsizei count, GLdouble
      value]
  ProgramUniform4fEXT: [void, GLuint program, GLint location, GLfloat v0, GLfloat
      v1, GLfloat v2, GLfloat v3]
  ProgramUniform4fvEXT: [void, GLuint program, GLint location, GLsizei count, GLfloat
      value]
  ProgramUniform4iEXT: [void, GLuint program, GLint location, GLint v0, GLint v1,
    GLint v2, GLint v3]
  ProgramUniform4ivEXT: [void, GLuint program, GLint location, GLsizei count, GLint
      value]
  ProgramUniform4uiEXT: [void, GLuint program, GLint location, GLuint v0, GLuint v1,
    GLuint v2, GLuint v3]
  ProgramUniform4uivEXT: [void, GLuint program, GLint location, GLsizei count, GLuint
      value]
  ProgramUniformMatrix2dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix2fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix2x3dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix2x3fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix2x4dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix2x4fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix3dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix3fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix3x2dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix3x2fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix3x4dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix3x4fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix4dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix4fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix4x2dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix4x2fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  ProgramUniformMatrix4x3dvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLdouble value]
  ProgramUniformMatrix4x3fvEXT: [void, GLuint program, GLint location, GLsizei count,
    GLboolean transpose, GLfloat value]
  PushClientAttribDefaultEXT: [void, GLbitfield mask]
  TextureBufferEXT: [void, GLuint texture, GLenum target, GLenum internalformat, GLuint
      buffer]
  TextureImage1DEXT: [void, GLuint texture, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLint border, GLenum format, GLenum type, GLvoid pixels]
  TextureImage2DEXT: [void, GLuint texture, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid
      pixels]
  TextureImage3DEXT: [void, GLuint texture, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum
      type, GLvoid pixels]
  TextureParameterIivEXT: [void, GLuint texture, GLenum target, GLenum pname, GLint
      params]
  TextureParameterIuivEXT: [void, GLuint texture, GLenum target, GLenum pname, GLuint
      params]
  TextureParameterfEXT: [void, GLuint texture, GLenum target, GLenum pname, GLfloat
      param]
  TextureParameterfvEXT: [void, GLuint texture, GLenum target, GLenum pname, GLfloat
      params]
  TextureParameteriEXT: [void, GLuint texture, GLenum target, GLenum pname, GLint
      param]
  TextureParameterivEXT: [void, GLuint texture, GLenum target, GLenum pname, GLint
      params]
  TextureRenderbufferEXT: [void, GLuint texture, GLenum target, GLuint renderbuffer]
  TextureSubImage1DEXT: [void, GLuint texture, GLenum target, GLint level, GLint xoffset,
    GLsizei width, GLenum format, GLenum type, GLvoid pixels]
  TextureSubImage2DEXT: [void, GLuint texture, GLenum target, GLint level, GLint xoffset,
    GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid
      pixels]
  TextureSubImage3DEXT: [void, GLuint texture, GLenum target, GLint level, GLint xoffset,
    GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum
      format, GLenum type, GLvoid pixels]
  UnmapNamedBufferEXT: [Boolean, GLuint buffer]
  VertexArrayColorOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLint size, GLenum
      type, GLsizei stride, GLintptr offset]
  VertexArrayEdgeFlagOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLsizei stride,
    GLintptr offset]
  VertexArrayFogCoordOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLenum type, GLsizei
      stride, GLintptr offset]
  VertexArrayIndexOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLenum type, GLsizei
      stride, GLintptr offset]
  VertexArrayMultiTexCoordOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLenum texunit,
    GLint size, GLenum type, GLsizei stride, GLintptr offset]
  VertexArrayNormalOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLenum type, GLsizei
      stride, GLintptr offset]
  VertexArraySecondaryColorOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLint size,
    GLenum type, GLsizei stride, GLintptr offset]
  VertexArrayTexCoordOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLint size, GLenum
      type, GLsizei stride, GLintptr offset]
  VertexArrayVertexAttribIOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLuint index,
    GLint size, GLenum type, GLsizei stride, GLintptr offset]
  VertexArrayVertexAttribOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLuint index,
    GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset]
  VertexArrayVertexOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLint size, GLenum
      type, GLsizei stride, GLintptr offset]
EXT_draw_buffers2:
  ColorMaskIndexedEXT: [void, GLuint index, GLboolean r, GLboolean g, GLboolean b,
    GLboolean a]
  DisableIndexedEXT: [void, GLenum target, GLuint index]
  EnableIndexedEXT: [void, GLenum target, GLuint index]
  GetBooleanIndexedvEXT: [void, GLenum target, GLuint index, GLboolean data]
  GetIntegerIndexedvEXT: [void, GLenum target, GLuint index, GLint data]
  IsEnabledIndexedEXT: [Boolean, GLenum target, GLuint index]
EXT_draw_instanced:
  DrawArraysInstancedEXT: [void, GLenum mode, GLint start, GLsizei count, GLsizei
      primcount]
  DrawElementsInstancedEXT: [void, GLenum mode, GLsizei count, GLenum type, GLvoid
      indices, GLsizei primcount]
EXT_draw_range_elements:
  DrawRangeElementsEXT: [void, GLenum mode, GLuint start, GLuint end, GLsizei count,
    GLenum type, GLvoid indices]
EXT_fog_coord:
  FogCoordPointerEXT: [void, GLenum type, GLsizei stride, GLvoid pointer]
  FogCoorddEXT: [void, GLdouble coord]
  FogCoorddvEXT: [void, GLdouble coord]
  FogCoordfEXT: [void, GLfloat coord]
  FogCoordfvEXT: [void, GLfloat coord]
EXT_framebuffer_blit:
  BlitFramebufferEXT: [void, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint
      dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter]
EXT_framebuffer_multisample:
  RenderbufferStorageMultisampleEXT: [void, GLenum target, GLsizei samples, GLenum
      internalformat, GLsizei width, GLsizei height]
EXT_framebuffer_object:
  BindFramebufferEXT: [void, GLenum target, GLuint framebuffer]
  BindRenderbufferEXT: [void, GLenum target, GLuint renderbuffer]
  CheckFramebufferStatusEXT: [GLenum, GLenum target]
  DeleteFramebuffersEXT: [void, GLsizei n, GLuint framebuffers]
  DeleteRenderbuffersEXT: [void, GLsizei n, GLuint renderbuffers]
  FramebufferRenderbufferEXT: [void, GLenum target, GLenum attachment, GLenum renderbuffertarget,
    GLuint renderbuffer]
  FramebufferTexture1DEXT: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level]
  FramebufferTexture2DEXT: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level]
  FramebufferTexture3DEXT: [void, GLenum target, GLenum attachment, GLenum textarget,
    GLuint texture, GLint level, GLint zoffset]
  GenFramebuffersEXT: [void, GLsizei n, GLuint framebuffers]
  GenRenderbuffersEXT: [void, GLsizei n, GLuint renderbuffers]
  GenerateMipmapEXT: [void, GLenum target]
  GetFramebufferAttachmentParameterivEXT: [void, GLenum target, GLenum attachment,
    GLenum pname, GLint params]
  GetRenderbufferParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  IsFramebufferEXT: [Boolean, GLuint framebuffer]
  IsRenderbufferEXT: [Boolean, GLuint renderbuffer]
  RenderbufferStorageEXT: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLsizei height]
EXT_geometry_shader4:
  ProgramParameteriEXT: [void, GLuint program, GLenum pname, GLint value]
EXT_gpu_program_parameters:
  ProgramEnvParameters4fvEXT: [void, GLenum target, GLuint index, GLsizei count, GLfloat
      params]
  ProgramLocalParameters4fvEXT: [void, GLenum target, GLuint index, GLsizei count,
    GLfloat params]
EXT_gpu_shader4:
  BindFragDataLocationEXT: [void, GLuint program, GLuint color, GLchar name]
  GetFragDataLocationEXT: [Int32, GLuint program, GLchar name]
  GetUniformuivEXT: [void, GLuint program, GLint location, GLuint params]
  Uniform1uiEXT: [void, GLint location, GLuint v0]
  Uniform1uivEXT: [void, GLint location, GLsizei count, GLuint value]
  Uniform2uiEXT: [void, GLint location, GLuint v0, GLuint v1]
  Uniform2uivEXT: [void, GLint location, GLsizei count, GLuint value]
  Uniform3uiEXT: [void, GLint location, GLuint v0, GLuint v1, GLuint v2]
  Uniform3uivEXT: [void, GLint location, GLsizei count, GLuint value]
  Uniform4uiEXT: [void, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3]
  Uniform4uivEXT: [void, GLint location, GLsizei count, GLuint value]
EXT_histogram:
  GetHistogramEXT: [void, GLenum target, GLboolean reset, GLenum format, GLenum type,
    GLvoid values]
  GetHistogramParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  GetHistogramParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  GetMinmaxEXT: [void, GLenum target, GLboolean reset, GLenum format, GLenum type,
    GLvoid values]
  GetMinmaxParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  GetMinmaxParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  HistogramEXT: [void, GLenum target, GLsizei width, GLenum internalformat, GLboolean
      sink]
  MinmaxEXT: [void, GLenum target, GLenum internalformat, GLboolean sink]
  ResetHistogramEXT: [void, GLenum target]
  ResetMinmaxEXT: [void, GLenum target]
EXT_index_func:
  IndexFuncEXT: [void, GLenum func, GLclampf ref]
EXT_index_material:
  IndexMaterialEXT: [void, GLenum face, GLenum mode]
EXT_light_texture:
  ApplyTextureEXT: [void, GLenum mode]
  TextureLightEXT: [void, GLenum pname]
  TextureMaterialEXT: [void, GLenum face, GLenum mode]
EXT_multi_draw_arrays:
  MultiDrawArraysEXT: [void, GLenum mode, GLint first, GLsizei count, GLsizei primcount]
  MultiDrawElementsEXT: [void, GLenum mode, GLsizei count, GLenum type, GLvoid *indices,
    GLsizei primcount]
EXT_multisample:
  SampleMaskEXT: [void, GLclampf value, GLboolean invert]
  SamplePatternEXT: [void, GLenum pattern]
EXT_paletted_texture:
  ColorTableEXT: [void, GLenum target, GLenum internalFormat, GLsizei width, GLenum
      format, GLenum type, GLvoid table]
  GetColorTableEXT: [void, GLenum target, GLenum format, GLenum type, GLvoid data]
  GetColorTableParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  GetColorTableParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
EXT_pixel_transform:
  GetPixelTransformParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  GetPixelTransformParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
  PixelTransformParameterfEXT: [void, GLenum target, GLenum pname, GLfloat param]
  PixelTransformParameterfvEXT: [void, GLenum target, GLenum pname, GLfloat params]
  PixelTransformParameteriEXT: [void, GLenum target, GLenum pname, GLint param]
  PixelTransformParameterivEXT: [void, GLenum target, GLenum pname, GLint params]
EXT_point_parameters:
  PointParameterfEXT: [void, GLenum pname, GLfloat param]
  PointParameterfvEXT: [void, GLenum pname, GLfloat params]
EXT_polygon_offset:
  PolygonOffsetEXT: [void, GLfloat factor, GLfloat bias]
EXT_provoking_vertex:
  ProvokingVertexEXT: [void, GLenum mode]
EXT_secondary_color:
  SecondaryColor3bEXT: [void, GLbyte red, GLbyte green, GLbyte blue]
  SecondaryColor3bvEXT: [void, GLbyte v]
  SecondaryColor3dEXT: [void, GLdouble red, GLdouble green, GLdouble blue]
  SecondaryColor3dvEXT: [void, GLdouble v]
  SecondaryColor3fEXT: [void, GLfloat red, GLfloat green, GLfloat blue]
  SecondaryColor3fvEXT: [void, GLfloat v]
  SecondaryColor3iEXT: [void, GLint red, GLint green, GLint blue]
  SecondaryColor3ivEXT: [void, GLint v]
  SecondaryColor3sEXT: [void, GLshort red, GLshort green, GLshort blue]
  SecondaryColor3svEXT: [void, GLshort v]
  SecondaryColor3ubEXT: [void, GLubyte red, GLubyte green, GLubyte blue]
  SecondaryColor3ubvEXT: [void, GLubyte v]
  SecondaryColor3uiEXT: [void, GLuint red, GLuint green, GLuint blue]
  SecondaryColor3uivEXT: [void, GLuint v]
  SecondaryColor3usEXT: [void, GLushort red, GLushort green, GLushort blue]
  SecondaryColor3usvEXT: [void, GLushort v]
  SecondaryColorPointerEXT: [void, GLint size, GLenum type, GLsizei stride, GLvoid
      pointer]
EXT_separate_shader_objects:
  ActiveProgramEXT: [void, GLuint program]
  CreateShaderProgramEXT: [UInt32, GLenum type, GLchar string]
  UseShaderProgramEXT: [void, GLenum type, GLuint program]
EXT_shader_image_load_store:
  BindImageTextureEXT: [void, GLuint index, GLuint texture, GLint level, GLboolean
      layered, GLint layer, GLenum access, GLint format]
  MemoryBarrierEXT: [void, GLbitfield barriers]
EXT_stencil_clear_tag:
  StencilClearTagEXT: [void, GLsizei stencilTagBits, GLuint stencilClearTag]
EXT_stencil_two_side:
  ActiveStencilFaceEXT: [void, GLenum face]
EXT_subtexture:
  TexSubImage1DEXT: [void, GLenum target, GLint level, GLint xoffset, GLsizei width,
    GLenum format, GLenum type, GLvoid pixels]
  TexSubImage2DEXT: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid pixels]
EXT_texture3D:
  TexImage3DEXT: [void, GLenum target, GLint level, GLenum internalformat, GLsizei
      width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type,
    GLvoid pixels]
  TexSubImage3DEXT: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum
      type, GLvoid pixels]
EXT_texture_buffer_object:
  TexBufferEXT: [void, GLenum target, GLenum internalformat, GLuint buffer]
EXT_texture_integer:
  ClearColorIiEXT: [void, GLint red, GLint green, GLint blue, GLint alpha]
  ClearColorIuiEXT: [void, GLuint red, GLuint green, GLuint blue, GLuint alpha]
  GetTexParameterIivEXT: [void, GLenum target, GLenum pname, GLint params]
  GetTexParameterIuivEXT: [void, GLenum target, GLenum pname, GLuint params]
  TexParameterIivEXT: [void, GLenum target, GLenum pname, GLint params]
  TexParameterIuivEXT: [void, GLenum target, GLenum pname, GLuint params]
EXT_texture_object:
  AreTexturesResidentEXT: [Boolean, GLsizei n, GLuint textures, GLboolean residences]
  BindTextureEXT: [void, GLenum target, GLuint texture]
  DeleteTexturesEXT: [void, GLsizei n, GLuint textures]
  GenTexturesEXT: [void, GLsizei n, GLuint textures]
  IsTextureEXT: [Boolean, GLuint texture]
  PrioritizeTexturesEXT: [void, GLsizei n, GLuint textures, GLclampf priorities]
EXT_texture_perturb_normal:
  TextureNormalEXT: [void, GLenum mode]
EXT_timer_query:
  GetQueryObjecti64vEXT: [void, GLuint id, GLenum pname, GLint64EXT params]
  GetQueryObjectui64vEXT: [void, GLuint id, GLenum pname, GLuint64EXT params]
EXT_transform_feedback:
  BeginTransformFeedbackEXT: [void, GLenum primitiveMode]
  BindBufferBaseEXT: [void, GLenum target, GLuint index, GLuint buffer]
  BindBufferOffsetEXT: [void, GLenum target, GLuint index, GLuint buffer, GLintptr
      offset]
  BindBufferRangeEXT: [void, GLenum target, GLuint index, GLuint buffer, GLintptr
      offset, GLsizeiptr size]
  EndTransformFeedbackEXT: [void]
  GetTransformFeedbackVaryingEXT: [void, GLuint program, GLuint index, GLsizei bufSize,
    GLsizei length, GLsizei size, GLenum type, GLchar name]
  TransformFeedbackVaryingsEXT: [void, GLuint program, GLsizei count, GLchar *varyings,
    GLenum bufferMode]
EXT_vertex_array:
  ArrayElementEXT: [void, GLint i]
  ColorPointerEXT: [void, GLint size, GLenum type, GLsizei stride, GLsizei count,
    GLvoid pointer]
  DrawArraysEXT: [void, GLenum mode, GLint first, GLsizei count]
  EdgeFlagPointerEXT: [void, GLsizei stride, GLsizei count, GLboolean pointer]
  GetPointervEXT: [void, GLenum pname, GLvoid *params]
  IndexPointerEXT: [void, GLenum type, GLsizei stride, GLsizei count, GLvoid pointer]
  NormalPointerEXT: [void, GLenum type, GLsizei stride, GLsizei count, GLvoid pointer]
  TexCoordPointerEXT: [void, GLint size, GLenum type, GLsizei stride, GLsizei count,
    GLvoid pointer]
  VertexPointerEXT: [void, GLint size, GLenum type, GLsizei stride, GLsizei count,
    GLvoid pointer]
EXT_vertex_attrib_64bit:
  GetVertexAttribLdvEXT: [void, GLuint index, GLenum pname, GLdouble params]
  VertexArrayVertexAttribLOffsetEXT: [void, GLuint vaobj, GLuint buffer, GLuint index,
    GLint size, GLenum type, GLsizei stride, GLintptr offset]
  VertexAttribL1dEXT: [void, GLuint index, GLdouble x]
  VertexAttribL1dvEXT: [void, GLuint index, GLdouble v]
  VertexAttribL2dEXT: [void, GLuint index, GLdouble x, GLdouble y]
  VertexAttribL2dvEXT: [void, GLuint index, GLdouble v]
  VertexAttribL3dEXT: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z]
  VertexAttribL3dvEXT: [void, GLuint index, GLdouble v]
  VertexAttribL4dEXT: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexAttribL4dvEXT: [void, GLuint index, GLdouble v]
  VertexAttribLPointerEXT: [void, GLuint index, GLint size, GLenum type, GLsizei stride,
    GLvoid pointer]
EXT_vertex_shader:
  BeginVertexShaderEXT: [void]
  BindLightParameterEXT: [UInt32, GLenum light, GLenum value]
  BindMaterialParameterEXT: [UInt32, GLenum face, GLenum value]
  BindParameterEXT: [UInt32, GLenum value]
  BindTexGenParameterEXT: [UInt32, GLenum unit, GLenum coord, GLenum value]
  BindTextureUnitParameterEXT: [UInt32, GLenum unit, GLenum value]
  BindVertexShaderEXT: [void, GLuint id]
  DeleteVertexShaderEXT: [void, GLuint id]
  DisableVariantClientStateEXT: [void, GLuint id]
  EnableVariantClientStateEXT: [void, GLuint id]
  EndVertexShaderEXT: [void]
  ExtractComponentEXT: [void, GLuint res, GLuint src, GLuint num]
  GenSymbolsEXT: [UInt32, GLenum datatype, GLenum storagetype, GLenum range, GLuint
      components]
  GenVertexShadersEXT: [UInt32, GLuint range]
  GetInvariantBooleanvEXT: [void, GLuint id, GLenum value, GLboolean data]
  GetInvariantFloatvEXT: [void, GLuint id, GLenum value, GLfloat data]
  GetInvariantIntegervEXT: [void, GLuint id, GLenum value, GLint data]
  GetLocalConstantBooleanvEXT: [void, GLuint id, GLenum value, GLboolean data]
  GetLocalConstantFloatvEXT: [void, GLuint id, GLenum value, GLfloat data]
  GetLocalConstantIntegervEXT: [void, GLuint id, GLenum value, GLint data]
  GetVariantBooleanvEXT: [void, GLuint id, GLenum value, GLboolean data]
  GetVariantFloatvEXT: [void, GLuint id, GLenum value, GLfloat data]
  GetVariantIntegervEXT: [void, GLuint id, GLenum value, GLint data]
  GetVariantPointervEXT: [void, GLuint id, GLenum value, GLvoid *data]
  InsertComponentEXT: [void, GLuint res, GLuint src, GLuint num]
  IsVariantEnabledEXT: [Boolean, GLuint id, GLenum cap]
  SetInvariantEXT: [void, GLuint id, GLenum type, GLvoid addr]
  SetLocalConstantEXT: [void, GLuint id, GLenum type, GLvoid addr]
  ShaderOp1EXT: [void, GLenum op, GLuint res, GLuint arg1]
  ShaderOp2EXT: [void, GLenum op, GLuint res, GLuint arg1, GLuint arg2]
  ShaderOp3EXT: [void, GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3]
  SwizzleEXT: [void, GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ,
    GLenum outW]
  VariantPointerEXT: [void, GLuint id, GLenum type, GLuint stride, GLvoid addr]
  VariantbvEXT: [void, GLuint id, GLbyte addr]
  VariantdvEXT: [void, GLuint id, GLdouble addr]
  VariantfvEXT: [void, GLuint id, GLfloat addr]
  VariantivEXT: [void, GLuint id, GLint addr]
  VariantsvEXT: [void, GLuint id, GLshort addr]
  VariantubvEXT: [void, GLuint id, GLubyte addr]
  VariantuivEXT: [void, GLuint id, GLuint addr]
  VariantusvEXT: [void, GLuint id, GLushort addr]
  WriteMaskEXT: [void, GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ,
    GLenum outW]
EXT_vertex_weighting:
  VertexWeightPointerEXT: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  VertexWeightfEXT: [void, GLfloat weight]
  VertexWeightfvEXT: [void, GLfloat weight]
EXT_x11_sync_object:
  ImportSyncEXT: [sync, GLenum external_sync_type, GLintptr external_sync, GLbitfield
      flags]
GREMEDY_frame_terminator:
  FrameTerminatorGREMEDY: [void]
GREMEDY_string_marker:
  StringMarkerGREMEDY: [void, GLsizei len, GLvoid string]
HP_image_transform:
  GetImageTransformParameterfvHP: [void, GLenum target, GLenum pname, GLfloat params]
  GetImageTransformParameterivHP: [void, GLenum target, GLenum pname, GLint params]
  ImageTransformParameterfHP: [void, GLenum target, GLenum pname, GLfloat param]
  ImageTransformParameterfvHP: [void, GLenum target, GLenum pname, GLfloat params]
  ImageTransformParameteriHP: [void, GLenum target, GLenum pname, GLint param]
  ImageTransformParameterivHP: [void, GLenum target, GLenum pname, GLint params]
IBM_multimode_draw_arrays:
  MultiModeDrawArraysIBM: [void, GLenum mode, GLint first, GLsizei count, GLsizei
      primcount, GLint modestride]
  MultiModeDrawElementsIBM: [void, GLenum mode, GLsizei count, GLenum type, GLvoid*const
      indices, GLsizei primcount, GLint modestride]
IBM_static_data:
  FlushStaticDataIBM: [void, GLenum target]
IBM_vertex_array_lists:
  ColorPointerListIBM: [void, GLint size, GLenum type, GLint stride, GLvoid *pointer,
    GLint ptrstride]
  EdgeFlagPointerListIBM: [void, GLint stride, GLboolean *pointer, GLint ptrstride]
  FogCoordPointerListIBM: [void, GLenum type, GLint stride, GLvoid *pointer, GLint
      ptrstride]
  IndexPointerListIBM: [void, GLenum type, GLint stride, GLvoid *pointer, GLint ptrstride]
  NormalPointerListIBM: [void, GLenum type, GLint stride, GLvoid *pointer, GLint ptrstride]
  SecondaryColorPointerListIBM: [void, GLint size, GLenum type, GLint stride, GLvoid
      *pointer, GLint ptrstride]
  TexCoordPointerListIBM: [void, GLint size, GLenum type, GLint stride, GLvoid *pointer,
    GLint ptrstride]
  VertexPointerListIBM: [void, GLint size, GLenum type, GLint stride, GLvoid *pointer,
    GLint ptrstride]
INGR_blend_func_separate:
  BlendFuncSeparateINGR: [void, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha,
    GLenum dfactorAlpha]
INTEL_map_texture:
  MapTexture2DINTEL: [VoidPointer, GLuint texture, GLint level, GLbitfield access,
    GLint stride, GLenum layout]
  SyncTextureINTEL: [void, GLuint texture]
  UnmapTexture2DINTEL: [void, GLuint texture, GLint level]
INTEL_parallel_arrays:
  ColorPointervINTEL: [void, GLint size, GLenum type, GLvoid *pointer]
  NormalPointervINTEL: [void, GLenum type, GLvoid *pointer]
  TexCoordPointervINTEL: [void, GLint size, GLenum type, GLvoid *pointer]
  VertexPointervINTEL: [void, GLint size, GLenum type, GLvoid *pointer]
KHR_debug:
  DebugMessageCallback: [void, GLDEBUGPROC callback, void *userParam]
  DebugMessageControl: [void, GLenum source, GLenum type, GLenum severity, GLsizei
      count, GLuint ids, GLboolean enabled]
  DebugMessageInsert: [void, GLenum source, GLenum type, GLuint id, GLenum severity,
    GLsizei length, GLchar buf]
  GetDebugMessageLog: [UInt32, GLuint count, GLsizei bufsize, GLenum sources, GLenum
      types, GLuint ids, GLenum severities, GLsizei lengths, GLchar messageLog]
  GetObjectLabel: [void, GLenum identifier, GLuint name, GLsizei bufSize, GLsizei
      length, GLchar label]
  GetObjectPtrLabel: [void, void *ptr, GLsizei bufSize, GLsizei length, GLchar label]
  ObjectLabel: [void, GLenum identifier, GLuint name, GLsizei length, GLchar label]
  ObjectPtrLabel: [void, void *ptr, GLsizei length, GLchar label]
  PopDebugGroup: [void]
  PushDebugGroup: [void, GLenum source, GLuint id, GLsizei length, GLchar message]
MESA_resize_buffers:
  ResizeBuffersMESA: [void]
MESA_window_pos:
  WindowPos2dMESA: [void, GLdouble x, GLdouble y]
  WindowPos2dvMESA: [void, GLdouble v]
  WindowPos2fMESA: [void, GLfloat x, GLfloat y]
  WindowPos2fvMESA: [void, GLfloat v]
  WindowPos2iMESA: [void, GLint x, GLint y]
  WindowPos2ivMESA: [void, GLint v]
  WindowPos2sMESA: [void, GLshort x, GLshort y]
  WindowPos2svMESA: [void, GLshort v]
  WindowPos3dMESA: [void, GLdouble x, GLdouble y, GLdouble z]
  WindowPos3dvMESA: [void, GLdouble v]
  WindowPos3fMESA: [void, GLfloat x, GLfloat y, GLfloat z]
  WindowPos3fvMESA: [void, GLfloat v]
  WindowPos3iMESA: [void, GLint x, GLint y, GLint z]
  WindowPos3ivMESA: [void, GLint v]
  WindowPos3sMESA: [void, GLshort x, GLshort y, GLshort z]
  WindowPos3svMESA: [void, GLshort v]
  WindowPos4dMESA: [void, GLdouble x, GLdouble y, GLdouble z, GLdouble w]
  WindowPos4dvMESA: [void, GLdouble v]
  WindowPos4fMESA: [void, GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  WindowPos4fvMESA: [void, GLfloat v]
  WindowPos4iMESA: [void, GLint x, GLint y, GLint z, GLint w]
  WindowPos4ivMESA: [void, GLint v]
  WindowPos4sMESA: [void, GLshort x, GLshort y, GLshort z, GLshort w]
  WindowPos4svMESA: [void, GLshort v]
NVX_conditional_render:
  BeginConditionalRenderNVX: [void, GLuint id]
  EndConditionalRenderNVX: [void]
NV_bindless_texture:
  GetImageHandleNV: [UInt64, GLuint texture, GLint level, GLboolean layered, GLint
      layer, GLenum format]
  GetTextureHandleNV: [UInt64, GLuint texture]
  GetTextureSamplerHandleNV: [UInt64, GLuint texture, GLuint sampler]
  IsImageHandleResidentNV: [Boolean, GLuint64 handle]
  IsTextureHandleResidentNV: [Boolean, GLuint64 handle]
  MakeImageHandleNonResidentNV: [void, GLuint64 handle]
  MakeImageHandleResidentNV: [void, GLuint64 handle, GLenum access]
  MakeTextureHandleNonResidentNV: [void, GLuint64 handle]
  MakeTextureHandleResidentNV: [void, GLuint64 handle]
  ProgramUniformHandleui64NV: [void, GLuint program, GLint location, GLuint64 value]
  ProgramUniformHandleui64vNV: [void, GLuint program, GLint location, GLsizei count,
    GLuint64 values]
  UniformHandleui64NV: [void, GLint location, GLuint64 value]
  UniformHandleui64vNV: [void, GLint location, GLsizei count, GLuint64 value]
NV_conditional_render:
  BeginConditionalRenderNV: [void, GLuint id, GLenum mode]
  EndConditionalRenderNV: [void]
NV_copy_image:
  CopyImageSubDataNV: [void, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint
      srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel,
    GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth]
NV_depth_buffer_float:
  ClearDepthdNV: [void, GLdouble depth]
  DepthBoundsdNV: [void, GLdouble zmin, GLdouble zmax]
  DepthRangedNV: [void, GLdouble zNear, GLdouble zFar]
NV_draw_texture:
  DrawTextureNV: [void, GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat
      x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1]
NV_evaluators:
  EvalMapsNV: [void, GLenum target, GLenum mode]
  GetMapAttribParameterfvNV: [void, GLenum target, GLuint index, GLenum pname, GLfloat
      params]
  GetMapAttribParameterivNV: [void, GLenum target, GLuint index, GLenum pname, GLint
      params]
  GetMapControlPointsNV: [void, GLenum target, GLuint index, GLenum type, GLsizei
      ustride, GLsizei vstride, GLboolean packed, GLvoid points]
  GetMapParameterfvNV: [void, GLenum target, GLenum pname, GLfloat params]
  GetMapParameterivNV: [void, GLenum target, GLenum pname, GLint params]
  MapControlPointsNV: [void, GLenum target, GLuint index, GLenum type, GLsizei ustride,
    GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, GLvoid points]
  MapParameterfvNV: [void, GLenum target, GLenum pname, GLfloat params]
  MapParameterivNV: [void, GLenum target, GLenum pname, GLint params]
NV_explicit_multisample:
  GetMultisamplefvNV: [void, GLenum pname, GLuint index, GLfloat val]
  SampleMaskIndexedNV: [void, GLuint index, GLbitfield mask]
  TexRenderbufferNV: [void, GLenum target, GLuint renderbuffer]
NV_fence:
  DeleteFencesNV: [void, GLsizei n, GLuint fences]
  FinishFenceNV: [void, GLuint fence]
  GenFencesNV: [void, GLsizei n, GLuint fences]
  GetFenceivNV: [void, GLuint fence, GLenum pname, GLint params]
  IsFenceNV: [Boolean, GLuint fence]
  SetFenceNV: [void, GLuint fence, GLenum condition]
  TestFenceNV: [Boolean, GLuint fence]
NV_fragment_program:
  GetProgramNamedParameterdvNV: [void, GLuint id, GLsizei len, GLubyte name, GLdouble
      params]
  GetProgramNamedParameterfvNV: [void, GLuint id, GLsizei len, GLubyte name, GLfloat
      params]
  ProgramNamedParameter4dNV: [void, GLuint id, GLsizei len, GLubyte name, GLdouble
      x, GLdouble y, GLdouble z, GLdouble w]
  ProgramNamedParameter4dvNV: [void, GLuint id, GLsizei len, GLubyte name, GLdouble
      v]
  ProgramNamedParameter4fNV: [void, GLuint id, GLsizei len, GLubyte name, GLfloat
      x, GLfloat y, GLfloat z, GLfloat w]
  ProgramNamedParameter4fvNV: [void, GLuint id, GLsizei len, GLubyte name, GLfloat
      v]
NV_framebuffer_multisample_coverage:
  RenderbufferStorageMultisampleCoverageNV: [void, GLenum target, GLsizei coverageSamples,
    GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height]
NV_geometry_program4:
  FramebufferTextureEXT: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level]
  FramebufferTextureFaceEXT: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level, GLenum face]
  FramebufferTextureLayerEXT: [void, GLenum target, GLenum attachment, GLuint texture,
    GLint level, GLint layer]
  ProgramVertexLimitNV: [void, GLenum target, GLint limit]
NV_gpu_program4:
  GetProgramEnvParameterIivNV: [void, GLenum target, GLuint index, GLint params]
  GetProgramEnvParameterIuivNV: [void, GLenum target, GLuint index, GLuint params]
  GetProgramLocalParameterIivNV: [void, GLenum target, GLuint index, GLint params]
  GetProgramLocalParameterIuivNV: [void, GLenum target, GLuint index, GLuint params]
  ProgramEnvParameterI4iNV: [void, GLenum target, GLuint index, GLint x, GLint y,
    GLint z, GLint w]
  ProgramEnvParameterI4ivNV: [void, GLenum target, GLuint index, GLint params]
  ProgramEnvParameterI4uiNV: [void, GLenum target, GLuint index, GLuint x, GLuint
      y, GLuint z, GLuint w]
  ProgramEnvParameterI4uivNV: [void, GLenum target, GLuint index, GLuint params]
  ProgramEnvParametersI4ivNV: [void, GLenum target, GLuint index, GLsizei count, GLint
      params]
  ProgramEnvParametersI4uivNV: [void, GLenum target, GLuint index, GLsizei count,
    GLuint params]
  ProgramLocalParameterI4iNV: [void, GLenum target, GLuint index, GLint x, GLint y,
    GLint z, GLint w]
  ProgramLocalParameterI4ivNV: [void, GLenum target, GLuint index, GLint params]
  ProgramLocalParameterI4uiNV: [void, GLenum target, GLuint index, GLuint x, GLuint
      y, GLuint z, GLuint w]
  ProgramLocalParameterI4uivNV: [void, GLenum target, GLuint index, GLuint params]
  ProgramLocalParametersI4ivNV: [void, GLenum target, GLuint index, GLsizei count,
    GLint params]
  ProgramLocalParametersI4uivNV: [void, GLenum target, GLuint index, GLsizei count,
    GLuint params]
NV_gpu_program5:
  GetProgramSubroutineParameteruivNV: [void, GLenum target, GLuint index, GLuint param]
  ProgramSubroutineParametersuivNV: [void, GLenum target, GLsizei count, GLuint params]
NV_gpu_shader5:
  GetUniformi64vNV: [void, GLuint program, GLint location, GLint64EXT params]
  ProgramUniform1i64NV: [void, GLuint program, GLint location, GLint64EXT x]
  ProgramUniform1i64vNV: [void, GLuint program, GLint location, GLsizei count, GLint64EXT
      value]
  ProgramUniform1ui64NV: [void, GLuint program, GLint location, GLuint64EXT x]
  ProgramUniform1ui64vNV: [void, GLuint program, GLint location, GLsizei count, GLuint64EXT
      value]
  ProgramUniform2i64NV: [void, GLuint program, GLint location, GLint64EXT x, GLint64EXT
      y]
  ProgramUniform2i64vNV: [void, GLuint program, GLint location, GLsizei count, GLint64EXT
      value]
  ProgramUniform2ui64NV: [void, GLuint program, GLint location, GLuint64EXT x, GLuint64EXT
      y]
  ProgramUniform2ui64vNV: [void, GLuint program, GLint location, GLsizei count, GLuint64EXT
      value]
  ProgramUniform3i64NV: [void, GLuint program, GLint location, GLint64EXT x, GLint64EXT
      y, GLint64EXT z]
  ProgramUniform3i64vNV: [void, GLuint program, GLint location, GLsizei count, GLint64EXT
      value]
  ProgramUniform3ui64NV: [void, GLuint program, GLint location, GLuint64EXT x, GLuint64EXT
      y, GLuint64EXT z]
  ProgramUniform3ui64vNV: [void, GLuint program, GLint location, GLsizei count, GLuint64EXT
      value]
  ProgramUniform4i64NV: [void, GLuint program, GLint location, GLint64EXT x, GLint64EXT
      y, GLint64EXT z, GLint64EXT w]
  ProgramUniform4i64vNV: [void, GLuint program, GLint location, GLsizei count, GLint64EXT
      value]
  ProgramUniform4ui64NV: [void, GLuint program, GLint location, GLuint64EXT x, GLuint64EXT
      y, GLuint64EXT z, GLuint64EXT w]
  ProgramUniform4ui64vNV: [void, GLuint program, GLint location, GLsizei count, GLuint64EXT
      value]
  Uniform1i64NV: [void, GLint location, GLint64EXT x]
  Uniform1i64vNV: [void, GLint location, GLsizei count, GLint64EXT value]
  Uniform1ui64NV: [void, GLint location, GLuint64EXT x]
  Uniform1ui64vNV: [void, GLint location, GLsizei count, GLuint64EXT value]
  Uniform2i64NV: [void, GLint location, GLint64EXT x, GLint64EXT y]
  Uniform2i64vNV: [void, GLint location, GLsizei count, GLint64EXT value]
  Uniform2ui64NV: [void, GLint location, GLuint64EXT x, GLuint64EXT y]
  Uniform2ui64vNV: [void, GLint location, GLsizei count, GLuint64EXT value]
  Uniform3i64NV: [void, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z]
  Uniform3i64vNV: [void, GLint location, GLsizei count, GLint64EXT value]
  Uniform3ui64NV: [void, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT
      z]
  Uniform3ui64vNV: [void, GLint location, GLsizei count, GLuint64EXT value]
  Uniform4i64NV: [void, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z,
    GLint64EXT w]
  Uniform4i64vNV: [void, GLint location, GLsizei count, GLint64EXT value]
  Uniform4ui64NV: [void, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT
      z, GLuint64EXT w]
  Uniform4ui64vNV: [void, GLint location, GLsizei count, GLuint64EXT value]
NV_half_float:
  Color3hNV: [void, GLhalfNV red, GLhalfNV green, GLhalfNV blue]
  Color3hvNV: [void, GLhalfNV v]
  Color4hNV: [void, GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha]
  Color4hvNV: [void, GLhalfNV v]
  FogCoordhNV: [void, GLhalfNV fog]
  FogCoordhvNV: [void, GLhalfNV fog]
  MultiTexCoord1hNV: [void, GLenum target, GLhalfNV s]
  MultiTexCoord1hvNV: [void, GLenum target, GLhalfNV v]
  MultiTexCoord2hNV: [void, GLenum target, GLhalfNV s, GLhalfNV t]
  MultiTexCoord2hvNV: [void, GLenum target, GLhalfNV v]
  MultiTexCoord3hNV: [void, GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r]
  MultiTexCoord3hvNV: [void, GLenum target, GLhalfNV v]
  MultiTexCoord4hNV: [void, GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV
      q]
  MultiTexCoord4hvNV: [void, GLenum target, GLhalfNV v]
  Normal3hNV: [void, GLhalfNV nx, GLhalfNV ny, GLhalfNV nz]
  Normal3hvNV: [void, GLhalfNV v]
  SecondaryColor3hNV: [void, GLhalfNV red, GLhalfNV green, GLhalfNV blue]
  SecondaryColor3hvNV: [void, GLhalfNV v]
  TexCoord1hNV: [void, GLhalfNV s]
  TexCoord1hvNV: [void, GLhalfNV v]
  TexCoord2hNV: [void, GLhalfNV s, GLhalfNV t]
  TexCoord2hvNV: [void, GLhalfNV v]
  TexCoord3hNV: [void, GLhalfNV s, GLhalfNV t, GLhalfNV r]
  TexCoord3hvNV: [void, GLhalfNV v]
  TexCoord4hNV: [void, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q]
  TexCoord4hvNV: [void, GLhalfNV v]
  Vertex2hNV: [void, GLhalfNV x, GLhalfNV y]
  Vertex2hvNV: [void, GLhalfNV v]
  Vertex3hNV: [void, GLhalfNV x, GLhalfNV y, GLhalfNV z]
  Vertex3hvNV: [void, GLhalfNV v]
  Vertex4hNV: [void, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w]
  Vertex4hvNV: [void, GLhalfNV v]
  VertexAttrib1hNV: [void, GLuint index, GLhalfNV x]
  VertexAttrib1hvNV: [void, GLuint index, GLhalfNV v]
  VertexAttrib2hNV: [void, GLuint index, GLhalfNV x, GLhalfNV y]
  VertexAttrib2hvNV: [void, GLuint index, GLhalfNV v]
  VertexAttrib3hNV: [void, GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z]
  VertexAttrib3hvNV: [void, GLuint index, GLhalfNV v]
  VertexAttrib4hNV: [void, GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV
      w]
  VertexAttrib4hvNV: [void, GLuint index, GLhalfNV v]
  VertexAttribs1hvNV: [void, GLuint index, GLsizei n, GLhalfNV v]
  VertexAttribs2hvNV: [void, GLuint index, GLsizei n, GLhalfNV v]
  VertexAttribs3hvNV: [void, GLuint index, GLsizei n, GLhalfNV v]
  VertexAttribs4hvNV: [void, GLuint index, GLsizei n, GLhalfNV v]
  VertexWeighthNV: [void, GLhalfNV weight]
  VertexWeighthvNV: [void, GLhalfNV weight]
NV_occlusion_query:
  BeginOcclusionQueryNV: [void, GLuint id]
  DeleteOcclusionQueriesNV: [void, GLsizei n, GLuint ids]
  EndOcclusionQueryNV: [void]
  GenOcclusionQueriesNV: [void, GLsizei n, GLuint ids]
  GetOcclusionQueryivNV: [void, GLuint id, GLenum pname, GLint params]
  GetOcclusionQueryuivNV: [void, GLuint id, GLenum pname, GLuint params]
  IsOcclusionQueryNV: [Boolean, GLuint id]
NV_parameter_buffer_object:
  ProgramBufferParametersIivNV: [void, GLenum target, GLuint bindingIndex, GLuint
      wordIndex, GLsizei count, GLint params]
  ProgramBufferParametersIuivNV: [void, GLenum target, GLuint bindingIndex, GLuint
      wordIndex, GLsizei count, GLuint params]
  ProgramBufferParametersfvNV: [void, GLenum target, GLuint bindingIndex, GLuint wordIndex,
    GLsizei count, GLfloat params]
NV_path_rendering:
  CopyPathNV: [void, GLuint resultPath, GLuint srcPath]
  CoverFillPathInstancedNV: [void, GLsizei numPaths, GLenum pathNameType, GLvoid paths,
    GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat transformValues]
  CoverFillPathNV: [void, GLuint path, GLenum coverMode]
  CoverStrokePathInstancedNV: [void, GLsizei numPaths, GLenum pathNameType, GLvoid
      paths, GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat transformValues]
  CoverStrokePathNV: [void, GLuint path, GLenum coverMode]
  DeletePathsNV: [void, GLuint path, GLsizei range]
  GenPathsNV: [Path, GLsizei range]
  GetPathColorGenfvNV: [void, GLenum color, GLenum pname, GLfloat value]
  GetPathColorGenivNV: [void, GLenum color, GLenum pname, GLint value]
  GetPathCommandsNV: [void, GLuint path, GLubyte commands]
  GetPathCoordsNV: [void, GLuint path, GLfloat coords]
  GetPathDashArrayNV: [void, GLuint path, GLfloat dashArray]
  GetPathLengthNV: [Float32, GLuint path, GLsizei startSegment, GLsizei numSegments]
  GetPathMetricRangeNV: [void, GLbitfield metricQueryMask, GLuint firstPathName, GLsizei
      numPaths, GLsizei stride, GLfloat metrics]
  GetPathMetricsNV: [void, GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType,
    GLvoid paths, GLuint pathBase, GLsizei stride, GLfloat metrics]
  GetPathParameterfvNV: [void, GLuint path, GLenum pname, GLfloat value]
  GetPathParameterivNV: [void, GLuint path, GLenum pname, GLint value]
  GetPathSpacingNV: [void, GLenum pathListMode, GLsizei numPaths, GLenum pathNameType,
    GLvoid paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum
      transformType, GLfloat returnedSpacing]
  GetPathTexGenfvNV: [void, GLenum texCoordSet, GLenum pname, GLfloat value]
  GetPathTexGenivNV: [void, GLenum texCoordSet, GLenum pname, GLint value]
  InterpolatePathsNV: [void, GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat
      weight]
  IsPathNV: [Boolean, GLuint path]
  IsPointInFillPathNV: [Boolean, GLuint path, GLuint mask, GLfloat x, GLfloat y]
  IsPointInStrokePathNV: [Boolean, GLuint path, GLfloat x, GLfloat y]
  PathColorGenNV: [void, GLenum color, GLenum genMode, GLenum colorFormat, GLfloat
      coeffs]
  PathCommandsNV: [void, GLuint path, GLsizei numCommands, GLubyte commands, GLsizei
      numCoords, GLenum coordType, GLvoid coords]
  PathCoordsNV: [void, GLuint path, GLsizei numCoords, GLenum coordType, GLvoid coords]
  PathCoverDepthFuncNV: [void, GLenum func]
  PathDashArrayNV: [void, GLuint path, GLsizei dashCount, GLfloat dashArray]
  PathFogGenNV: [void, GLenum genMode]
  PathGlyphRangeNV: [void, GLuint firstPathName, GLenum fontTarget, GLvoid fontName,
    GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs,
    GLuint pathParameterTemplate, GLfloat emScale]
  PathGlyphsNV: [void, GLuint firstPathName, GLenum fontTarget, GLvoid fontName, GLbitfield
      fontStyle, GLsizei numGlyphs, GLenum type, GLvoid charcodes, GLenum handleMissingGlyphs,
    GLuint pathParameterTemplate, GLfloat emScale]
  PathParameterfNV: [void, GLuint path, GLenum pname, GLfloat value]
  PathParameterfvNV: [void, GLuint path, GLenum pname, GLfloat value]
  PathParameteriNV: [void, GLuint path, GLenum pname, GLint value]
  PathParameterivNV: [void, GLuint path, GLenum pname, GLint value]
  PathStencilDepthOffsetNV: [void, GLfloat factor, GLfloat units]
  PathStencilFuncNV: [void, GLenum func, GLint ref, GLuint mask]
  PathStringNV: [void, GLuint path, GLenum format, GLsizei length, GLvoid pathString]
  PathSubCommandsNV: [void, GLuint path, GLsizei commandStart, GLsizei commandsToDelete,
    GLsizei numCommands, GLubyte commands, GLsizei numCoords, GLenum coordType, GLvoid
      coords]
  PathSubCoordsNV: [void, GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum
      coordType, GLvoid coords]
  PathTexGenNV: [void, GLenum texCoordSet, GLenum genMode, GLint components, GLfloat
      coeffs]
  PointAlongPathNV: [Boolean, GLuint path, GLsizei startSegment, GLsizei numSegments,
    GLfloat distance, GLfloat x, GLfloat y, GLfloat tangentX, GLfloat tangentY]
  StencilFillPathInstancedNV: [void, GLsizei numPaths, GLenum pathNameType, GLvoid
      paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType,
    GLfloat transformValues]
  StencilFillPathNV: [void, GLuint path, GLenum fillMode, GLuint mask]
  StencilStrokePathInstancedNV: [void, GLsizei numPaths, GLenum pathNameType, GLvoid
      paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType,
    GLfloat transformValues]
  StencilStrokePathNV: [void, GLuint path, GLint reference, GLuint mask]
  TransformPathNV: [void, GLuint resultPath, GLuint srcPath, GLenum transformType,
    GLfloat transformValues]
  WeightPathsNV: [void, GLuint resultPath, GLsizei numPaths, GLuint paths, GLfloat
      weights]
NV_pixel_data_range:
  FlushPixelDataRangeNV: [void, GLenum target]
  PixelDataRangeNV: [void, GLenum target, GLsizei length, GLvoid pointer]
NV_point_sprite:
  PointParameteriNV: [void, GLenum pname, GLint param]
  PointParameterivNV: [void, GLenum pname, GLint params]
NV_present_video:
  GetVideoi64vNV: [void, GLuint video_slot, GLenum pname, GLint64EXT params]
  GetVideoivNV: [void, GLuint video_slot, GLenum pname, GLint params]
  GetVideoui64vNV: [void, GLuint video_slot, GLenum pname, GLuint64EXT params]
  GetVideouivNV: [void, GLuint video_slot, GLenum pname, GLuint params]
  PresentFrameDualFillNV: [void, GLuint video_slot, GLuint64EXT minPresentTime, GLuint
      beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint
      fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3,
    GLuint fill3]
  PresentFrameKeyedNV: [void, GLuint video_slot, GLuint64EXT minPresentTime, GLuint
      beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint
      fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1]
NV_primitive_restart:
  PrimitiveRestartIndexNV: [void, GLuint index]
  PrimitiveRestartNV: [void]
NV_register_combiners:
  CombinerInputNV: [void, GLenum stage, GLenum portion, GLenum variable, GLenum input,
    GLenum mapping, GLenum componentUsage]
  CombinerOutputNV: [void, GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput,
    GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean
      cdDotProduct, GLboolean muxSum]
  CombinerParameterfNV: [void, GLenum pname, GLfloat param]
  CombinerParameterfvNV: [void, GLenum pname, GLfloat params]
  CombinerParameteriNV: [void, GLenum pname, GLint param]
  CombinerParameterivNV: [void, GLenum pname, GLint params]
  FinalCombinerInputNV: [void, GLenum variable, GLenum input, GLenum mapping, GLenum
      componentUsage]
  GetCombinerInputParameterfvNV: [void, GLenum stage, GLenum portion, GLenum variable,
    GLenum pname, GLfloat params]
  GetCombinerInputParameterivNV: [void, GLenum stage, GLenum portion, GLenum variable,
    GLenum pname, GLint params]
  GetCombinerOutputParameterfvNV: [void, GLenum stage, GLenum portion, GLenum pname,
    GLfloat params]
  GetCombinerOutputParameterivNV: [void, GLenum stage, GLenum portion, GLenum pname,
    GLint params]
  GetFinalCombinerInputParameterfvNV: [void, GLenum variable, GLenum pname, GLfloat
      params]
  GetFinalCombinerInputParameterivNV: [void, GLenum variable, GLenum pname, GLint
      params]
NV_register_combiners2:
  CombinerStageParameterfvNV: [void, GLenum stage, GLenum pname, GLfloat params]
  GetCombinerStageParameterfvNV: [void, GLenum stage, GLenum pname, GLfloat params]
NV_shader_buffer_load:
  GetBufferParameterui64vNV: [void, GLenum target, GLenum pname, GLuint64EXT params]
  GetIntegerui64vNV: [void, GLenum value, GLuint64EXT result]
  GetNamedBufferParameterui64vNV: [void, GLuint buffer, GLenum pname, GLuint64EXT
      params]
  GetUniformui64vNV: [void, GLuint program, GLint location, GLuint64EXT params]
  IsBufferResidentNV: [Boolean, GLenum target]
  IsNamedBufferResidentNV: [Boolean, GLuint buffer]
  MakeBufferNonResidentNV: [void, GLenum target]
  MakeBufferResidentNV: [void, GLenum target, GLenum access]
  MakeNamedBufferNonResidentNV: [void, GLuint buffer]
  MakeNamedBufferResidentNV: [void, GLuint buffer, GLenum access]
  ProgramUniformui64NV: [void, GLuint program, GLint location, GLuint64EXT value]
  ProgramUniformui64vNV: [void, GLuint program, GLint location, GLsizei count, GLuint64EXT
      value]
  Uniformui64NV: [void, GLint location, GLuint64EXT value]
  Uniformui64vNV: [void, GLint location, GLsizei count, GLuint64EXT value]
NV_texture_barrier:
  TextureBarrierNV: [void]
NV_texture_multisample:
  TexImage2DMultisampleCoverageNV: [void, GLenum target, GLsizei coverageSamples,
    GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean
      fixedSampleLocations]
  TexImage3DMultisampleCoverageNV: [void, GLenum target, GLsizei coverageSamples,
    GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei
      depth, GLboolean fixedSampleLocations]
  TextureImage2DMultisampleCoverageNV: [void, GLuint texture, GLenum target, GLsizei
      coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width,
    GLsizei height, GLboolean fixedSampleLocations]
  TextureImage2DMultisampleNV: [void, GLuint texture, GLenum target, GLsizei samples,
    GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations]
  TextureImage3DMultisampleCoverageNV: [void, GLuint texture, GLenum target, GLsizei
      coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width,
    GLsizei height, GLsizei depth, GLboolean fixedSampleLocations]
  TextureImage3DMultisampleNV: [void, GLuint texture, GLenum target, GLsizei samples,
    GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean
      fixedSampleLocations]
NV_transform_feedback:
  ActiveVaryingNV: [void, GLuint program, GLchar name]
  BeginTransformFeedbackNV: [void, GLenum primitiveMode]
  BindBufferBaseNV: [void, GLenum target, GLuint index, GLuint buffer]
  BindBufferOffsetNV: [void, GLenum target, GLuint index, GLuint buffer, GLintptr
      offset]
  BindBufferRangeNV: [void, GLenum target, GLuint index, GLuint buffer, GLintptr offset,
    GLsizeiptr size]
  EndTransformFeedbackNV: [void]
  GetActiveVaryingNV: [void, GLuint program, GLuint index, GLsizei bufSize, GLsizei
      length, GLsizei size, GLenum type, GLchar name]
  GetTransformFeedbackVaryingNV: [void, GLuint program, GLuint index, GLint location]
  GetVaryingLocationNV: [Int32, GLuint program, GLchar name]
  TransformFeedbackAttribsNV: [void, GLsizei count, GLint attribs, GLenum bufferMode]
  TransformFeedbackStreamAttribsNV: [void, GLsizei count, GLint attribs, GLsizei nbuffers,
    GLint bufstreams, GLenum bufferMode]
  TransformFeedbackVaryingsNV: [void, GLuint program, GLsizei count, GLint locations,
    GLenum bufferMode]
NV_transform_feedback2:
  BindTransformFeedbackNV: [void, GLenum target, GLuint id]
  DeleteTransformFeedbacksNV: [void, GLsizei n, GLuint ids]
  DrawTransformFeedbackNV: [void, GLenum mode, GLuint id]
  GenTransformFeedbacksNV: [void, GLsizei n, GLuint ids]
  IsTransformFeedbackNV: [Boolean, GLuint id]
  PauseTransformFeedbackNV: [void]
  ResumeTransformFeedbackNV: [void]
NV_vdpau_interop:
  VDPAUFiniNV: [void]
  VDPAUGetSurfaceivNV: [void, GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize,
    GLsizei length, GLint values]
  VDPAUInitNV: [void, GLvoid vdpDevice, GLvoid getProcAddress]
  VDPAUIsSurfaceNV: [void, GLvdpauSurfaceNV surface]
  VDPAUMapSurfacesNV: [void, GLsizei numSurfaces, GLvdpauSurfaceNV surfaces]
  VDPAURegisterOutputSurfaceNV: [vdpauSurfaceNV, GLvoid *vdpSurface, GLenum target,
    GLsizei numTextureNames, GLuint textureNames]
  VDPAURegisterVideoSurfaceNV: [vdpauSurfaceNV, GLvoid vdpSurface, GLenum target,
    GLsizei numTextureNames, GLuint textureNames]
  VDPAUSurfaceAccessNV: [void, GLvdpauSurfaceNV surface, GLenum access]
  VDPAUUnmapSurfacesNV: [void, GLsizei numSurface, GLvdpauSurfaceNV surfaces]
  VDPAUUnregisterSurfaceNV: [void, GLvdpauSurfaceNV surface]
NV_vertex_array_range:
  FlushVertexArrayRangeNV: [void]
  VertexArrayRangeNV: [void, GLsizei length, GLvoid pointer]
NV_vertex_attrib_integer_64bit:
  GetVertexAttribLi64vNV: [void, GLuint index, GLenum pname, GLint64EXT params]
  GetVertexAttribLui64vNV: [void, GLuint index, GLenum pname, GLuint64EXT params]
  VertexAttribL1i64NV: [void, GLuint index, GLint64EXT x]
  VertexAttribL1i64vNV: [void, GLuint index, GLint64EXT v]
  VertexAttribL1ui64NV: [void, GLuint index, GLuint64EXT x]
  VertexAttribL1ui64vNV: [void, GLuint index, GLuint64EXT v]
  VertexAttribL2i64NV: [void, GLuint index, GLint64EXT x, GLint64EXT y]
  VertexAttribL2i64vNV: [void, GLuint index, GLint64EXT v]
  VertexAttribL2ui64NV: [void, GLuint index, GLuint64EXT x, GLuint64EXT y]
  VertexAttribL2ui64vNV: [void, GLuint index, GLuint64EXT v]
  VertexAttribL3i64NV: [void, GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT
      z]
  VertexAttribL3i64vNV: [void, GLuint index, GLint64EXT v]
  VertexAttribL3ui64NV: [void, GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT
      z]
  VertexAttribL3ui64vNV: [void, GLuint index, GLuint64EXT v]
  VertexAttribL4i64NV: [void, GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT
      z, GLint64EXT w]
  VertexAttribL4i64vNV: [void, GLuint index, GLint64EXT v]
  VertexAttribL4ui64NV: [void, GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT
      z, GLuint64EXT w]
  VertexAttribL4ui64vNV: [void, GLuint index, GLuint64EXT v]
  VertexAttribLFormatNV: [void, GLuint index, GLint size, GLenum type, GLsizei stride]
NV_vertex_buffer_unified_memory:
  BufferAddressRangeNV: [void, GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr
      length]
  ColorFormatNV: [void, GLint size, GLenum type, GLsizei stride]
  EdgeFlagFormatNV: [void, GLsizei stride]
  FogCoordFormatNV: [void, GLenum type, GLsizei stride]
  GetIntegerui64i_vNV: [void, GLenum value, GLuint index, GLuint64EXT result]
  IndexFormatNV: [void, GLenum type, GLsizei stride]
  NormalFormatNV: [void, GLenum type, GLsizei stride]
  SecondaryColorFormatNV: [void, GLint size, GLenum type, GLsizei stride]
  TexCoordFormatNV: [void, GLint size, GLenum type, GLsizei stride]
  VertexAttribFormatNV: [void, GLuint index, GLint size, GLenum type, GLboolean normalized,
    GLsizei stride]
  VertexAttribIFormatNV: [void, GLuint index, GLint size, GLenum type, GLsizei stride]
  VertexFormatNV: [void, GLint size, GLenum type, GLsizei stride]
NV_vertex_program:
  AreProgramsResidentNV: [Boolean, GLsizei n, GLuint programs, GLboolean residences]
  BindProgramNV: [void, GLenum target, GLuint id]
  DeleteProgramsNV: [void, GLsizei n, GLuint programs]
  ExecuteProgramNV: [void, GLenum target, GLuint id, GLfloat params]
  GenProgramsNV: [void, GLsizei n, GLuint programs]
  GetProgramParameterdvNV: [void, GLenum target, GLuint index, GLenum pname, GLdouble
      params]
  GetProgramParameterfvNV: [void, GLenum target, GLuint index, GLenum pname, GLfloat
      params]
  GetProgramStringNV: [void, GLuint id, GLenum pname, GLubyte program]
  GetProgramivNV: [void, GLuint id, GLenum pname, GLint params]
  GetTrackMatrixivNV: [void, GLenum target, GLuint address, GLenum pname, GLint params]
  GetVertexAttribPointervNV: [void, GLuint index, GLenum pname, GLvoid *pointer]
  GetVertexAttribdvNV: [void, GLuint index, GLenum pname, GLdouble params]
  GetVertexAttribfvNV: [void, GLuint index, GLenum pname, GLfloat params]
  GetVertexAttribivNV: [void, GLuint index, GLenum pname, GLint params]
  IsProgramNV: [Boolean, GLuint id]
  LoadProgramNV: [void, GLenum target, GLuint id, GLsizei len, GLubyte program]
  ProgramParameter4dNV: [void, GLenum target, GLuint index, GLdouble x, GLdouble y,
    GLdouble z, GLdouble w]
  ProgramParameter4dvNV: [void, GLenum target, GLuint index, GLdouble v]
  ProgramParameter4fNV: [void, GLenum target, GLuint index, GLfloat x, GLfloat y,
    GLfloat z, GLfloat w]
  ProgramParameter4fvNV: [void, GLenum target, GLuint index, GLfloat v]
  ProgramParameters4dvNV: [void, GLenum target, GLuint index, GLsizei count, GLdouble
      v]
  ProgramParameters4fvNV: [void, GLenum target, GLuint index, GLsizei count, GLfloat
      v]
  RequestResidentProgramsNV: [void, GLsizei n, GLuint programs]
  TrackMatrixNV: [void, GLenum target, GLuint address, GLenum matrix, GLenum transform]
  VertexAttrib1dNV: [void, GLuint index, GLdouble x]
  VertexAttrib1dvNV: [void, GLuint index, GLdouble v]
  VertexAttrib1fNV: [void, GLuint index, GLfloat x]
  VertexAttrib1fvNV: [void, GLuint index, GLfloat v]
  VertexAttrib1sNV: [void, GLuint index, GLshort x]
  VertexAttrib1svNV: [void, GLuint index, GLshort v]
  VertexAttrib2dNV: [void, GLuint index, GLdouble x, GLdouble y]
  VertexAttrib2dvNV: [void, GLuint index, GLdouble v]
  VertexAttrib2fNV: [void, GLuint index, GLfloat x, GLfloat y]
  VertexAttrib2fvNV: [void, GLuint index, GLfloat v]
  VertexAttrib2sNV: [void, GLuint index, GLshort x, GLshort y]
  VertexAttrib2svNV: [void, GLuint index, GLshort v]
  VertexAttrib3dNV: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z]
  VertexAttrib3dvNV: [void, GLuint index, GLdouble v]
  VertexAttrib3fNV: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z]
  VertexAttrib3fvNV: [void, GLuint index, GLfloat v]
  VertexAttrib3sNV: [void, GLuint index, GLshort x, GLshort y, GLshort z]
  VertexAttrib3svNV: [void, GLuint index, GLshort v]
  VertexAttrib4dNV: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexAttrib4dvNV: [void, GLuint index, GLdouble v]
  VertexAttrib4fNV: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat
      w]
  VertexAttrib4fvNV: [void, GLuint index, GLfloat v]
  VertexAttrib4sNV: [void, GLuint index, GLshort x, GLshort y, GLshort z, GLshort
      w]
  VertexAttrib4svNV: [void, GLuint index, GLshort v]
  VertexAttrib4ubNV: [void, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte
      w]
  VertexAttrib4ubvNV: [void, GLuint index, GLubyte v]
  VertexAttribPointerNV: [void, GLuint index, GLint fsize, GLenum type, GLsizei stride,
    GLvoid pointer]
  VertexAttribs1dvNV: [void, GLuint index, GLsizei count, GLdouble v]
  VertexAttribs1fvNV: [void, GLuint index, GLsizei count, GLfloat v]
  VertexAttribs1svNV: [void, GLuint index, GLsizei count, GLshort v]
  VertexAttribs2dvNV: [void, GLuint index, GLsizei count, GLdouble v]
  VertexAttribs2fvNV: [void, GLuint index, GLsizei count, GLfloat v]
  VertexAttribs2svNV: [void, GLuint index, GLsizei count, GLshort v]
  VertexAttribs3dvNV: [void, GLuint index, GLsizei count, GLdouble v]
  VertexAttribs3fvNV: [void, GLuint index, GLsizei count, GLfloat v]
  VertexAttribs3svNV: [void, GLuint index, GLsizei count, GLshort v]
  VertexAttribs4dvNV: [void, GLuint index, GLsizei count, GLdouble v]
  VertexAttribs4fvNV: [void, GLuint index, GLsizei count, GLfloat v]
  VertexAttribs4svNV: [void, GLuint index, GLsizei count, GLshort v]
  VertexAttribs4ubvNV: [void, GLuint index, GLsizei count, GLubyte v]
NV_vertex_program4:
  GetVertexAttribIivEXT: [void, GLuint index, GLenum pname, GLint params]
  GetVertexAttribIuivEXT: [void, GLuint index, GLenum pname, GLuint params]
  VertexAttribI1iEXT: [void, GLuint index, GLint x]
  VertexAttribI1ivEXT: [void, GLuint index, GLint v]
  VertexAttribI1uiEXT: [void, GLuint index, GLuint x]
  VertexAttribI1uivEXT: [void, GLuint index, GLuint v]
  VertexAttribI2iEXT: [void, GLuint index, GLint x, GLint y]
  VertexAttribI2ivEXT: [void, GLuint index, GLint v]
  VertexAttribI2uiEXT: [void, GLuint index, GLuint x, GLuint y]
  VertexAttribI2uivEXT: [void, GLuint index, GLuint v]
  VertexAttribI3iEXT: [void, GLuint index, GLint x, GLint y, GLint z]
  VertexAttribI3ivEXT: [void, GLuint index, GLint v]
  VertexAttribI3uiEXT: [void, GLuint index, GLuint x, GLuint y, GLuint z]
  VertexAttribI3uivEXT: [void, GLuint index, GLuint v]
  VertexAttribI4bvEXT: [void, GLuint index, GLbyte v]
  VertexAttribI4iEXT: [void, GLuint index, GLint x, GLint y, GLint z, GLint w]
  VertexAttribI4ivEXT: [void, GLuint index, GLint v]
  VertexAttribI4svEXT: [void, GLuint index, GLshort v]
  VertexAttribI4ubvEXT: [void, GLuint index, GLubyte v]
  VertexAttribI4uiEXT: [void, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w]
  VertexAttribI4uivEXT: [void, GLuint index, GLuint v]
  VertexAttribI4usvEXT: [void, GLuint index, GLushort v]
  VertexAttribIPointerEXT: [void, GLuint index, GLint size, GLenum type, GLsizei stride,
    GLvoid pointer]
NV_video_capture:
  BeginVideoCaptureNV: [void, GLuint video_capture_slot]
  BindVideoCaptureStreamBufferNV: [void, GLuint video_capture_slot, GLuint stream,
    GLenum frame_region, GLintptrARB offset]
  BindVideoCaptureStreamTextureNV: [void, GLuint video_capture_slot, GLuint stream,
    GLenum frame_region, GLenum target, GLuint texture]
  EndVideoCaptureNV: [void, GLuint video_capture_slot]
  GetVideoCaptureStreamdvNV: [void, GLuint video_capture_slot, GLuint stream, GLenum
      pname, GLdouble params]
  GetVideoCaptureStreamfvNV: [void, GLuint video_capture_slot, GLuint stream, GLenum
      pname, GLfloat params]
  GetVideoCaptureStreamivNV: [void, GLuint video_capture_slot, GLuint stream, GLenum
      pname, GLint params]
  GetVideoCaptureivNV: [void, GLuint video_capture_slot, GLenum pname, GLint params]
  VideoCaptureNV: [GLenum, GLuint video_capture_slot, GLuint sequence_num, GLuint64EXT
      capture_time]
  VideoCaptureStreamParameterdvNV: [void, GLuint video_capture_slot, GLuint stream,
    GLenum pname, GLdouble params]
  VideoCaptureStreamParameterfvNV: [void, GLuint video_capture_slot, GLuint stream,
    GLenum pname, GLfloat params]
  VideoCaptureStreamParameterivNV: [void, GLuint video_capture_slot, GLuint stream,
    GLenum pname, GLint params]
OES_byte_coordinates:
  MultiTexCoord1bOES: [void, GLenum texture, GLbyte s]
  MultiTexCoord1bvOES: [void, GLenum texture, GLbyte coords]
  MultiTexCoord2bOES: [void, GLenum texture, GLbyte s, GLbyte t]
  MultiTexCoord2bvOES: [void, GLenum texture, GLbyte coords]
  MultiTexCoord3bOES: [void, GLenum texture, GLbyte s, GLbyte t, GLbyte r]
  MultiTexCoord3bvOES: [void, GLenum texture, GLbyte coords]
  MultiTexCoord4bOES: [void, GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte
      q]
  MultiTexCoord4bvOES: [void, GLenum texture, GLbyte coords]
  TexCoord1bOES: [void, GLbyte s]
  TexCoord1bvOES: [void, GLbyte coords]
  TexCoord2bOES: [void, GLbyte s, GLbyte t]
  TexCoord2bvOES: [void, GLbyte coords]
  TexCoord3bOES: [void, GLbyte s, GLbyte t, GLbyte r]
  TexCoord3bvOES: [void, GLbyte coords]
  TexCoord4bOES: [void, GLbyte s, GLbyte t, GLbyte r, GLbyte q]
  TexCoord4bvOES: [void, GLbyte coords]
  Vertex2bOES: [void, GLbyte x]
  Vertex2bvOES: [void, GLbyte coords]
  Vertex3bOES: [void, GLbyte x, GLbyte y]
  Vertex3bvOES: [void, GLbyte coords]
  Vertex4bOES: [void, GLbyte x, GLbyte y, GLbyte z]
  Vertex4bvOES: [void, GLbyte coords]
OES_fixed_point:
  AccumxOES: [void, GLenum op, GLfixed value]
  AlphaFuncxOES: [void, GLenum func, GLfixed ref]
  BitmapxOES: [void, GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig,
    GLfixed xmove, GLfixed ymove, GLubyte bitmap]
  BlendColorxOES: [void, GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha]
  ClearAccumxOES: [void, GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha]
  ClearColorxOES: [void, GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha]
  ClearDepthxOES: [void, GLfixed depth]
  ClipPlanexOES: [void, GLenum plane, GLfixed equation]
  Color3xOES: [void, GLfixed red, GLfixed green, GLfixed blue]
  Color3xvOES: [void, GLfixed components]
  Color4xOES: [void, GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha]
  Color4xvOES: [void, GLfixed components]
  ConvolutionParameterxOES: [void, GLenum target, GLenum pname, GLfixed param]
  ConvolutionParameterxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  DepthRangexOES: [void, GLfixed n, GLfixed f]
  EvalCoord1xOES: [void, GLfixed u]
  EvalCoord1xvOES: [void, GLfixed coords]
  EvalCoord2xOES: [void, GLfixed u, GLfixed v]
  EvalCoord2xvOES: [void, GLfixed coords]
  FeedbackBufferxOES: [void, GLsizei n, GLenum type, GLfixed buffer]
  FogxOES: [void, GLenum pname, GLfixed param]
  FogxvOES: [void, GLenum pname, GLfixed param]
  FrustumxOES: [void, GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed
      f]
  GetClipPlanexOES: [void, GLenum plane, GLfixed equation]
  GetConvolutionParameterxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  GetFixedvOES: [void, GLenum pname, GLfixed params]
  GetHistogramParameterxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  GetLightxOES: [void, GLenum light, GLenum pname, GLfixed params]
  GetMapxvOES: [void, GLenum target, GLenum query, GLfixed v]
  GetMaterialxOES: [void, GLenum face, GLenum pname, GLfixed param]
  GetPixelMapxv: [void, GLenum map, GLint size, GLfixed values]
  GetTexEnvxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  GetTexGenxvOES: [void, GLenum coord, GLenum pname, GLfixed params]
  GetTexLevelParameterxvOES: [void, GLenum target, GLint level, GLenum pname, GLfixed
      params]
  GetTexParameterxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  IndexxOES: [void, GLfixed component]
  IndexxvOES: [void, GLfixed component]
  LightModelxOES: [void, GLenum pname, GLfixed param]
  LightModelxvOES: [void, GLenum pname, GLfixed param]
  LightxOES: [void, GLenum light, GLenum pname, GLfixed param]
  LightxvOES: [void, GLenum light, GLenum pname, GLfixed params]
  LineWidthxOES: [void, GLfixed width]
  LoadMatrixxOES: [void, GLfixed m]
  LoadTransposeMatrixxOES: [void, GLfixed m]
  Map1xOES: [void, GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order,
    GLfixed points]
  Map2xOES: [void, GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder,
    GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points]
  MapGrid1xOES: [void, GLint n, GLfixed u1, GLfixed u2]
  MapGrid2xOES: [void, GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2]
  MaterialxOES: [void, GLenum face, GLenum pname, GLfixed param]
  MaterialxvOES: [void, GLenum face, GLenum pname, GLfixed param]
  MultMatrixxOES: [void, GLfixed m]
  MultTransposeMatrixxOES: [void, GLfixed m]
  MultiTexCoord1xOES: [void, GLenum texture, GLfixed s]
  MultiTexCoord1xvOES: [void, GLenum texture, GLfixed coords]
  MultiTexCoord2xOES: [void, GLenum texture, GLfixed s, GLfixed t]
  MultiTexCoord2xvOES: [void, GLenum texture, GLfixed coords]
  MultiTexCoord3xOES: [void, GLenum texture, GLfixed s, GLfixed t, GLfixed r]
  MultiTexCoord3xvOES: [void, GLenum texture, GLfixed coords]
  MultiTexCoord4xOES: [void, GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed
      q]
  MultiTexCoord4xvOES: [void, GLenum texture, GLfixed coords]
  Normal3xOES: [void, GLfixed nx, GLfixed ny, GLfixed nz]
  Normal3xvOES: [void, GLfixed coords]
  OrthoxOES: [void, GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed
      f]
  PassThroughxOES: [void, GLfixed token]
  PixelMapx: [void, GLenum map, GLint size, GLfixed values]
  PixelStorex: [void, GLenum pname, GLfixed param]
  PixelTransferxOES: [void, GLenum pname, GLfixed param]
  PixelZoomxOES: [void, GLfixed xfactor, GLfixed yfactor]
  PointParameterxvOES: [void, GLenum pname, GLfixed params]
  PointSizexOES: [void, GLfixed size]
  PolygonOffsetxOES: [void, GLfixed factor, GLfixed units]
  PrioritizeTexturesxOES: [void, GLsizei n, GLuint textures, GLfixed priorities]
  RasterPos2xOES: [void, GLfixed x, GLfixed y]
  RasterPos2xvOES: [void, GLfixed coords]
  RasterPos3xOES: [void, GLfixed x, GLfixed y, GLfixed z]
  RasterPos3xvOES: [void, GLfixed coords]
  RasterPos4xOES: [void, GLfixed x, GLfixed y, GLfixed z, GLfixed w]
  RasterPos4xvOES: [void, GLfixed coords]
  RectxOES: [void, GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2]
  RectxvOES: [void, GLfixed v1, GLfixed v2]
  RotatexOES: [void, GLfixed angle, GLfixed x, GLfixed y, GLfixed z]
  SampleCoverageOES: [void, GLfixed value, GLboolean invert]
  ScalexOES: [void, GLfixed x, GLfixed y, GLfixed z]
  TexCoord1xOES: [void, GLfixed s]
  TexCoord1xvOES: [void, GLfixed coords]
  TexCoord2xOES: [void, GLfixed s, GLfixed t]
  TexCoord2xvOES: [void, GLfixed coords]
  TexCoord3xOES: [void, GLfixed s, GLfixed t, GLfixed r]
  TexCoord3xvOES: [void, GLfixed coords]
  TexCoord4xOES: [void, GLfixed s, GLfixed t, GLfixed r, GLfixed q]
  TexCoord4xvOES: [void, GLfixed coords]
  TexEnvxOES: [void, GLenum target, GLenum pname, GLfixed param]
  TexEnvxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  TexGenxOES: [void, GLenum coord, GLenum pname, GLfixed param]
  TexGenxvOES: [void, GLenum coord, GLenum pname, GLfixed params]
  TexParameterxOES: [void, GLenum target, GLenum pname, GLfixed param]
  TexParameterxvOES: [void, GLenum target, GLenum pname, GLfixed params]
  TranslatexOES: [void, GLfixed x, GLfixed y, GLfixed z]
  Vertex2xOES: [void, GLfixed x]
  Vertex2xvOES: [void, GLfixed coords]
  Vertex3xOES: [void, GLfixed x, GLfixed y]
  Vertex3xvOES: [void, GLfixed coords]
  Vertex4xOES: [void, GLfixed x, GLfixed y, GLfixed z]
  Vertex4xvOES: [void, GLfixed coords]
OES_query_matrix:
  QueryMatrixxOES: [GLbitfield, GLfixed mantissa, GLint exponent]
OES_single_precision:
  ClearDepthfOES: [void, GLclampf depth]
  ClipPlanefOES: [void, GLenum plane, GLfloat equation]
  DepthRangefOES: [void, GLclampf n, GLclampf f]
  FrustumfOES: [void, GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat
      f]
  GetClipPlanefOES: [void, GLenum plane, GLfloat equation]
  OrthofOES: [void, GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat
      f]
PGI_misc_hints:
  HintPGI: [void, GLenum target, GLint mode]
SGIS_detail_texture:
  DetailTexFuncSGIS: [void, GLenum target, GLsizei n, GLfloat points]
  GetDetailTexFuncSGIS: [void, GLenum target, GLfloat points]
SGIS_fog_function:
  FogFuncSGIS: [void, GLsizei n, GLfloat points]
  GetFogFuncSGIS: [void, GLfloat points]
SGIS_multisample:
  SampleMaskSGIS: [void, GLclampf value, GLboolean invert]
  SamplePatternSGIS: [void, GLenum pattern]
SGIS_pixel_texture:
  GetPixelTexGenParameterfvSGIS: [void, GLenum pname, GLfloat params]
  GetPixelTexGenParameterivSGIS: [void, GLenum pname, GLint params]
  PixelTexGenParameterfSGIS: [void, GLenum pname, GLfloat param]
  PixelTexGenParameterfvSGIS: [void, GLenum pname, GLfloat params]
  PixelTexGenParameteriSGIS: [void, GLenum pname, GLint param]
  PixelTexGenParameterivSGIS: [void, GLenum pname, GLint params]
SGIS_point_parameters:
  PointParameterfSGIS: [void, GLenum pname, GLfloat param]
  PointParameterfvSGIS: [void, GLenum pname, GLfloat params]
SGIS_sharpen_texture:
  GetSharpenTexFuncSGIS: [void, GLenum target, GLfloat points]
  SharpenTexFuncSGIS: [void, GLenum target, GLsizei n, GLfloat points]
SGIS_texture4D:
  TexImage4DSGIS: [void, GLenum target, GLint level, GLenum internalformat, GLsizei
      width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format,
    GLenum type, GLvoid pixels]
  TexSubImage4DSGIS: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei
      size4d, GLenum format, GLenum type, GLvoid pixels]
SGIS_texture_color_mask:
  TextureColorMaskSGIS: [void, GLboolean red, GLboolean green, GLboolean blue, GLboolean
      alpha]
SGIS_texture_filter4:
  GetTexFilterFuncSGIS: [void, GLenum target, GLenum filter, GLfloat weights]
  TexFilterFuncSGIS: [void, GLenum target, GLenum filter, GLsizei n, GLfloat weights]
SGIX_async:
  AsyncMarkerSGIX: [void, GLuint marker]
  DeleteAsyncMarkersSGIX: [void, GLuint marker, GLsizei range]
  FinishAsyncSGIX: [Int32, GLuint markerp]
  GenAsyncMarkersSGIX: [UInt32, GLsizei range]
  IsAsyncMarkerSGIX: [Boolean, GLuint marker]
  PollAsyncSGIX: [Int32, GLuint markerp]
SGIX_flush_raster:
  FlushRasterSGIX: [void]
SGIX_fragment_lighting:
  FragmentColorMaterialSGIX: [void, GLenum face, GLenum mode]
  FragmentLightModelfSGIX: [void, GLenum pname, GLfloat param]
  FragmentLightModelfvSGIX: [void, GLenum pname, GLfloat params]
  FragmentLightModeliSGIX: [void, GLenum pname, GLint param]
  FragmentLightModelivSGIX: [void, GLenum pname, GLint params]
  FragmentLightfSGIX: [void, GLenum light, GLenum pname, GLfloat param]
  FragmentLightfvSGIX: [void, GLenum light, GLenum pname, GLfloat params]
  FragmentLightiSGIX: [void, GLenum light, GLenum pname, GLint param]
  FragmentLightivSGIX: [void, GLenum light, GLenum pname, GLint params]
  FragmentMaterialfSGIX: [void, GLenum face, GLenum pname, GLfloat param]
  FragmentMaterialfvSGIX: [void, GLenum face, GLenum pname, GLfloat params]
  FragmentMaterialiSGIX: [void, GLenum face, GLenum pname, GLint param]
  FragmentMaterialivSGIX: [void, GLenum face, GLenum pname, GLint params]
  GetFragmentLightfvSGIX: [void, GLenum light, GLenum pname, GLfloat params]
  GetFragmentLightivSGIX: [void, GLenum light, GLenum pname, GLint params]
  GetFragmentMaterialfvSGIX: [void, GLenum face, GLenum pname, GLfloat params]
  GetFragmentMaterialivSGIX: [void, GLenum face, GLenum pname, GLint params]
  LightEnviSGIX: [void, GLenum pname, GLint param]
SGIX_framezoom:
  FrameZoomSGIX: [void, GLint factor]
SGIX_igloo_interface:
  IglooInterfaceSGIX: [void, GLenum pname, GLvoid params]
SGIX_instruments:
  GetInstrumentsSGIX: [Int32]
  InstrumentsBufferSGIX: [void, GLsizei size, GLint buffer]
  PollInstrumentsSGIX: [Int32, GLint marker_p]
  ReadInstrumentsSGIX: [void, GLint marker]
  StartInstrumentsSGIX: [void]
  StopInstrumentsSGIX: [void, GLint marker]
SGIX_list_priority:
  GetListParameterfvSGIX: [void, GLuint list, GLenum pname, GLfloat params]
  GetListParameterivSGIX: [void, GLuint list, GLenum pname, GLint params]
  ListParameterfSGIX: [void, GLuint list, GLenum pname, GLfloat param]
  ListParameterfvSGIX: [void, GLuint list, GLenum pname, GLfloat params]
  ListParameteriSGIX: [void, GLuint list, GLenum pname, GLint param]
  ListParameterivSGIX: [void, GLuint list, GLenum pname, GLint params]
SGIX_pixel_texture:
  PixelTexGenSGIX: [void, GLenum mode]
SGIX_polynomial_ffd:
  DeformSGIX: [void, GLbitfield mask]
  DeformationMap3dSGIX: [void, GLenum target, GLdouble u1, GLdouble u2, GLint ustride,
    GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble
      w1, GLdouble w2, GLint wstride, GLint worder, GLdouble points]
  DeformationMap3fSGIX: [void, GLenum target, GLfloat u1, GLfloat u2, GLint ustride,
    GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1,
    GLfloat w2, GLint wstride, GLint worder, GLfloat points]
  LoadIdentityDeformationMapSGIX: [void, GLbitfield mask]
SGIX_reference_plane:
  ReferencePlaneSGIX: [void, GLdouble equation]
SGIX_sprite:
  SpriteParameterfSGIX: [void, GLenum pname, GLfloat param]
  SpriteParameterfvSGIX: [void, GLenum pname, GLfloat params]
  SpriteParameteriSGIX: [void, GLenum pname, GLint param]
  SpriteParameterivSGIX: [void, GLenum pname, GLint params]
SGIX_tag_sample_buffer:
  TagSampleBufferSGIX: [void]
SGI_color_table:
  ColorTableParameterfvSGI: [void, GLenum target, GLenum pname, GLfloat params]
  ColorTableParameterivSGI: [void, GLenum target, GLenum pname, GLint params]
  ColorTableSGI: [void, GLenum target, GLenum internalformat, GLsizei width, GLenum
      format, GLenum type, GLvoid table]
  CopyColorTableSGI: [void, GLenum target, GLenum internalformat, GLint x, GLint y,
    GLsizei width]
  GetColorTableParameterfvSGI: [void, GLenum target, GLenum pname, GLfloat params]
  GetColorTableParameterivSGI: [void, GLenum target, GLenum pname, GLint params]
  GetColorTableSGI: [void, GLenum target, GLenum format, GLenum type, GLvoid table]
SUNX_constant_data:
  FinishTextureSUNX: [void]
SUN_global_alpha:
  GlobalAlphaFactorbSUN: [void, GLbyte factor]
  GlobalAlphaFactordSUN: [void, GLdouble factor]
  GlobalAlphaFactorfSUN: [void, GLfloat factor]
  GlobalAlphaFactoriSUN: [void, GLint factor]
  GlobalAlphaFactorsSUN: [void, GLshort factor]
  GlobalAlphaFactorubSUN: [void, GLubyte factor]
  GlobalAlphaFactoruiSUN: [void, GLuint factor]
  GlobalAlphaFactorusSUN: [void, GLushort factor]
SUN_mesh_array:
  DrawMeshArraysSUN: [void, GLenum mode, GLint first, GLsizei count, GLsizei width]
SUN_triangle_list:
  ReplacementCodePointerSUN: [void, GLenum type, GLsizei stride, GLvoid *pointer]
  ReplacementCodeubSUN: [void, GLubyte code]
  ReplacementCodeubvSUN: [void, GLubyte code]
  ReplacementCodeuiSUN: [void, GLuint code]
  ReplacementCodeuivSUN: [void, GLuint code]
  ReplacementCodeusSUN: [void, GLushort code]
  ReplacementCodeusvSUN: [void, GLushort code]
SUN_vertex:
  Color3fVertex3fSUN: [void, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y,
    GLfloat z]
  Color3fVertex3fvSUN: [void, GLfloat c, GLfloat v]
  Color4fNormal3fVertex3fSUN: [void, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat
      nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z]
  Color4fNormal3fVertex3fvSUN: [void, GLfloat c, GLfloat n, GLfloat v]
  Color4ubVertex2fSUN: [void, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat
      x, GLfloat y]
  Color4ubVertex2fvSUN: [void, GLubyte c, GLfloat v]
  Color4ubVertex3fSUN: [void, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat
      x, GLfloat y, GLfloat z]
  Color4ubVertex3fvSUN: [void, GLubyte c, GLfloat v]
  Normal3fVertex3fSUN: [void, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat
      y, GLfloat z]
  Normal3fVertex3fvSUN: [void, GLfloat n, GLfloat v]
  ReplacementCodeuiColor3fVertex3fSUN: [void, GLuint rc, GLfloat r, GLfloat g, GLfloat
      b, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiColor3fVertex3fvSUN: [void, GLuint rc, GLfloat c, GLfloat v]
  ReplacementCodeuiColor4fNormal3fVertex3fSUN: [void, GLuint rc, GLfloat r, GLfloat
      g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat
      y, GLfloat z]
  ReplacementCodeuiColor4fNormal3fVertex3fvSUN: [void, GLuint rc, GLfloat c, GLfloat
      n, GLfloat v]
  ReplacementCodeuiColor4ubVertex3fSUN: [void, GLuint rc, GLubyte r, GLubyte g, GLubyte
      b, GLubyte a, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiColor4ubVertex3fvSUN: [void, GLuint rc, GLubyte c, GLfloat v]
  ReplacementCodeuiNormal3fVertex3fSUN: [void, GLuint rc, GLfloat nx, GLfloat ny,
    GLfloat nz, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiNormal3fVertex3fvSUN: [void, GLuint rc, GLfloat n, GLfloat v]
  ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: [void, GLuint rc, GLfloat
      s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat
      ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: [void, GLuint rc, GLfloat
      tc, GLfloat c, GLfloat n, GLfloat v]
  ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: [void, GLuint rc, GLfloat s, GLfloat
      t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: [void, GLuint rc, GLfloat tc, GLfloat
      n, GLfloat v]
  ReplacementCodeuiTexCoord2fVertex3fSUN: [void, GLuint rc, GLfloat s, GLfloat t,
    GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiTexCoord2fVertex3fvSUN: [void, GLuint rc, GLfloat tc, GLfloat v]
  ReplacementCodeuiVertex3fSUN: [void, GLuint rc, GLfloat x, GLfloat y, GLfloat z]
  ReplacementCodeuiVertex3fvSUN: [void, GLuint rc, GLfloat v]
  TexCoord2fColor3fVertex3fSUN: [void, GLfloat s, GLfloat t, GLfloat r, GLfloat g,
    GLfloat b, GLfloat x, GLfloat y, GLfloat z]
  TexCoord2fColor3fVertex3fvSUN: [void, GLfloat tc, GLfloat c, GLfloat v]
  TexCoord2fColor4fNormal3fVertex3fSUN: [void, GLfloat s, GLfloat t, GLfloat r, GLfloat
      g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat
      y, GLfloat z]
  TexCoord2fColor4fNormal3fVertex3fvSUN: [void, GLfloat tc, GLfloat c, GLfloat n,
    GLfloat v]
  TexCoord2fColor4ubVertex3fSUN: [void, GLfloat s, GLfloat t, GLubyte r, GLubyte g,
    GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z]
  TexCoord2fColor4ubVertex3fvSUN: [void, GLfloat tc, GLubyte c, GLfloat v]
  TexCoord2fNormal3fVertex3fSUN: [void, GLfloat s, GLfloat t, GLfloat nx, GLfloat
      ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z]
  TexCoord2fNormal3fVertex3fvSUN: [void, GLfloat tc, GLfloat n, GLfloat v]
  TexCoord2fVertex3fSUN: [void, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat
      z]
  TexCoord2fVertex3fvSUN: [void, GLfloat tc, GLfloat v]
  TexCoord4fColor4fNormal3fVertex4fSUN: [void, GLfloat s, GLfloat t, GLfloat p, GLfloat
      q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat
      nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  TexCoord4fColor4fNormal3fVertex4fvSUN: [void, GLfloat tc, GLfloat c, GLfloat n,
    GLfloat v]
  TexCoord4fVertex4fSUN: [void, GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat
      x, GLfloat y, GLfloat z, GLfloat w]
  TexCoord4fVertex4fvSUN: [void, GLfloat tc, GLfloat v]
VERSION_1_0:
  Accum: [void, GLenum op, GLfloat value]
  AlphaFunc: [void, GLenum func, GLfloat ref]
  Begin: [void, GLenum mode]
  Bitmap: [void, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat
      xmove, GLfloat ymove, GLubyte bitmap]
  BlendFunc: [void, GLenum sfactor, GLenum dfactor]
  CallList: [void, GLuint list]
  CallLists: [void, GLsizei n, GLenum type, GLvoid lists]
  Clear: [void, GLbitfield mask]
  ClearAccum: [void, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha]
  ClearColor: [void, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha]
  ClearDepth: [void, GLdouble depth]
  ClearIndex: [void, GLfloat c]
  ClearStencil: [void, GLint s]
  ClipPlane: [void, GLenum plane, GLdouble equation]
  Color3b: [void, GLbyte red, GLbyte green, GLbyte blue]
  Color3bv: [void, GLbyte v]
  Color3d: [void, GLdouble red, GLdouble green, GLdouble blue]
  Color3dv: [void, GLdouble v]
  Color3f: [void, GLfloat red, GLfloat green, GLfloat blue]
  Color3fv: [void, GLfloat v]
  Color3i: [void, GLint red, GLint green, GLint blue]
  Color3iv: [void, GLint v]
  Color3s: [void, GLshort red, GLshort green, GLshort blue]
  Color3sv: [void, GLshort v]
  Color3ub: [void, GLubyte red, GLubyte green, GLubyte blue]
  Color3ubv: [void, GLubyte v]
  Color3ui: [void, GLuint red, GLuint green, GLuint blue]
  Color3uiv: [void, GLuint v]
  Color3us: [void, GLushort red, GLushort green, GLushort blue]
  Color3usv: [void, GLushort v]
  Color4b: [void, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha]
  Color4bv: [void, GLbyte v]
  Color4d: [void, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha]
  Color4dv: [void, GLdouble v]
  Color4f: [void, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha]
  Color4fv: [void, GLfloat v]
  Color4i: [void, GLint red, GLint green, GLint blue, GLint alpha]
  Color4iv: [void, GLint v]
  Color4s: [void, GLshort red, GLshort green, GLshort blue, GLshort alpha]
  Color4sv: [void, GLshort v]
  Color4ub: [void, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha]
  Color4ubv: [void, GLubyte v]
  Color4ui: [void, GLuint red, GLuint green, GLuint blue, GLuint alpha]
  Color4uiv: [void, GLuint v]
  Color4us: [void, GLushort red, GLushort green, GLushort blue, GLushort alpha]
  Color4usv: [void, GLushort v]
  ColorMask: [void, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha]
  ColorMaterial: [void, GLenum face, GLenum mode]
  CopyPixels: [void, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type]
  CullFace: [void, GLenum mode]
  DeleteLists: [void, GLuint list, GLsizei range]
  DepthFunc: [void, GLenum func]
  DepthMask: [void, GLboolean flag]
  DepthRange: [void, GLdouble near, GLdouble far]
  Disable: [void, GLenum cap]
  DrawBuffer: [void, GLenum mode]
  DrawPixels: [void, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid
      pixels]
  EdgeFlag: [void, GLboolean flag]
  EdgeFlagv: [void, GLboolean flag]
  Enable: [void, GLenum cap]
  End: [void]
  EndList: [void]
  EvalCoord1d: [void, GLdouble u]
  EvalCoord1dv: [void, GLdouble u]
  EvalCoord1f: [void, GLfloat u]
  EvalCoord1fv: [void, GLfloat u]
  EvalCoord2d: [void, GLdouble u, GLdouble v]
  EvalCoord2dv: [void, GLdouble u]
  EvalCoord2f: [void, GLfloat u, GLfloat v]
  EvalCoord2fv: [void, GLfloat u]
  EvalMesh1: [void, GLenum mode, GLint i1, GLint i2]
  EvalMesh2: [void, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2]
  EvalPoint1: [void, GLint i]
  EvalPoint2: [void, GLint i, GLint j]
  FeedbackBuffer: [void, GLsizei size, GLenum type, GLfloat buffer]
  Finish: [void]
  Flush: [void]
  Fogf: [void, GLenum pname, GLfloat param]
  Fogfv: [void, GLenum pname, GLfloat params]
  Fogi: [void, GLenum pname, GLint param]
  Fogiv: [void, GLenum pname, GLint params]
  FrontFace: [void, GLenum mode]
  Frustum: [void, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble
      zNear, GLdouble zFar]
  GenLists: [List, GLsizei range]
  GetBooleanv: [void, GLenum pname, GLboolean params]
  GetClipPlane: [void, GLenum plane, GLdouble equation]
  GetDoublev: [void, GLenum pname, GLdouble params]
  GetError: [ErrorCode]
  GetFloatv: [void, GLenum pname, GLfloat params]
  GetIntegerv: [void, GLenum pname, GLint params]
  GetLightfv: [void, GLenum light, GLenum pname, GLfloat params]
  GetLightiv: [void, GLenum light, GLenum pname, GLint params]
  GetMapdv: [void, GLenum target, GLenum query, GLdouble v]
  GetMapfv: [void, GLenum target, GLenum query, GLfloat v]
  GetMapiv: [void, GLenum target, GLenum query, GLint v]
  GetMaterialfv: [void, GLenum face, GLenum pname, GLfloat params]
  GetMaterialiv: [void, GLenum face, GLenum pname, GLint params]
  GetPixelMapfv: [void, GLenum map, GLfloat values]
  GetPixelMapuiv: [void, GLenum map, GLuint values]
  GetPixelMapusv: [void, GLenum map, GLushort values]
  GetPolygonStipple: [void, GLubyte mask]
  GetString: [String, GLenum name]
  GetTexEnvfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetTexEnviv: [void, GLenum target, GLenum pname, GLint params]
  GetTexGendv: [void, GLenum coord, GLenum pname, GLdouble params]
  GetTexGenfv: [void, GLenum coord, GLenum pname, GLfloat params]
  GetTexGeniv: [void, GLenum coord, GLenum pname, GLint params]
  GetTexImage: [void, GLenum target, GLint level, GLenum format, GLenum type, GLvoid
      pixels]
  GetTexLevelParameterfv: [void, GLenum target, GLint level, GLenum pname, GLfloat
      params]
  GetTexLevelParameteriv: [void, GLenum target, GLint level, GLenum pname, GLint params]
  GetTexParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetTexParameteriv: [void, GLenum target, GLenum pname, GLint params]
  Hint: [void, GLenum target, GLenum mode]
  IndexMask: [void, GLuint mask]
  Indexd: [void, GLdouble c]
  Indexdv: [void, GLdouble c]
  Indexf: [void, GLfloat c]
  Indexfv: [void, GLfloat c]
  Indexi: [void, GLint c]
  Indexiv: [void, GLint c]
  Indexs: [void, GLshort c]
  Indexsv: [void, GLshort c]
  InitNames: [void]
  IsEnabled: [Boolean, GLenum cap]
  IsList: [Boolean, GLuint list]
  LightModelf: [void, GLenum pname, GLfloat param]
  LightModelfv: [void, GLenum pname, GLfloat params]
  LightModeli: [void, GLenum pname, GLint param]
  LightModeliv: [void, GLenum pname, GLint params]
  Lightf: [void, GLenum light, GLenum pname, GLfloat param]
  Lightfv: [void, GLenum light, GLenum pname, GLfloat params]
  Lighti: [void, GLenum light, GLenum pname, GLint param]
  Lightiv: [void, GLenum light, GLenum pname, GLint params]
  LineStipple: [void, GLint factor, GLushort pattern]
  LineWidth: [void, GLfloat width]
  ListBase: [void, GLuint base]
  LoadIdentity: [void]
  LoadMatrixd: [void, GLdouble m]
  LoadMatrixf: [void, GLfloat m]
  LoadName: [void, GLuint name]
  LogicOp: [void, GLenum opcode]
  Map1d: [void, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order,
    GLdouble points]
  Map1f: [void, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order,
    GLfloat points]
  Map2d: [void, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder,
    GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble points]
  Map2f: [void, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder,
    GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat points]
  MapGrid1d: [void, GLint un, GLdouble u1, GLdouble u2]
  MapGrid1f: [void, GLint un, GLfloat u1, GLfloat u2]
  MapGrid2d: [void, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble
      v2]
  MapGrid2f: [void, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat
      v2]
  Materialf: [void, GLenum face, GLenum pname, GLfloat param]
  Materialfv: [void, GLenum face, GLenum pname, GLfloat params]
  Materiali: [void, GLenum face, GLenum pname, GLint param]
  Materialiv: [void, GLenum face, GLenum pname, GLint params]
  MatrixMode: [void, GLenum mode]
  MultMatrixd: [void, GLdouble m]
  MultMatrixf: [void, GLfloat m]
  NewList: [void, GLuint list, GLenum mode]
  Normal3b: [void, GLbyte nx, GLbyte ny, GLbyte nz]
  Normal3bv: [void, GLbyte v]
  Normal3d: [void, GLdouble nx, GLdouble ny, GLdouble nz]
  Normal3dv: [void, GLdouble v]
  Normal3f: [void, GLfloat nx, GLfloat ny, GLfloat nz]
  Normal3fv: [void, GLfloat v]
  Normal3i: [void, GLint nx, GLint ny, GLint nz]
  Normal3iv: [void, GLint v]
  Normal3s: [void, GLshort nx, GLshort ny, GLshort nz]
  Normal3sv: [void, GLshort v]
  Ortho: [void, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble
      zNear, GLdouble zFar]
  PassThrough: [void, GLfloat token]
  PixelMapfv: [void, GLenum map, GLsizei mapsize, GLfloat values]
  PixelMapuiv: [void, GLenum map, GLsizei mapsize, GLuint values]
  PixelMapusv: [void, GLenum map, GLsizei mapsize, GLushort values]
  PixelStoref: [void, GLenum pname, GLfloat param]
  PixelStorei: [void, GLenum pname, GLint param]
  PixelTransferf: [void, GLenum pname, GLfloat param]
  PixelTransferi: [void, GLenum pname, GLint param]
  PixelZoom: [void, GLfloat xfactor, GLfloat yfactor]
  PointSize: [void, GLfloat size]
  PolygonMode: [void, GLenum face, GLenum mode]
  PolygonStipple: [void, GLubyte mask]
  PopAttrib: [void]
  PopMatrix: [void]
  PopName: [void]
  PushAttrib: [void, GLbitfield mask]
  PushMatrix: [void]
  PushName: [void, GLuint name]
  RasterPos2d: [void, GLdouble x, GLdouble y]
  RasterPos2dv: [void, GLdouble v]
  RasterPos2f: [void, GLfloat x, GLfloat y]
  RasterPos2fv: [void, GLfloat v]
  RasterPos2i: [void, GLint x, GLint y]
  RasterPos2iv: [void, GLint v]
  RasterPos2s: [void, GLshort x, GLshort y]
  RasterPos2sv: [void, GLshort v]
  RasterPos3d: [void, GLdouble x, GLdouble y, GLdouble z]
  RasterPos3dv: [void, GLdouble v]
  RasterPos3f: [void, GLfloat x, GLfloat y, GLfloat z]
  RasterPos3fv: [void, GLfloat v]
  RasterPos3i: [void, GLint x, GLint y, GLint z]
  RasterPos3iv: [void, GLint v]
  RasterPos3s: [void, GLshort x, GLshort y, GLshort z]
  RasterPos3sv: [void, GLshort v]
  RasterPos4d: [void, GLdouble x, GLdouble y, GLdouble z, GLdouble w]
  RasterPos4dv: [void, GLdouble v]
  RasterPos4f: [void, GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  RasterPos4fv: [void, GLfloat v]
  RasterPos4i: [void, GLint x, GLint y, GLint z, GLint w]
  RasterPos4iv: [void, GLint v]
  RasterPos4s: [void, GLshort x, GLshort y, GLshort z, GLshort w]
  RasterPos4sv: [void, GLshort v]
  ReadBuffer: [void, GLenum mode]
  ReadPixels: [void, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format,
    GLenum type, GLvoid pixels]
  Rectd: [void, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2]
  Rectdv: [void, GLdouble v1, GLdouble v2]
  Rectf: [void, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2]
  Rectfv: [void, GLfloat v1, GLfloat v2]
  Recti: [void, GLint x1, GLint y1, GLint x2, GLint y2]
  Rectiv: [void, GLint v1, GLint v2]
  Rects: [void, GLshort x1, GLshort y1, GLshort x2, GLshort y2]
  Rectsv: [void, GLshort v1, GLshort v2]
  RenderMode: [Int32, GLenum mode]
  Rotated: [void, GLdouble angle, GLdouble x, GLdouble y, GLdouble z]
  Rotatef: [void, GLfloat angle, GLfloat x, GLfloat y, GLfloat z]
  Scaled: [void, GLdouble x, GLdouble y, GLdouble z]
  Scalef: [void, GLfloat x, GLfloat y, GLfloat z]
  Scissor: [void, GLint x, GLint y, GLsizei width, GLsizei height]
  SelectBuffer: [void, GLsizei size, GLuint buffer]
  ShadeModel: [void, GLenum mode]
  StencilFunc: [void, GLenum func, GLint ref, GLuint mask]
  StencilMask: [void, GLuint mask]
  StencilOp: [void, GLenum fail, GLenum zfail, GLenum zpass]
  TexCoord1d: [void, GLdouble s]
  TexCoord1dv: [void, GLdouble v]
  TexCoord1f: [void, GLfloat s]
  TexCoord1fv: [void, GLfloat v]
  TexCoord1i: [void, GLint s]
  TexCoord1iv: [void, GLint v]
  TexCoord1s: [void, GLshort s]
  TexCoord1sv: [void, GLshort v]
  TexCoord2d: [void, GLdouble s, GLdouble t]
  TexCoord2dv: [void, GLdouble v]
  TexCoord2f: [void, GLfloat s, GLfloat t]
  TexCoord2fv: [void, GLfloat v]
  TexCoord2i: [void, GLint s, GLint t]
  TexCoord2iv: [void, GLint v]
  TexCoord2s: [void, GLshort s, GLshort t]
  TexCoord2sv: [void, GLshort v]
  TexCoord3d: [void, GLdouble s, GLdouble t, GLdouble r]
  TexCoord3dv: [void, GLdouble v]
  TexCoord3f: [void, GLfloat s, GLfloat t, GLfloat r]
  TexCoord3fv: [void, GLfloat v]
  TexCoord3i: [void, GLint s, GLint t, GLint r]
  TexCoord3iv: [void, GLint v]
  TexCoord3s: [void, GLshort s, GLshort t, GLshort r]
  TexCoord3sv: [void, GLshort v]
  TexCoord4d: [void, GLdouble s, GLdouble t, GLdouble r, GLdouble q]
  TexCoord4dv: [void, GLdouble v]
  TexCoord4f: [void, GLfloat s, GLfloat t, GLfloat r, GLfloat q]
  TexCoord4fv: [void, GLfloat v]
  TexCoord4i: [void, GLint s, GLint t, GLint r, GLint q]
  TexCoord4iv: [void, GLint v]
  TexCoord4s: [void, GLshort s, GLshort t, GLshort r, GLshort q]
  TexCoord4sv: [void, GLshort v]
  TexEnvf: [void, GLenum target, GLenum pname, GLfloat param]
  TexEnvfv: [void, GLenum target, GLenum pname, GLfloat params]
  TexEnvi: [void, GLenum target, GLenum pname, GLint param]
  TexEnviv: [void, GLenum target, GLenum pname, GLint params]
  TexGend: [void, GLenum coord, GLenum pname, GLdouble param]
  TexGendv: [void, GLenum coord, GLenum pname, GLdouble params]
  TexGenf: [void, GLenum coord, GLenum pname, GLfloat param]
  TexGenfv: [void, GLenum coord, GLenum pname, GLfloat params]
  TexGeni: [void, GLenum coord, GLenum pname, GLint param]
  TexGeniv: [void, GLenum coord, GLenum pname, GLint params]
  TexImage1D: [void, GLenum target, GLint level, GLint internalformat, GLsizei width,
    GLint border, GLenum format, GLenum type, GLvoid pixels]
  TexImage2D: [void, GLenum target, GLint level, GLint internalformat, GLsizei width,
    GLsizei height, GLint border, GLenum format, GLenum type, GLvoid pixels]
  TexParameterf: [void, GLenum target, GLenum pname, GLfloat param]
  TexParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  TexParameteri: [void, GLenum target, GLenum pname, GLint param]
  TexParameteriv: [void, GLenum target, GLenum pname, GLint params]
  Translated: [void, GLdouble x, GLdouble y, GLdouble z]
  Translatef: [void, GLfloat x, GLfloat y, GLfloat z]
  Vertex2d: [void, GLdouble x, GLdouble y]
  Vertex2dv: [void, GLdouble v]
  Vertex2f: [void, GLfloat x, GLfloat y]
  Vertex2fv: [void, GLfloat v]
  Vertex2i: [void, GLint x, GLint y]
  Vertex2iv: [void, GLint v]
  Vertex2s: [void, GLshort x, GLshort y]
  Vertex2sv: [void, GLshort v]
  Vertex3d: [void, GLdouble x, GLdouble y, GLdouble z]
  Vertex3dv: [void, GLdouble v]
  Vertex3f: [void, GLfloat x, GLfloat y, GLfloat z]
  Vertex3fv: [void, GLfloat v]
  Vertex3i: [void, GLint x, GLint y, GLint z]
  Vertex3iv: [void, GLint v]
  Vertex3s: [void, GLshort x, GLshort y, GLshort z]
  Vertex3sv: [void, GLshort v]
  Vertex4d: [void, GLdouble x, GLdouble y, GLdouble z, GLdouble w]
  Vertex4dv: [void, GLdouble v]
  Vertex4f: [void, GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  Vertex4fv: [void, GLfloat v]
  Vertex4i: [void, GLint x, GLint y, GLint z, GLint w]
  Vertex4iv: [void, GLint v]
  Vertex4s: [void, GLshort x, GLshort y, GLshort z, GLshort w]
  Vertex4sv: [void, GLshort v]
  Viewport: [void, GLint x, GLint y, GLsizei width, GLsizei height]
VERSION_1_1:
  AreTexturesResident: [Boolean, GLsizei n, GLuint textures, GLboolean residences]
  ArrayElement: [void, GLint i]
  BindTexture: [void, GLenum target, GLuint texture]
  ColorPointer: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  CopyTexImage1D: [void, GLenum target, GLint level, GLenum internalformat, GLint
      x, GLint y, GLsizei width, GLint border]
  CopyTexImage2D: [void, GLenum target, GLint level, GLenum internalformat, GLint
      x, GLint y, GLsizei width, GLsizei height, GLint border]
  CopyTexSubImage1D: [void, GLenum target, GLint level, GLint xoffset, GLint x, GLint
      y, GLsizei width]
  CopyTexSubImage2D: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint x, GLint y, GLsizei width, GLsizei height]
  DeleteTextures: [void, GLsizei n, GLuint textures]
  DisableClientState: [void, GLenum array]
  DrawArrays: [void, GLenum mode, GLint first, GLsizei count]
  DrawElements: [void, GLenum mode, GLsizei count, GLenum type, GLvoid indices]
  EdgeFlagPointer: [void, GLsizei stride, GLvoid pointer]
  EnableClientState: [void, GLenum array]
  GenTextures: [void, GLsizei n, GLuint textures]
  GetPointerv: [void, GLenum pname, GLvoid *params]
  IndexPointer: [void, GLenum type, GLsizei stride, GLvoid pointer]
  Indexub: [void, GLubyte c]
  Indexubv: [void, GLubyte c]
  InterleavedArrays: [void, GLenum format, GLsizei stride, GLvoid pointer]
  IsTexture: [Boolean, GLuint texture]
  NormalPointer: [void, GLenum type, GLsizei stride, GLvoid pointer]
  PolygonOffset: [void, GLfloat factor, GLfloat units]
  PopClientAttrib: [void]
  PrioritizeTextures: [void, GLsizei n, GLuint textures, GLfloat priorities]
  PushClientAttrib: [void, GLbitfield mask]
  TexCoordPointer: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  TexSubImage1D: [void, GLenum target, GLint level, GLint xoffset, GLsizei width,
    GLenum format, GLenum type, GLvoid pixels]
  TexSubImage2D: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid pixels]
  VertexPointer: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
VERSION_1_2:
  BlendColor: [void, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha]
  BlendEquation: [void, GLenum mode]
  ColorSubTable: [void, GLenum target, GLsizei start, GLsizei count, GLenum format,
    GLenum type, GLvoid data]
  ColorTable: [void, GLenum target, GLenum internalformat, GLsizei width, GLenum format,
    GLenum type, GLvoid table]
  ColorTableParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  ColorTableParameteriv: [void, GLenum target, GLenum pname, GLint params]
  ConvolutionFilter1D: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLenum format, GLenum type, GLvoid image]
  ConvolutionFilter2D: [void, GLenum target, GLenum internalformat, GLsizei width,
    GLsizei height, GLenum format, GLenum type, GLvoid image]
  ConvolutionParameterf: [void, GLenum target, GLenum pname, GLfloat params]
  ConvolutionParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  ConvolutionParameteri: [void, GLenum target, GLenum pname, GLint params]
  ConvolutionParameteriv: [void, GLenum target, GLenum pname, GLint params]
  CopyColorSubTable: [void, GLenum target, GLsizei start, GLint x, GLint y, GLsizei
      width]
  CopyColorTable: [void, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei
      width]
  CopyConvolutionFilter1D: [void, GLenum target, GLenum internalformat, GLint x, GLint
      y, GLsizei width]
  CopyConvolutionFilter2D: [void, GLenum target, GLenum internalformat, GLint x, GLint
      y, GLsizei width, GLsizei height]
  CopyTexSubImage3D: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height]
  DrawRangeElements: [void, GLenum mode, GLuint start, GLuint end, GLsizei count,
    GLenum type, GLvoid indices]
  GetColorTable: [void, GLenum target, GLenum format, GLenum type, GLvoid table]
  GetColorTableParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetColorTableParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetConvolutionFilter: [void, GLenum target, GLenum format, GLenum type, GLvoid image]
  GetConvolutionParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetConvolutionParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetHistogram: [void, GLenum target, GLboolean reset, GLenum format, GLenum type,
    GLvoid values]
  GetHistogramParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetHistogramParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetMinmax: [void, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid
      values]
  GetMinmaxParameterfv: [void, GLenum target, GLenum pname, GLfloat params]
  GetMinmaxParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetSeparableFilter: [void, GLenum target, GLenum format, GLenum type, GLvoid row,
    GLvoid column, GLvoid span]
  Histogram: [void, GLenum target, GLsizei width, GLenum internalformat, GLboolean
      sink]
  Minmax: [void, GLenum target, GLenum internalformat, GLboolean sink]
  ResetHistogram: [void, GLenum target]
  ResetMinmax: [void, GLenum target]
  SeparableFilter2D: [void, GLenum target, GLenum internalformat, GLsizei width, GLsizei
      height, GLenum format, GLenum type, GLvoid row, GLvoid column]
  TexImage3D: [void, GLenum target, GLint level, GLint internalformat, GLsizei width,
    GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid
      pixels]
  TexSubImage3D: [void, GLenum target, GLint level, GLint xoffset, GLint yoffset,
    GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum
      type, GLvoid pixels]
VERSION_1_3:
  ActiveTexture: [void, GLenum texture]
  ClientActiveTexture: [void, GLenum texture]
  CompressedTexImage1D: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLint border, GLsizei imageSize, GLvoid data]
  CompressedTexImage2D: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid data]
  CompressedTexImage3D: [void, GLenum target, GLint level, GLenum internalformat,
    GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize,
    GLvoid data]
  CompressedTexSubImage1D: [void, GLenum target, GLint level, GLint xoffset, GLsizei
      width, GLenum format, GLsizei imageSize, GLvoid data]
  CompressedTexSubImage2D: [void, GLenum target, GLint level, GLint xoffset, GLint
      yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid
      data]
  CompressedTexSubImage3D: [void, GLenum target, GLint level, GLint xoffset, GLint
      yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum
      format, GLsizei imageSize, GLvoid data]
  GetCompressedTexImage: [void, GLenum target, GLint level, GLvoid img]
  LoadTransposeMatrixd: [void, GLdouble m]
  LoadTransposeMatrixf: [void, GLfloat m]
  MultTransposeMatrixd: [void, GLdouble m]
  MultTransposeMatrixf: [void, GLfloat m]
  MultiTexCoord1d: [void, GLenum target, GLdouble s]
  MultiTexCoord1dv: [void, GLenum target, GLdouble v]
  MultiTexCoord1f: [void, GLenum target, GLfloat s]
  MultiTexCoord1fv: [void, GLenum target, GLfloat v]
  MultiTexCoord1i: [void, GLenum target, GLint s]
  MultiTexCoord1iv: [void, GLenum target, GLint v]
  MultiTexCoord1s: [void, GLenum target, GLshort s]
  MultiTexCoord1sv: [void, GLenum target, GLshort v]
  MultiTexCoord2d: [void, GLenum target, GLdouble s, GLdouble t]
  MultiTexCoord2dv: [void, GLenum target, GLdouble v]
  MultiTexCoord2f: [void, GLenum target, GLfloat s, GLfloat t]
  MultiTexCoord2fv: [void, GLenum target, GLfloat v]
  MultiTexCoord2i: [void, GLenum target, GLint s, GLint t]
  MultiTexCoord2iv: [void, GLenum target, GLint v]
  MultiTexCoord2s: [void, GLenum target, GLshort s, GLshort t]
  MultiTexCoord2sv: [void, GLenum target, GLshort v]
  MultiTexCoord3d: [void, GLenum target, GLdouble s, GLdouble t, GLdouble r]
  MultiTexCoord3dv: [void, GLenum target, GLdouble v]
  MultiTexCoord3f: [void, GLenum target, GLfloat s, GLfloat t, GLfloat r]
  MultiTexCoord3fv: [void, GLenum target, GLfloat v]
  MultiTexCoord3i: [void, GLenum target, GLint s, GLint t, GLint r]
  MultiTexCoord3iv: [void, GLenum target, GLint v]
  MultiTexCoord3s: [void, GLenum target, GLshort s, GLshort t, GLshort r]
  MultiTexCoord3sv: [void, GLenum target, GLshort v]
  MultiTexCoord4d: [void, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble
      q]
  MultiTexCoord4dv: [void, GLenum target, GLdouble v]
  MultiTexCoord4f: [void, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat
      q]
  MultiTexCoord4fv: [void, GLenum target, GLfloat v]
  MultiTexCoord4i: [void, GLenum target, GLint s, GLint t, GLint r, GLint q]
  MultiTexCoord4iv: [void, GLenum target, GLint v]
  MultiTexCoord4s: [void, GLenum target, GLshort s, GLshort t, GLshort r, GLshort
      q]
  MultiTexCoord4sv: [void, GLenum target, GLshort v]
  SampleCoverage: [void, GLfloat value, GLboolean invert]
VERSION_1_4:
  BlendFuncSeparate: [void, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha,
    GLenum dfactorAlpha]
  FogCoordPointer: [void, GLenum type, GLsizei stride, GLvoid pointer]
  FogCoordd: [void, GLdouble coord]
  FogCoorddv: [void, GLdouble coord]
  FogCoordf: [void, GLfloat coord]
  FogCoordfv: [void, GLfloat coord]
  MultiDrawArrays: [void, GLenum mode, GLint first, GLsizei count, GLsizei drawcount]
  MultiDrawElements: [void, GLenum mode, GLsizei count, GLenum type, GLvoid*const
      indices, GLsizei drawcount]
  PointParameterf: [void, GLenum pname, GLfloat param]
  PointParameterfv: [void, GLenum pname, GLfloat params]
  PointParameteri: [void, GLenum pname, GLint param]
  PointParameteriv: [void, GLenum pname, GLint params]
  SecondaryColor3b: [void, GLbyte red, GLbyte green, GLbyte blue]
  SecondaryColor3bv: [void, GLbyte v]
  SecondaryColor3d: [void, GLdouble red, GLdouble green, GLdouble blue]
  SecondaryColor3dv: [void, GLdouble v]
  SecondaryColor3f: [void, GLfloat red, GLfloat green, GLfloat blue]
  SecondaryColor3fv: [void, GLfloat v]
  SecondaryColor3i: [void, GLint red, GLint green, GLint blue]
  SecondaryColor3iv: [void, GLint v]
  SecondaryColor3s: [void, GLshort red, GLshort green, GLshort blue]
  SecondaryColor3sv: [void, GLshort v]
  SecondaryColor3ub: [void, GLubyte red, GLubyte green, GLubyte blue]
  SecondaryColor3ubv: [void, GLubyte v]
  SecondaryColor3ui: [void, GLuint red, GLuint green, GLuint blue]
  SecondaryColor3uiv: [void, GLuint v]
  SecondaryColor3us: [void, GLushort red, GLushort green, GLushort blue]
  SecondaryColor3usv: [void, GLushort v]
  SecondaryColorPointer: [void, GLint size, GLenum type, GLsizei stride, GLvoid pointer]
  WindowPos2d: [void, GLdouble x, GLdouble y]
  WindowPos2dv: [void, GLdouble v]
  WindowPos2f: [void, GLfloat x, GLfloat y]
  WindowPos2fv: [void, GLfloat v]
  WindowPos2i: [void, GLint x, GLint y]
  WindowPos2iv: [void, GLint v]
  WindowPos2s: [void, GLshort x, GLshort y]
  WindowPos2sv: [void, GLshort v]
  WindowPos3d: [void, GLdouble x, GLdouble y, GLdouble z]
  WindowPos3dv: [void, GLdouble v]
  WindowPos3f: [void, GLfloat x, GLfloat y, GLfloat z]
  WindowPos3fv: [void, GLfloat v]
  WindowPos3i: [void, GLint x, GLint y, GLint z]
  WindowPos3iv: [void, GLint v]
  WindowPos3s: [void, GLshort x, GLshort y, GLshort z]
  WindowPos3sv: [void, GLshort v]
VERSION_1_5:
  BeginQuery: [void, GLenum target, GLuint id]
  BindBuffer: [void, GLenum target, GLuint buffer]
  BufferData: [void, GLenum target, GLsizeiptr size, GLvoid data, GLenum usage]
  BufferSubData: [void, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid data]
  DeleteBuffers: [void, GLsizei n, GLuint buffers]
  DeleteQueries: [void, GLsizei n, GLuint ids]
  EndQuery: [void, GLenum target]
  GenBuffers: [void, GLsizei n, GLuint buffers]
  GenQueries: [void, GLsizei n, GLuint ids]
  GetBufferParameteriv: [void, GLenum target, GLenum pname, GLint params]
  GetBufferPointerv: [void, GLenum target, GLenum pname, GLvoid *params]
  GetBufferSubData: [void, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid
      data]
  GetQueryObjectiv: [void, GLuint id, GLenum pname, GLint params]
  GetQueryObjectuiv: [void, GLuint id, GLenum pname, GLuint params]
  GetQueryiv: [void, GLenum target, GLenum pname, GLint params]
  IsBuffer: [Boolean, GLuint buffer]
  IsQuery: [Boolean, GLuint id]
  MapBuffer: [VoidPointer, GLenum target, GLenum access]
  UnmapBuffer: [Boolean, GLenum target]
VERSION_2_0:
  AttachShader: [void, GLuint program, GLuint shader]
  BindAttribLocation: [void, GLuint program, GLuint index, GLchar name]
  BlendEquationSeparate: [void, GLenum modeRGB, GLenum modeAlpha]
  CompileShader: [void, GLuint shader]
  CreateProgram: [UInt32]
  CreateShader: [UInt32, GLenum type]
  DeleteProgram: [void, GLuint program]
  DeleteShader: [void, GLuint shader]
  DetachShader: [void, GLuint program, GLuint shader]
  DisableVertexAttribArray: [void, GLuint index]
  DrawBuffers: [void, GLsizei n, GLenum bufs]
  EnableVertexAttribArray: [void, GLuint index]
  GetActiveAttrib: [void, GLuint program, GLuint index, GLsizei bufSize, GLsizei length,
    GLint size, GLenum type, GLchar name]
  GetActiveUniform: [void, GLuint program, GLuint index, GLsizei bufSize, GLsizei
      length, GLint size, GLenum type, GLchar name]
  GetAttachedShaders: [void, GLuint program, GLsizei maxCount, GLsizei count, GLuint
      obj]
  GetAttribLocation: [Int32, GLuint program, GLchar name]
  GetProgramInfoLog: [void, GLuint program, GLsizei bufSize, GLsizei length, GLchar
      infoLog]
  GetProgramiv: [void, GLuint program, GLenum pname, GLint params]
  GetShaderInfoLog: [void, GLuint shader, GLsizei bufSize, GLsizei length, GLchar
      infoLog]
  GetShaderSource: [void, GLuint shader, GLsizei bufSize, GLsizei length, GLchar source]
  GetShaderiv: [void, GLuint shader, GLenum pname, GLint params]
  GetUniformLocation: [Int32, GLuint program, GLchar name]
  GetUniformfv: [void, GLuint program, GLint location, GLfloat params]
  GetUniformiv: [void, GLuint program, GLint location, GLint params]
  GetVertexAttribPointerv: [void, GLuint index, GLenum pname, GLvoid *pointer]
  GetVertexAttribdv: [void, GLuint index, GLenum pname, GLdouble params]
  GetVertexAttribfv: [void, GLuint index, GLenum pname, GLfloat params]
  GetVertexAttribiv: [void, GLuint index, GLenum pname, GLint params]
  IsProgram: [Boolean, GLuint program]
  IsShader: [Boolean, GLuint shader]
  LinkProgram: [void, GLuint program]
  ShaderSource: [void, GLuint shader, GLsizei count, GLchar*const string, GLint length]
  StencilFuncSeparate: [void, GLenum face, GLenum func, GLint ref, GLuint mask]
  StencilMaskSeparate: [void, GLenum face, GLuint mask]
  StencilOpSeparate: [void, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass]
  Uniform1f: [void, GLint location, GLfloat v0]
  Uniform1fv: [void, GLint location, GLsizei count, GLfloat value]
  Uniform1i: [void, GLint location, GLint v0]
  Uniform1iv: [void, GLint location, GLsizei count, GLint value]
  Uniform2f: [void, GLint location, GLfloat v0, GLfloat v1]
  Uniform2fv: [void, GLint location, GLsizei count, GLfloat value]
  Uniform2i: [void, GLint location, GLint v0, GLint v1]
  Uniform2iv: [void, GLint location, GLsizei count, GLint value]
  Uniform3f: [void, GLint location, GLfloat v0, GLfloat v1, GLfloat v2]
  Uniform3fv: [void, GLint location, GLsizei count, GLfloat value]
  Uniform3i: [void, GLint location, GLint v0, GLint v1, GLint v2]
  Uniform3iv: [void, GLint location, GLsizei count, GLint value]
  Uniform4f: [void, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3]
  Uniform4fv: [void, GLint location, GLsizei count, GLfloat value]
  Uniform4i: [void, GLint location, GLint v0, GLint v1, GLint v2, GLint v3]
  Uniform4iv: [void, GLint location, GLsizei count, GLint value]
  UniformMatrix2fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix3fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix4fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UseProgram: [void, GLuint program]
  ValidateProgram: [void, GLuint program]
  VertexAttrib1d: [void, GLuint index, GLdouble x]
  VertexAttrib1dv: [void, GLuint index, GLdouble v]
  VertexAttrib1f: [void, GLuint index, GLfloat x]
  VertexAttrib1fv: [void, GLuint index, GLfloat v]
  VertexAttrib1s: [void, GLuint index, GLshort x]
  VertexAttrib1sv: [void, GLuint index, GLshort v]
  VertexAttrib2d: [void, GLuint index, GLdouble x, GLdouble y]
  VertexAttrib2dv: [void, GLuint index, GLdouble v]
  VertexAttrib2f: [void, GLuint index, GLfloat x, GLfloat y]
  VertexAttrib2fv: [void, GLuint index, GLfloat v]
  VertexAttrib2s: [void, GLuint index, GLshort x, GLshort y]
  VertexAttrib2sv: [void, GLuint index, GLshort v]
  VertexAttrib3d: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z]
  VertexAttrib3dv: [void, GLuint index, GLdouble v]
  VertexAttrib3f: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z]
  VertexAttrib3fv: [void, GLuint index, GLfloat v]
  VertexAttrib3s: [void, GLuint index, GLshort x, GLshort y, GLshort z]
  VertexAttrib3sv: [void, GLuint index, GLshort v]
  VertexAttrib4Nbv: [void, GLuint index, GLbyte v]
  VertexAttrib4Niv: [void, GLuint index, GLint v]
  VertexAttrib4Nsv: [void, GLuint index, GLshort v]
  VertexAttrib4Nub: [void, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte
      w]
  VertexAttrib4Nubv: [void, GLuint index, GLubyte v]
  VertexAttrib4Nuiv: [void, GLuint index, GLuint v]
  VertexAttrib4Nusv: [void, GLuint index, GLushort v]
  VertexAttrib4bv: [void, GLuint index, GLbyte v]
  VertexAttrib4d: [void, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble
      w]
  VertexAttrib4dv: [void, GLuint index, GLdouble v]
  VertexAttrib4f: [void, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w]
  VertexAttrib4fv: [void, GLuint index, GLfloat v]
  VertexAttrib4iv: [void, GLuint index, GLint v]
  VertexAttrib4s: [void, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w]
  VertexAttrib4sv: [void, GLuint index, GLshort v]
  VertexAttrib4ubv: [void, GLuint index, GLubyte v]
  VertexAttrib4uiv: [void, GLuint index, GLuint v]
  VertexAttrib4usv: [void, GLuint index, GLushort v]
  VertexAttribPointer: [void, GLuint index, GLint size, GLenum type, GLboolean normalized,
    GLsizei stride, GLvoid pointer]
VERSION_2_1:
  UniformMatrix2x3fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix2x4fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix3x2fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix3x4fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix4x2fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
  UniformMatrix4x3fv: [void, GLint location, GLsizei count, GLboolean transpose, GLfloat
      value]
VERSION_3_0:
  BeginConditionalRender: [void, GLuint id, GLenum mode]
  BeginTransformFeedback: [void, GLenum primitiveMode]
  BindBufferBase: [void, GLenum target, GLuint index, GLuint buffer]
  BindBufferRange: [void, GLenum target, GLuint index, GLuint buffer, GLintptr offset,
    GLsizeiptr size]
  BindFragDataLocation: [void, GLuint program, GLuint color, GLchar name]
  ClampColor: [void, GLenum target, GLenum clamp]
  ClearBufferfi: [void, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil]
  ClearBufferfv: [void, GLenum buffer, GLint drawbuffer, GLfloat value]
  ClearBufferiv: [void, GLenum buffer, GLint drawbuffer, GLint value]
  ClearBufferuiv: [void, GLenum buffer, GLint drawbuffer, GLuint value]
  ColorMaski: [void, GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean
      a]
  Disablei: [void, GLenum target, GLuint index]
  Enablei: [void, GLenum target, GLuint index]
  EndConditionalRender: [void]
  EndTransformFeedback: [void]
  GetBooleani_v: [void, GLenum target, GLuint index, GLboolean data]
  GetFragDataLocation: [Int32, GLuint program, GLchar name]
  GetIntegeri_v: [void, GLenum target, GLuint index, GLint data]
  GetStringi: [String, GLenum name, GLuint index]
  GetTexParameterIiv: [void, GLenum target, GLenum pname, GLint params]
  GetTexParameterIuiv: [void, GLenum target, GLenum pname, GLuint params]
  GetTransformFeedbackVarying: [void, GLuint program, GLuint index, GLsizei bufSize,
    GLsizei length, GLsizei size, GLenum type, GLchar name]
  GetUniformuiv: [void, GLuint program, GLint location, GLuint params]
  GetVertexAttribIiv: [void, GLuint index, GLenum pname, GLint params]
  GetVertexAttribIuiv: [void, GLuint index, GLenum pname, GLuint params]
  IsEnabledi: [Boolean, GLenum target, GLuint index]
  TexParameterIiv: [void, GLenum target, GLenum pname, GLint params]
  TexParameterIuiv: [void, GLenum target, GLenum pname, GLuint params]
  TransformFeedbackVaryings: [void, GLuint program, GLsizei count, GLchar*const varyings,
    GLenum bufferMode]
  Uniform1ui: [void, GLint location, GLuint v0]
  Uniform1uiv: [void, GLint location, GLsizei count, GLuint value]
  Uniform2ui: [void, GLint location, GLuint v0, GLuint v1]
  Uniform2uiv: [void, GLint location, GLsizei count, GLuint value]
  Uniform3ui: [void, GLint location, GLuint v0, GLuint v1, GLuint v2]
  Uniform3uiv: [void, GLint location, GLsizei count, GLuint value]
  Uniform4ui: [void, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3]
  Uniform4uiv: [void, GLint location, GLsizei count, GLuint value]
  VertexAttribI1i: [void, GLuint index, GLint x]
  VertexAttribI1iv: [void, GLuint index, GLint v]
  VertexAttribI1ui: [void, GLuint index, GLuint x]
  VertexAttribI1uiv: [void, GLuint index, GLuint v]
  VertexAttribI2i: [void, GLuint index, GLint x, GLint y]
  VertexAttribI2iv: [void, GLuint index, GLint v]
  VertexAttribI2ui: [void, GLuint index, GLuint x, GLuint y]
  VertexAttribI2uiv: [void, GLuint index, GLuint v]
  VertexAttribI3i: [void, GLuint index, GLint x, GLint y, GLint z]
  VertexAttribI3iv: [void, GLuint index, GLint v]
  VertexAttribI3ui: [void, GLuint index, GLuint x, GLuint y, GLuint z]
  VertexAttribI3uiv: [void, GLuint index, GLuint v]
  VertexAttribI4bv: [void, GLuint index, GLbyte v]
  VertexAttribI4i: [void, GLuint index, GLint x, GLint y, GLint z, GLint w]
  VertexAttribI4iv: [void, GLuint index, GLint v]
  VertexAttribI4sv: [void, GLuint index, GLshort v]
  VertexAttribI4ubv: [void, GLuint index, GLubyte v]
  VertexAttribI4ui: [void, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w]
  VertexAttribI4uiv: [void, GLuint index, GLuint v]
  VertexAttribI4usv: [void, GLuint index, GLushort v]
  VertexAttribIPointer: [void, GLuint index, GLint size, GLenum type, GLsizei stride,
    GLvoid pointer]
VERSION_3_1:
  DrawArraysInstanced: [void, GLenum mode, GLint first, GLsizei count, GLsizei instancecount]
  DrawElementsInstanced: [void, GLenum mode, GLsizei count, GLenum type, GLvoid indices,
    GLsizei instancecount]
  PrimitiveRestartIndex: [void, GLuint index]
  TexBuffer: [void, GLenum target, GLenum internalformat, GLuint buffer]
VERSION_3_2:
  FramebufferTexture: [void, GLenum target, GLenum attachment, GLuint texture, GLint
      level]
  GetBufferParameteri64v: [void, GLenum target, GLenum pname, GLint64 params]
  GetInteger64i_v: [void, GLenum target, GLuint index, GLint64 data]
VERSION_3_3:
  VertexAttribDivisor: [void, GLuint index, GLuint divisor]
VERSION_4_0:
  BlendEquationSeparatei: [void, GLuint buf, GLenum modeRGB, GLenum modeAlpha]
  BlendEquationi: [void, GLuint buf, GLenum mode]
  BlendFuncSeparatei: [void, GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha,
    GLenum dstAlpha]
  BlendFunci: [void, GLuint buf, GLenum src, GLenum dst]
  MinSampleShading: [void, GLfloat value]
